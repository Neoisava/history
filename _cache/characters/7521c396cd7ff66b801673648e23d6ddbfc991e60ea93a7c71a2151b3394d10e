{"key":"data/default-user/characters/修仙之路2.0.png-1748415646199.2156","value":"{\"name\":\"修仙之路2.0\",\"description\":\"{\\r\\n  \\\"游戏名称\\\": \\\"修仙之路\\\",\\r\\n  \\\"游戏类型\\\": \\\"文字冒险游戏\\\",\\r\\n  \\\"游戏背景\\\": {\\r\\n    \\\"简介\\\": \\\"在一个充满神秘力量的修仙世界中,玩家将从一个普通的修行者开始,通过不断修炼和历练,逐步提升境界,最终追求长生之道。\\\",\\r\\n    }\\r\\n  },\\r\\n  \\\"游戏特色\\\": {\\r\\n      \\\"世界选择\\\": {\\r\\n        \\\"等级\\\": [\\\"SS级\\\", \\\"S级\\\", \\\"A级\\\", \\\"B级\\\", \\\"C级\\\", \\\"D级\\\"],\\r\\n        \\\"特点\\\": \\\"不同等级的世界有不同的修行体系和上限\\\"\\r\\n      }\\r\\n    },\\r\\n    \\\"核心属性\\\": {\\r\\n      \\\"心性\\\": \\\"决定修炼速度和心境修为\\\",\\r\\n      \\\"根骨\\\": \\\"影响修炼资质和体魄强度\\\",\\r\\n      \\\"悟性\\\": \\\"影响功法领悟和道法参悟\\\",\\r\\n      \\\"气运\\\": \\\"影响机缘获取和危机规避\\\",\\r\\n      \\\"法力\\\": \\\"决定法术威力和真元强度\\\",\\r\\n      \\\"魅力\\\": \\\"影响人际关系和声望获取\\\"\\r\\n    },\\r\\n    \\\"技艺系统\\\": {\\r\\n      \\\"武学\\\": [\\\"掌法\\\", \\\"指法\\\", \\\"拳法\\\", \\\"剑法\\\", \\\"枪法\\\", \\\"刀法\\\"],\\r\\n      \\\"丹道\\\": \\\"炼丹术\\\",\\r\\n      \\\"器道\\\": \\\"炼器术\\\"\\r\\n\\r\\n    },\\r\\n    \\\"社交系统\\\": {\\r\\n      \\\"声望\\\": \\\"分为正道声望和魔道声望\\\",\\r\\n      \\\"人际关系\\\": \\\"可与NPC建立各种关系\\\",\\r\\n      \\\"宗门\\\": \\\"可加入宗门获得传承\\\"\\r\\n    }\\r\\n  },\\r\\n  \\\"游戏玩法\\\": {\\r\\n    \\\"修炼\\\": \\\"通过打坐、炼丹、炼器等方式提升实力\\\",\\r\\n    \\\"历练\\\": \\\"外出历练,获取机缘和资源\\\",\\r\\n    \\\"任务\\\": \\\"完成各类任务获得奖励\\\",\\r\\n    \\\"社交\\\": \\\"与其他修士互动,建立关系网络\\\",\\r\\n    \\\"宗门\\\": \\\"参与宗门活动,获取宗门资源\\\"\\r\\n  },\\r\\n  \\\"游戏特点\\\": [\\r\\n    \\\"丰富的世界观和完整的修行体系\\\",\\r\\n    \\\"多样化的角色创建和发展路线\\\",\\r\\n    \\\"深度的社交系统和人际关系\\\",\\r\\n    \\\"自由度高的剧情发展\\\",\\r\\n    \\\"独特的宗门系统\\\"\\r\\n  ]\\r\\n}\",\"personality\":\"\",\"scenario\":\"\",\"first_mes\":\"【poaries】\",\"mes_example\":\"\",\"creatorcomment\":\"\",\"avatar\":\"none\",\"talkativeness\":\"0.5\",\"fav\":false,\"tags\":[],\"spec\":\"chara_card_v3\",\"spec_version\":\"3.0\",\"data\":{\"name\":\"修仙之路2.0\",\"description\":\"{\\r\\n  \\\"游戏名称\\\": \\\"修仙之路\\\",\\r\\n  \\\"游戏类型\\\": \\\"文字冒险游戏\\\",\\r\\n  \\\"游戏背景\\\": {\\r\\n    \\\"简介\\\": \\\"在一个充满神秘力量的修仙世界中,玩家将从一个普通的修行者开始,通过不断修炼和历练,逐步提升境界,最终追求长生之道。\\\",\\r\\n    }\\r\\n  },\\r\\n  \\\"游戏特色\\\": {\\r\\n      \\\"世界选择\\\": {\\r\\n        \\\"等级\\\": [\\\"SS级\\\", \\\"S级\\\", \\\"A级\\\", \\\"B级\\\", \\\"C级\\\", \\\"D级\\\"],\\r\\n        \\\"特点\\\": \\\"不同等级的世界有不同的修行体系和上限\\\"\\r\\n      }\\r\\n    },\\r\\n    \\\"核心属性\\\": {\\r\\n      \\\"心性\\\": \\\"决定修炼速度和心境修为\\\",\\r\\n      \\\"根骨\\\": \\\"影响修炼资质和体魄强度\\\",\\r\\n      \\\"悟性\\\": \\\"影响功法领悟和道法参悟\\\",\\r\\n      \\\"气运\\\": \\\"影响机缘获取和危机规避\\\",\\r\\n      \\\"法力\\\": \\\"决定法术威力和真元强度\\\",\\r\\n      \\\"魅力\\\": \\\"影响人际关系和声望获取\\\"\\r\\n    },\\r\\n    \\\"技艺系统\\\": {\\r\\n      \\\"武学\\\": [\\\"掌法\\\", \\\"指法\\\", \\\"拳法\\\", \\\"剑法\\\", \\\"枪法\\\", \\\"刀法\\\"],\\r\\n      \\\"丹道\\\": \\\"炼丹术\\\",\\r\\n      \\\"器道\\\": \\\"炼器术\\\"\\r\\n\\r\\n    },\\r\\n    \\\"社交系统\\\": {\\r\\n      \\\"声望\\\": \\\"分为正道声望和魔道声望\\\",\\r\\n      \\\"人际关系\\\": \\\"可与NPC建立各种关系\\\",\\r\\n      \\\"宗门\\\": \\\"可加入宗门获得传承\\\"\\r\\n    }\\r\\n  },\\r\\n  \\\"游戏玩法\\\": {\\r\\n    \\\"修炼\\\": \\\"通过打坐、炼丹、炼器等方式提升实力\\\",\\r\\n    \\\"历练\\\": \\\"外出历练,获取机缘和资源\\\",\\r\\n    \\\"任务\\\": \\\"完成各类任务获得奖励\\\",\\r\\n    \\\"社交\\\": \\\"与其他修士互动,建立关系网络\\\",\\r\\n    \\\"宗门\\\": \\\"参与宗门活动,获取宗门资源\\\"\\r\\n  },\\r\\n  \\\"游戏特点\\\": [\\r\\n    \\\"丰富的世界观和完整的修行体系\\\",\\r\\n    \\\"多样化的角色创建和发展路线\\\",\\r\\n    \\\"深度的社交系统和人际关系\\\",\\r\\n    \\\"自由度高的剧情发展\\\",\\r\\n    \\\"独特的宗门系统\\\"\\r\\n  ]\\r\\n}\",\"personality\":\"\",\"scenario\":\"\",\"first_mes\":\"【poaries】\",\"mes_example\":\"\",\"creator_notes\":\"\",\"system_prompt\":\"\",\"post_history_instructions\":\"\",\"tags\":[],\"creator\":\"POARIES\",\"character_version\":\"https://discord.gg/MsNHEwaQ\",\"alternate_greetings\":[],\"extensions\":{\"talkativeness\":\"0.5\",\"fav\":false,\"world\":\"角色推进世界书DLC\",\"depth_prompt\":{\"prompt\":\"\",\"depth\":4,\"role\":\"system\"},\"regex_scripts\":[{\"id\":\"3e4460ab-7cca-4c6f-b686-f8cab136065e\",\"scriptName\":\"正文 升级版\",\"disabled\":false,\"runOnEdit\":true,\"findRegex\":\"<gametext>([\\\\s\\\\S]*?)</gametext>\",\"replaceString\":\"```\\n<!DOCTYPE html>\\n<html lang=\\\"zh\\\">\\n\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <title>修仙界面</title>\\n  <style>\\n    @import url('https://static.zeoseven.com/zsft/235/main/result.css');\\n\\n    :root {\\n      --global-font: \\\"chengrongguangke\\\";\\n    }\\n\\n    body {\\n      margin: 0;\\n      padding: 0;\\n      cursor: url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"%234CAF50\\\" stroke-width=\\\"2\\\"><path d=\\\"M12 2L2 12l10 10 10-10L12 2z\\\"/></svg>') 12 12, auto;\\n      height: 800px;\\n      background: url('https://pub-0f03753252fb439e966a538d805f20ef.r2.dev/docs/1734444679152.gif')no-repeat center center fixed;\\n      background-size: cover;\\n      font-family: var(--global-font);\\n      color: #333;\\n    }\\n\\n    button,\\n    a,\\n    select,\\n    input[type=\\\"range\\\"],\\n    input[type=\\\"color\\\"] {\\n      cursor: url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"%234CAF50\\\" stroke=\\\"%234CAF50\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"6\\\"/></svg>') 12 12, pointer;\\n    }\\n\\n    .nav-bar {\\n      position: fixed;\\n      top: 0;\\n      width: 100%;\\n      height: 60px;\\n      background: linear-gradient(to right, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.7));\\n      backdrop-filter: blur(5px);\\n      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      z-index: 1000;\\n    }\\n\\n    .nav-button {\\n      margin: 0 20px;\\n      padding: 10px 20px;\\n      border: none;\\n      background: transparent;\\n      font-family: inherit;\\n      font-size: 18px;\\n      color: #333;\\n      position: relative;\\n      cursor: pointer;\\n      transition: all 0.3s ease;\\n    }\\n\\n    .nav-button::after {\\n      content: '';\\n      position: absolute;\\n      bottom: 0;\\n      left: 50%;\\n      width: 0;\\n      height: 2px;\\n      background: #000;\\n      transition: all 0.3s ease;\\n      transform: translateX(-50%);\\n    }\\n\\n    .nav-button:hover {\\n      color: #000;\\n    }\\n\\n    .nav-button:hover::after {\\n      width: 80%;\\n    }\\n\\n    .nav-button.active {\\n      color: #000;\\n    }\\n\\n    .nav-button.active::after {\\n      width: 80%;\\n    }\\n\\n    .content {\\n      margin-top: 80px;\\n      padding: 20px;\\n\\n      min-height: calc(100vh - 100px);\\n    }\\n\\n    /* 自定义滚动条样式 */\\n    ::-webkit-scrollbar {\\n      width: 8px;\\n      height: 8px;\\n    }\\n\\n    ::-webkit-scrollbar-track {\\n      background: rgba(255, 255, 255, 0.1);\\n      border-radius: 4px;\\n    }\\n\\n    ::-webkit-scrollbar-thumb {\\n      background: linear-gradient(to bottom, #4CAF50, #8BC34A);\\n      border-radius: 4px;\\n      border: 2px solid transparent;\\n      background-clip: padding-box;\\n    }\\n\\n    ::-webkit-scrollbar-thumb:hover {\\n      background: linear-gradient(to bottom, #45a049, #7cb342);\\n      border: 1px solid transparent;\\n      background-clip: padding-box;\\n    }\\n\\n    .panel {\\n      display: none;\\n      background: linear-gradient(to bottom right, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.7));\\n      backdrop-filter: blur(10px);\\n      border-radius: 10px;\\n      scrollbar-width: thin;\\n      scrollbar-color: #4CAF50 rgba(255, 255, 255, 0.1);\\n      padding: 10px;\\n      font-family: inherit;\\n      margin: 20px auto;\\n      max-width: 800px;\\n      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\\n      animation: fadeIn 0.5s ease;\\n      max-height: 80vh;\\n      overflow-y: auto;\\n      overflow-x: hidden;\\n    }\\n\\n    .panel.active {\\n      display: block;\\n    }\\n\\n    @keyframes fadeIn {\\n      from {\\n        opacity: 0;\\n        transform: translateY(20px);\\n      }\\n\\n      to {\\n        opacity: 1;\\n        transform: translateY(0);\\n      }\\n    }\\n\\n    .interaction-history {\\n      scrollbar-width: thin;\\n      scrollbar-color: #4CAF50 rgba(255, 255, 255, 0.1);\\n    }\\n\\n    .status-bar {\\n      display: grid;\\n      grid-template-columns: repeat(3, 1fr);\\n      gap: 20px;\\n      padding: 15px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 8px;\\n      margin-bottom: 20px;\\n    }\\n\\n    .status-item {\\n      display: flex;\\n      font-family: inherit;\\n      flex-direction: column;\\n      align-items: flex-start;\\n    }\\n\\n    .status-label {\\n      font-size: 0.9em;\\n      color: #666;\\n    }\\n\\n    .status-value {\\n      font-size: 1.1em;\\n      color: #000;\\n    }\\n\\n    .progress-bar {\\n      width: 150px;\\n      height: 15px;\\n      background: rgba(255, 255, 255, 0.5);\\n      border-radius: 7px;\\n      margin: 5px 0;\\n      display: inline-block;\\n      margin-left: 10px;\\n      vertical-align: middle;\\n    }\\n\\n    .progress {\\n      height: 100%;\\n      background: linear-gradient(to right, #4CAF50, #8BC34A);\\n      border-radius: 7px;\\n      transition: width 0.3s ease;\\n    }\\n\\n    .skill-item,\\n    .artifact-item {\\n      margin: 10px 0;\\n      font-family: inherit;\\n      padding: 10px;\\n      background: rgba(255, 255, 255, 0.3);\\n      border-radius: 5px;\\n    }\\n\\n    .skill-header,\\n    .artifact-header {\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n    }\\n\\n    .detail-btn {\\n      padding: 5px 15px;\\n      background: linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1));\\n      border: 1px solid rgba(255, 255, 255, 0.3);\\n      border-radius: 15px;\\n      cursor: pointer;\\n      font-family: var(--global-font);\\n      color: #333;\\n      font-size: 0.9em;\\n      transition: all 0.3s ease;\\n      backdrop-filter: blur(5px);\\n      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\\n      position: relative;\\n      overflow: hidden;\\n    }\\n\\n    .detail-btn::before {\\n      content: '';\\n      position: absolute;\\n      top: 0;\\n      left: -100%;\\n      width: 100%;\\n      height: 100%;\\n      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\\n      transition: 0.5s;\\n    }\\n\\n    .detail-btn:hover {\\n      background: linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2));\\n      transform: translateY(-2px);\\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\\n      color: #000;\\n    }\\n\\n    .detail-btn:hover::before {\\n      left: 100%;\\n    }\\n\\n    .detail-btn:active {\\n      transform: translateY(0);\\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .skill-details {\\n      display: none;\\n      margin-top: 10px;\\n      padding: 10px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 5px;\\n    }\\n\\n    /* 关系系统样式 */\\n    .relationship-category {\\n      margin-bottom: 30px;\\n      background: rgba(255, 255, 255, 0.1);\\n      border-radius: 8px;\\n      padding: 15px;\\n    }\\n\\n    .relationship-category h3 {\\n      margin: 0 0 15px 0;\\n      padding-bottom: 8px;\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .relationship-list {\\n      display: flex;\\n      flex-direction: column;\\n      gap: 15px;\\n    }\\n\\n    .relationship-item {\\n      background: rgba(255, 255, 255, 0.2);\\n      padding: 20px;\\n      border-radius: 8px;\\n      transition: all 0.3s ease;\\n      position: relative;\\n    }\\n\\n    .relationship-item:hover {\\n      transform: translateX(10px);\\n      background: rgba(255, 255, 255, 0.3);\\n    }\\n\\n    .character-name {\\n      font-size: 1.1em;\\n      font-weight: bold;\\n      margin-bottom: 5px;\\n    }\\n\\n    .favor-value {\\n      font-size: 0.9em;\\n      font-weight: normal;\\n      color: #666;\\n    }\\n\\n    .character-info {\\n      color: #444;\\n      margin-bottom: 5px;\\n    }\\n\\n    .character-status {\\n      font-size: 0.9em;\\n      color: #666;\\n      font-style: italic;\\n    }\\n\\n    .character-details {\\n      display: none;\\n      margin-top: 15px;\\n      padding-top: 15px;\\n      border-top: 1px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .detail-section {\\n      margin-bottom: 15px;\\n    }\\n\\n    .detail-section h4 {\\n      margin: 0 0 10px 0;\\n      color: #333;\\n    }\\n\\n    .interaction-history {\\n      max-height: 150px;\\n      overflow-y: auto;\\n    }\\n\\n    .interaction-item {\\n      display: flex;\\n      gap: 10px;\\n      margin-bottom: 5px;\\n      font-size: 0.9em;\\n    }\\n\\n    .interaction-date {\\n      color: #666;\\n      min-width: 120px;\\n    }\\n\\n    .detail-toggle {\\n      padding: 5px 15px;\\n      background: linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1));\\n      border: 1px solid rgba(255, 255, 255, 0.3);\\n      border-radius: 15px;\\n      cursor: pointer;\\n      font-family: var(--global-font);\\n      color: #333;\\n      font-size: 0.9em;\\n      transition: all 0.3s ease;\\n      backdrop-filter: blur(5px);\\n      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\\n      position: relative;\\n      overflow: hidden;\\n    }\\n\\n    .detail-toggle::before {\\n      content: '';\\n      position: absolute;\\n      top: 0;\\n      left: -100%;\\n      width: 100%;\\n      height: 100%;\\n      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\\n      transition: 0.5s;\\n    }\\n\\n    .detail-toggle:hover {\\n      background: linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.2));\\n      transform: translateY(-2px);\\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\\n      color: #000;\\n    }\\n\\n    .detail-toggle:hover::before {\\n      left: 100%;\\n    }\\n\\n    .detail-toggle:active {\\n      transform: translateY(0);\\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .hostile {\\n      background: rgba(244, 67, 54, 0.1);\\n    }\\n\\n    .social-controls {\\n      margin-bottom: 20px;\\n      display: flex;\\n      gap: 20px;\\n      align-items: center;\\n    }\\n\\n    .search-box input {\\n      padding: 8px 15px;\\n      border: 1px solid rgba(0, 0, 0, 0.1);\\n      border-radius: 4px;\\n      width: 200px;\\n\\n    }\\n\\n    .filter-controls {\\n      display: flex;\\n      gap: 10px;\\n    }\\n\\n    .filter-controls select {\\n      padding: 8px;\\n      border: 1px solid rgba(0, 0, 0, 0.1);\\n      border-radius: 4px;\\n\\n    }\\n\\n    /* 在已有的style标签内添加以下样式 */\\n    .cultivation-system {\\n      margin: 15px 0;\\n      padding: 10px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 5px;\\n    }\\n\\n    .attributes-section {\\n      margin: 20px 0;\\n    }\\n\\n    .radar-chart {\\n      position: relative;\\n      width: 300px;\\n      height: 300px;\\n      margin: 20px auto;\\n    }\\n\\n    .radar-chart canvas {\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n    }\\n\\n    .attributes-list {\\n      display: flex;\\n      flex-wrap: wrap;\\n      gap: 15px;\\n      margin-top: 15px;\\n    }\\n\\n    .attribute-item {\\n      flex: 1 1 calc(33.33% - 10px);\\n      min-width: 150px;\\n      padding: 10px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 5px;\\n      text-align: center;\\n    }\\n\\n    .attribute-name {\\n      font-weight: bold;\\n      margin-bottom: 5px;\\n    }\\n\\n    .attribute-value {\\n      color: #4CAF50;\\n    }\\n\\n    /* 大事记时间线样式 */\\n    .timeline-header {\\n      padding: 10px 20px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 5px;\\n      margin-bottom: 20px;\\n      text-align: right;\\n      font-size: 0.9em;\\n      color: #666;\\n    }\\n\\n    .timeline-container {\\n      position: relative;\\n      padding: 20px 0;\\n      margin-left: 50px;\\n    }\\n\\n    .timeline-line {\\n      position: absolute;\\n      left: 0;\\n      top: 0;\\n      bottom: 0;\\n      width: 2px;\\n      background: linear-gradient(to bottom, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2));\\n    }\\n\\n    .timeline-event {\\n      position: relative;\\n      font-family: inherit;\\n      margin-bottom: 30px;\\n      padding-left: 30px;\\n      transition: all 0.3s ease;\\n    }\\n\\n    .timeline-event:hover {\\n      transform: translateX(10px);\\n    }\\n\\n    .timeline-event::before {\\n      content: '';\\n      position: absolute;\\n      left: -5px;\\n      top: 0;\\n      width: 12px;\\n      height: 12px;\\n      border-radius: 50%;\\n      background: #fff;\\n      border: 2px solid #4CAF50;\\n    }\\n\\n    .timeline-date {\\n      font-size: 0.9em;\\n      color: #666;\\n      margin-bottom: 5px;\\n    }\\n\\n    .timeline-content {\\n      background: rgba(255, 255, 255, 0.2);\\n      padding: 15px;\\n      border-radius: 5px;\\n      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);\\n    }\\n\\n    .timeline-title {\\n      font-weight: bold;\\n      margin-bottom: 5px;\\n      color: #333;\\n    }\\n\\n    .timeline-description {\\n      font-size: 0.95em;\\n      color: #444;\\n    }\\n\\n    .timeline-impact {\\n      margin-top: 10px;\\n      font-size: 0.9em;\\n      color: #666;\\n      font-style: italic;\\n    }\\n\\n    .timeline-tag {\\n      display: inline-block;\\n      padding: 2px 8px;\\n      background: rgba(76, 175, 80, 0.1);\\n      border-radius: 3px;\\n      font-size: 0.8em;\\n      color: #4CAF50;\\n      margin-right: 5px;\\n    }\\n\\n    .skill-header strong {\\n      font-size: 1.1em;\\n      margin-right: 8px;\\n    }\\n\\n    .skill-header em {\\n      font-style: italic;\\n      color: #666;\\n      font-size: 0.9em;\\n    }\\n\\n    .skill-details {\\n      display: none;\\n      margin-top: 10px;\\n      padding: 10px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 5px;\\n      line-height: 1.5;\\n    }\\n\\n    .skill-details p {\\n      margin: 5px 0;\\n    }\\n\\n    /* 设置面板样式 */\\n    .settings-section {\\n      padding: 20px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 8px;\\n      margin-bottom: 20px;\\n    }\\n\\n    .settings-group {\\n      margin-bottom: 15px;\\n    }\\n\\n    .settings-group h3 {\\n      margin-bottom: 10px;\\n      color: #333;\\n    }\\n\\n    .setting-item {\\n      display: flex;\\n      align-items: center;\\n      margin-bottom: 10px;\\n      padding: 10px;\\n      background: rgba(255, 255, 255, 0.1);\\n      border-radius: 5px;\\n    }\\n\\n    .setting-label {\\n      flex: 1;\\n      margin-right: 15px;\\n    }\\n\\n    .setting-control {\\n      flex: 2;\\n    }\\n\\n    .setting-control input[type=\\\"range\\\"] {\\n      width: 100%;\\n    }\\n\\n    .setting-control select {\\n      width: 100%;\\n      padding: 5px;\\n      border-radius: 4px;\\n      border: 1px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .color-preview {\\n      width: 30px;\\n      height: 30px;\\n      border-radius: 4px;\\n      margin-left: 10px;\\n      border: 1px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    /* 宗门信息样式 */\\n    .sect-content {\\n      display: grid;\\n      grid-template-columns: repeat(2, 1fr);\\n      gap: 20px;\\n    }\\n\\n    .sect-basic {\\n      grid-column: 1 / -1;\\n    }\\n\\n    .story-content {\\n      line-height: 1.8;\\n      padding: 20px;\\n    }\\n\\n    .story-content p {\\n      text-indent: 2em;\\n      margin: 1em 0;\\n      text-align: justify;\\n    }\\n\\n    /* 平板设备 - 屏幕宽度小于 1024px */\\n    @media screen and (max-width: 1024px) {\\n      .nav-bar {\\n        height: 50px;\\n      }\\n\\n      .nav-button {\\n        margin: 0 10px;\\n        padding: 8px 15px;\\n        font-size: 16px;\\n      }\\n\\n      .panel {\\n        width: 95%;\\n        margin: 15px auto;\\n      }\\n\\n      .status-bar {\\n        grid-template-columns: repeat(2, 1fr);\\n      }\\n\\n      .radar-chart {\\n        width: 250px;\\n        height: 250px;\\n      }\\n\\n      .attributes-list {\\n        grid-template-columns: repeat(2, 1fr);\\n      }\\n\\n      .sect-content {\\n        grid-template-columns: 1fr;\\n      }\\n    }\\n\\n    /* 手机设备 - 屏幕宽度小于 768px */\\n    @media screen and (max-width: 768px) {\\n      .nav-bar {\\n        height: auto;\\n        padding: 5px;\\n        flex-wrap: wrap;\\n      }\\n\\n      .nav-button {\\n        margin: 5px;\\n        padding: 6px 12px;\\n        font-size: 14px;\\n        flex: 1 1 calc(33.33% - 10px);\\n        text-align: center;\\n      }\\n\\n      .content {\\n        margin-top: 120px;\\n        padding: 10px;\\n      }\\n\\n      .panel {\\n        width: 100%;\\n        margin: 10px auto;\\n        padding: 10px;\\n      }\\n\\n      .status-bar {\\n        grid-template-columns: 1fr;\\n        gap: 10px;\\n      }\\n\\n      .radar-chart {\\n        width: 200px;\\n        height: 200px;\\n      }\\n\\n      .attributes-list {\\n        grid-template-columns: 1fr;\\n      }\\n\\n      .relationship-item {\\n        padding: 15px;\\n      }\\n\\n      .timeline-container {\\n        margin-left: 30px;\\n      }\\n\\n      .timeline-event {\\n        padding-left: 20px;\\n      }\\n\\n      .setting-item {\\n        flex-direction: column;\\n        align-items: flex-start;\\n      }\\n\\n      .setting-label {\\n        margin-bottom: 5px;\\n      }\\n\\n      .setting-control {\\n        width: 100%;\\n      }\\n    }\\n\\n    /* 小型手机设备 - 屏幕宽度小于 480px */\\n    @media screen and (max-width: 480px) {\\n      .nav-button {\\n        font-size: 12px;\\n        padding: 5px 8px;\\n      }\\n\\n      .content {\\n        margin-top: 140px;\\n        padding: 5px;\\n      }\\n\\n      .radar-chart {\\n        width: 180px;\\n        height: 180px;\\n      }\\n\\n      .skill-item,\\n      .artifact-item {\\n        padding: 8px;\\n      }\\n\\n      .skill-header,\\n      .artifact-header {\\n        flex-direction: column;\\n        align-items: flex-start;\\n      }\\n\\n      .detail-btn {\\n        margin-top: 5px;\\n        width: 100%;\\n        text-align: center;\\n      }\\n\\n      .timeline-event::before {\\n        width: 8px;\\n        height: 8px;\\n      }\\n\\n      .timeline-content {\\n        padding: 10px;\\n      }\\n\\n      .search-box input {\\n        width: 100%;\\n      }\\n\\n      .filter-controls {\\n        width: 100%;\\n      }\\n\\n      .filter-controls select {\\n        width: 100%;\\n      }\\n    }\\n\\n    /* 处理横屏模式 */\\n    @media screen and (max-height: 600px) and (orientation: landscape) {\\n      .nav-bar {\\n        position: static;\\n        margin-bottom: 10px;\\n      }\\n\\n      .content {\\n        margin-top: 10px;\\n      }\\n\\n      .panel {\\n        max-height: none;\\n      }\\n\\n      .radar-chart {\\n        width: 200px;\\n        height: 200px;\\n      }\\n    }\\n\\n    /* 优化触摸设备交互 */\\n    @media (hover: none) and (pointer: coarse) {\\n\\n      .nav-button,\\n      .detail-btn,\\n      .detail-toggle,\\n      .setting-control input,\\n      .setting-control select {\\n        min-height: 44px;\\n        min-width: 44px;\\n      }\\n\\n      .skill-header,\\n      .artifact-header {\\n        gap: 10px;\\n      }\\n\\n      .relationship-item:hover {\\n        transform: none;\\n      }\\n\\n      .timeline-event:hover {\\n        transform: none;\\n      }\\n\\n      ::-webkit-scrollbar {\\n        width: 12px;\\n        height: 12px;\\n      }\\n    }\\n\\n    .reset-settings-btn {\\n      padding: 10px 20px;\\n      background: linear-gradient(135deg, #f44336, #d32f2f);\\n      color: white;\\n      border: none;\\n      border-radius: 5px;\\n      cursor: pointer;\\n      font-family: var(--global-font);\\n      transition: all 0.3s ease;\\n      margin-top: 20px;\\n    }\\n\\n    .reset-settings-btn:hover {\\n      background: linear-gradient(135deg, #d32f2f, #b71c1c);\\n      transform: translateY(-2px);\\n    }\\n\\n    .reset-settings-btn:active {\\n      transform: translateY(0);\\n    }\\n\\n    /* 亲密关系样式 */\\n    .intimate-category {\\n      margin-bottom: 30px;\\n      background: rgba(255, 255, 255, 0.1);\\n      border-radius: 8px;\\n      padding: 15px;\\n    }\\n\\n    .intimate-category h3 {\\n      margin: 0 0 15px 0;\\n      padding-bottom: 8px;\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .intimate-list {\\n      display: flex;\\n      flex-direction: column;\\n      gap: 15px;\\n    }\\n\\n    .intimate-item {\\n      background: rgba(255, 255, 255, 0.2);\\n      padding: 20px;\\n      border-radius: 8px;\\n      transition: all 0.3s ease;\\n      position: relative;\\n    }\\n\\n    .intimate-item:hover {\\n      transform: translateX(10px);\\n      background: rgba(255, 255, 255, 0.3);\\n    }\\n\\n    .intimate-details {\\n      margin-top: 15px;\\n      padding: 15px;\\n      background: rgba(255, 255, 255, 0.1);\\n      border-radius: 8px;\\n    }\\n\\n    .intimate-cultivation {\\n      margin: 10px 0;\\n    }\\n\\n    .intimate-skills {\\n      margin: 10px 0;\\n    }\\n\\n    .intimate-location {\\n      margin: 10px 0;\\n      font-style: italic;\\n    }\\n\\n    .message-modal {\\n      display: none;\\n      position: fixed;\\n      top: 50%;\\n      left: 50%;\\n      transform: translate(-50%, -50%);\\n      background: white;\\n      padding: 20px;\\n      border-radius: 8px;\\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\\n      z-index: 1000;\\n      width: 80%;\\n      max-width: 500px;\\n    }\\n\\n    .modal-content {\\n      display: flex;\\n      flex-direction: column;\\n      gap: 15px;\\n    }\\n\\n    .modal-textarea {\\n      width: 100%;\\n      height: 150px;\\n      padding: 10px;\\n      border: 1px solid #ddd;\\n      border-radius: 4px;\\n      resize: vertical;\\n    }\\n\\n    .modal-buttons {\\n      display: flex;\\n      justify-content: flex-end;\\n      gap: 10px;\\n    }\\n\\n    .modal-button {\\n      padding: 8px 16px;\\n      border: none;\\n      border-radius: 4px;\\n      cursor: pointer;\\n    }\\n\\n    .send-button {\\n      background: #4CAF50;\\n      color: white;\\n    }\\n\\n    .cancel-button {\\n      background: #f44336;\\n      color: white;\\n    }\\n\\n    .modal-overlay {\\n      display: none;\\n      position: fixed;\\n      top: 0;\\n      left: 0;\\n      right: 0;\\n      bottom: 0;\\n      background: rgba(0, 0, 0, 0.5);\\n      z-index: 999;\\n    }\\n  </style>\\n</head>\\n\\n<body>\\n  <nav class=\\\"nav-bar\\\">\\n    <button class=\\\"nav-button active\\\" data-panel=\\\"content\\\">正文</button>\\n    <button class=\\\"nav-button\\\" data-panel=\\\"character\\\">主角信息</button>\\n    <button class=\\\"nav-button\\\" data-panel=\\\"social\\\">交际</button>\\n    <button class=\\\"nav-button\\\" data-panel=\\\"events\\\">大事记</button>\\n    <button class=\\\"nav-button\\\" data-panel=\\\"sect\\\">宗门</button>\\n    <button class=\\\"nav-button\\\" data-panel=\\\"setting\\\">设置</button>\\n  </nav>\\n\\n  <div class=\\\"content\\\">\\n    <!-- 正文面板 -->\\n    <div class=\\\"panel active\\\" id=\\\"content\\\">\\n      <!-- 内容由JavaScript动态生成 -->\\n    </div>\\n\\n    <!-- 主角信息面板 -->\\n    <div class=\\\"panel\\\" id=\\\"character\\\">\\n      <!-- 内容由JavaScript动态生成 -->\\n    </div>\\n\\n    <!-- 交际面板 -->\\n    <div class=\\\"panel\\\" id=\\\"social\\\">\\n      <!-- 内容由JavaScript动态生成 -->\\n    </div>\\n\\n    <!-- 大事记面板 -->\\n    <div class=\\\"panel\\\" id=\\\"events\\\">\\n      <!-- 内容由JavaScript动态生成 -->\\n    </div>\\n\\n    <!-- 宗门面板 -->\\n    <div class=\\\"panel\\\" id=\\\"sect\\\">\\n      <!-- 内容由JavaScript动态生成 -->\\n    </div>\\n\\n    <!-- 设置面板 -->\\n    <div class=\\\"panel\\\" id=\\\"setting\\\">\\n      <h2>界面设置</h2>\\n      <div class=\\\"setting-section\\\">\\n        <h3>字体设置</h3>\\n        <div class=\\\"setting-item\\\">\\n          <select id=\\\"fontSelect\\\">\\n            <option value=\\\"chengrongguangke\\\">承荣光刻</option>\\n            <option value=\\\"songti\\\">宋体</option>\\n            <option value=\\\"kaiti\\\">楷体</option>\\n          </select>\\n        </div>\\n        <div class=\\\"setting-item\\\">\\n          <label>字体大小：</label>\\n          <input type=\\\"range\\\" id=\\\"fontSize\\\" min=\\\"10\\\" max=\\\"35\\\" value=\\\"16\\\">\\n          <span id=\\\"fontSizeValue\\\">19px</span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"setting-section\\\">\\n        <h3>窗口设置</h3>\\n        <div class=\\\"setting-item\\\">\\n          <label>窗口颜色：</label>\\n          <input type=\\\"color\\\" id=\\\"windowColor\\\" value=\\\"#ffffff\\\">\\n          <div class=\\\"color-preview\\\" id=\\\"windowColorPreview\\\"></div>\\n        </div>\\n        <div class=\\\"setting-item\\\">\\n          <label>窗口透明度：</label>\\n          <input type=\\\"range\\\" id=\\\"windowOpacity\\\" min=\\\"0\\\" max=\\\"100\\\" value=\\\"81\\\">\\n          <span id=\\\"opacityValue\\\">95%</span>\\n        </div>\\n      </div>\\n      <div class=\\\"setting-section\\\">\\n        <button class=\\\"reset-settings-btn\\\" onclick=\\\"resetAndApplySettings()\\\">重置所有设置</button>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <script>\\n    // 定义游戏文本模板\\n    let gameText = `<gametext>$1</gametext>`;\\n\\n    // ==================== 数据提取模块 ====================\\n    const DataExtractor = {\\n      extractMainContent(text) {\\n        const match = text.match(/<maincontent>([\\\\s\\\\S]*?)<\\\\/maincontent>/);\\n        if (!match) return null;\\n\\n        try {\\n          const content = {};\\n          const lines = match[1].trim().split('\\\\n');\\n\\n          for (let i = 0; i < lines.length; i++) {\\n            const line = lines[i].trim();\\n            if (!line) continue;\\n\\n            if (line.startsWith('当前章节正文|')) {\\n              // 提取正文内容，从当前行开始到下一个标签或结束\\n              let storyContent = [];\\n              let j = i;\\n\\n              // 获取第一行的内容（去掉\\\"当前章节正文|\\\"前缀）\\n              const firstContent = line.substring(line.indexOf('|') + 1).trim();\\n              if (firstContent) storyContent.push(firstContent);\\n\\n              // 继续读取后续行，直到遇到新的标签或结束\\n              j++;\\n              while (j < lines.length && !lines[j].includes('</maincontent>')) {\\n                const content = lines[j].trim();\\n                if (content && !content.includes('|')) {\\n                  storyContent.push(content);\\n                }\\n                j++;\\n              }\\n\\n              // 将所有段落用<p>标签包裹\\n              content.content = storyContent\\n                .filter(p => p.trim())\\n                .map(p => `<p>${p.trim()}</p>`)\\n                .join('');\\n\\n              // 保存原始格式的文本（包含\\\"当前章节正文|\\\"）\\n              content.rawContent = line + '\\\\n' + storyContent.join('\\\\n');\\n\\n              i = j - 1; // 更新索引\\n            } else {\\n              const [key, value] = line.split('|').map(s => s.trim());\\n              content[key === '当前章节标题' ? 'title' :\\n                key === '当前时间' ? 'time' :\\n                  key === '当前位置' ? 'location' :\\n                    key === '当前财产' ? 'wealth' : key] = value;\\n            }\\n          }\\n\\n          return content;\\n        } catch (e) {\\n          console.error('解析主体内容失败:', e);\\n          return null;\\n        }\\n      },\\n\\n      extractCharacterInfo(text) {\\n        const match = text.match(/<characterinfo>([\\\\s\\\\S]*?)<\\\\/characterinfo>/);\\n        if (!match) return null;\\n\\n        try {\\n          const info = {\\n            basic: {},\\n            cultivation: {},\\n            attributes: {},\\n            realm: {},\\n            skills: [],\\n            artifacts: [],\\n            backpack: []\\n          };\\n\\n          const lines = match[1].trim().split('\\\\n');\\n          let currentSkill = {};\\n\\n          lines.forEach(line => {\\n            const [category, key, ...values] = line.split('|').map(s => s.trim());\\n\\n            switch (category) {\\n              case '基本信息':\\n                info.basic[key] = values[0];\\n                break;\\n              case '修炼体系':\\n                info.cultivation[key] = values[0];\\n                break;\\n              case '属性':\\n                info.attributes[key] = parseInt(values[0]);\\n                break;\\n              case '境界':\\n                info.realm[key] = values[0];\\n                break;\\n              case '功法':\\n                if (key === '名称') currentSkill = {};\\n                currentSkill[key] = values[0];\\n                if (key === '效果') {\\n                  info.skills.push({ ...currentSkill });\\n                }\\n                break;\\n              case '法宝':\\n                if (key === '名称') currentSkill = {};\\n                currentSkill[key] = values[0];\\n                if (key === '效果') {\\n                  info.artifacts.push({ ...currentSkill });\\n                }\\n                break;\\n              case '背包':\\n                info.backpack.push({\\n                  name: key,\\n                  description: values[0],\\n                  quantity: values[1]\\n                });\\n                break;\\n            }\\n          });\\n\\n          return info;\\n        } catch (e) {\\n          console.error('解析主角信息失败:', e);\\n          return null;\\n        }\\n      },\\n\\n      extractSocialInfo(text) {\\n        const match = text.match(/<socialinfo>([\\\\s\\\\S]*?)<\\\\/socialinfo>/);\\n        if (!match) return null;\\n\\n        try {\\n          const relationships = {};\\n          let currentType = '';\\n          let currentCharacter = null;\\n\\n          const lines = match[1].trim().split('\\\\n').filter(line =>\\n            !line.trim().startsWith('<!--') && line.trim() !== ''\\n          );\\n\\n          lines.forEach(line => {\\n            const [category, key, value, effect] = line.split('|').map(s => s.trim());\\n\\n            if (category === '关系类型') {\\n              if (currentCharacter && currentType) {\\n                if (!relationships[currentType]) {\\n                  relationships[currentType] = [];\\n                }\\n                relationships[currentType].push(currentCharacter);\\n              }\\n              currentType = key;\\n              currentCharacter = null;\\n            } else if (category === '关系人物') {\\n              currentCharacter = {\\n                name: key,\\n                details: {\\n                  interactions: [],\\n                  skills: [],\\n                  basic: {}\\n                }\\n              };\\n            } else if (currentCharacter) {\\n              switch (category) {\\n                case '人物序号':\\n                  currentCharacter.index = parseInt(key);\\n                  break;\\n                case '修为':\\n                  currentCharacter.cultivation = key;\\n                  break;\\n                case '功法':\\n                  currentCharacter.details.skills.push({\\n                    name: key,\\n                    level: value,\\n                    effect: effect\\n                  });\\n                  break;\\n                case '好感度':\\n                  currentCharacter.favor = parseInt(key);\\n                  break;\\n                case '身份':\\n                  currentCharacter.title = key;\\n                  break;\\n                case '状态':\\n                  currentCharacter.status = key;\\n                  break;\\n                case '基本信息':\\n                  currentCharacter.details.basic[key] = value;\\n                  break;\\n                case '性格特征':\\n                  currentCharacter.details.personality = key;\\n                  break;\\n                case '外貌':\\n                  currentCharacter.details.appearance = key;\\n                  break;\\n                case '穿着':\\n                  currentCharacter.details.clothing = key;\\n                  break;\\n                case '互动记录':\\n                  if (currentCharacter.details.interactions.length < 3) {\\n                    const [date, content] = key.split(':');\\n                    currentCharacter.details.interactions.push({\\n                      date: date.trim(),\\n                      content: content.trim()\\n                    });\\n                  }\\n                  break;\\n              }\\n            }\\n          });\\n\\n          // 添加最后一个角色\\n          if (currentCharacter && currentType) {\\n            if (!relationships[currentType]) {\\n              relationships[currentType] = [];\\n            }\\n            relationships[currentType].push(currentCharacter);\\n          }\\n\\n          return relationships;\\n        } catch (e) {\\n          console.error('解析社交信息失败:', e);\\n          return null;\\n        }\\n      },\\n\\n      extractTimelineInfo(text) {\\n        const match = text.match(/<timelineinfo>([\\\\s\\\\S]*?)<\\\\/timelineinfo>/);\\n        if (!match) return null;\\n\\n        try {\\n          const events = [];\\n          let currentEvent = {};\\n          let eventIndex = 0; // 添加事件序号计数器\\n\\n          const lines = match[1].trim().split('\\\\n');\\n          lines.forEach(line => {\\n            const [category, key, value] = line.split('|').map(s => s.trim());\\n\\n            if (category.startsWith('事件')) {\\n              if (key === '日期') {\\n                if (Object.keys(currentEvent).length > 0) {\\n                  events.push({ ...currentEvent });\\n                }\\n                eventIndex++; // 增加序号\\n                currentEvent = {\\n                  index: eventIndex, // 添加序号属性\\n                };\\n              }\\n\\n              switch (key) {\\n                case '日期':\\n                  currentEvent.date = value;\\n                  break;\\n                case '标题':\\n                  currentEvent.title = value;\\n                  break;\\n                case '描述':\\n                  currentEvent.description = value;\\n                  break;\\n                case '影响':\\n                  currentEvent.impact = value;\\n                  break;\\n                case '标签':\\n                  currentEvent.tags = value.split(',').map(tag => tag.trim());\\n                  break;\\n              }\\n            }\\n          });\\n\\n          // 确保添加最后一个事件\\n          if (Object.keys(currentEvent).length > 0) {\\n            events.push(currentEvent);\\n          }\\n\\n          return events;\\n        } catch (e) {\\n          console.error('解析大事记失败:', e);\\n          return null;\\n        }\\n      },\\n\\n      extractSectInfo(text) {\\n        const match = text.match(/<sectinfo>([\\\\s\\\\S]*?)<\\\\/sectinfo>/);\\n        if (!match) return null;\\n\\n        try {\\n          const info = {\\n            basic: {},\\n            ranks: {},\\n            status: {},\\n            facilities: [],\\n            tasks: [],\\n            resources: {},\\n            rules: []\\n          };\\n\\n          const lines = match[1].trim().split('\\\\n');\\n          lines.forEach(line => {\\n            const [category, ...values] = line.split('|').map(s => s.trim());\\n\\n            switch (category) {\\n              case '宗门':\\n                if (values[0] === '地位') {\\n                  info.ranks[values[1]] = values[2];\\n                } else {\\n                  info.basic[values[0]] = values[1];\\n                }\\n                break;\\n              case '主角身份':\\n                info.status[values[0]] = values[1];\\n                break;\\n              case '宗门设施':\\n                info.facilities.push({\\n                  name: values[0],\\n                  description: values[1]\\n                });\\n                break;\\n              case '宗门任务':\\n                info.tasks.push({\\n                  name: values[0],\\n                  difficulty: values[1],\\n                  reward: values[2]\\n                });\\n                break;\\n              case '宗门资源':\\n                info.resources[values[0]] = values[1];\\n                break;\\n              case '宗门规则':\\n                info.rules.push({\\n                  rule: values[0],\\n                  consequence: values[1]\\n                });\\n                break;\\n            }\\n          });\\n\\n          return info;\\n        } catch (e) {\\n          console.error('解析宗门信息失败:', e);\\n          return null;\\n        }\\n      }\\n    };\\n\\n    // ==================== UI更新模块 ====================\\n    const UIUpdater = {\\n      updateMainContent(content) {\\n        if (!content) return;\\n\\n        const contentPanel = document.querySelector('#content');\\n        if (!contentPanel) return;\\n\\n        contentPanel.innerHTML = `\\n        <div class=\\\"status-bar\\\">\\n            <div class=\\\"status-item\\\">\\n                <span class=\\\"status-label\\\">当前时间</span>\\n                <span class=\\\"status-value\\\">${content.time}</span>\\n            </div>\\n            <div class=\\\"status-item\\\">\\n                <span class=\\\"status-label\\\">当前位置</span>\\n                <span class=\\\"status-value\\\">${content.location}</span>\\n            </div>\\n            <div class=\\\"status-item\\\">\\n                <span class=\\\"status-label\\\">财产</span>\\n                <span class=\\\"status-value\\\">${content.wealth}</span>\\n            </div>\\n        </div>\\n        <h2>${content.title}</h2>\\n        <div class=\\\"story-content\\\">${content.content}</div>\\n    `;\\n      },\\n\\n      updateCharacterInfo(info) {\\n        if (!info) return;\\n\\n        const characterPanel = document.querySelector('#character');\\n        if (!characterPanel) return;\\n\\n        characterPanel.innerHTML = `\\n            <h2>主角信息</h2>\\n            <div class=\\\"info-section\\\">\\n                <div class=\\\"basic-info\\\">\\n                    <p><strong>年龄：</strong>${info.basic.年龄}</p>\\n                    <p><strong>寿元：</strong>${info.basic.寿元}</p>\\n                    <p><strong>性别：</strong>${info.basic.性别}</p>\\n                    <p><strong>种族：</strong>${info.basic.种族}</p>\\n                    <p><strong>声望：</strong>${info.basic.声望}</p>\\n                    <p><strong>资质：</strong>${info.basic.资质}</p>\\n                </div>\\n                \\n                <div class=\\\"cultivation-system\\\">\\n                    <h3>修炼体系</h3>\\n                    <p><strong>主修：</strong>${info.cultivation.主修}</p>\\n                    <p><strong>分支：</strong>${info.cultivation.分支}</p>\\n                    <p><strong>特性：</strong>${info.cultivation.特性}</p>\\n                </div>\\n\\n                <div class=\\\"attributes-section\\\">\\n                    <div class=\\\"radar-chart\\\">\\n                        <canvas id=\\\"attributesChart\\\" width=\\\"300\\\" height=\\\"300\\\"></canvas>\\n                    </div>\\n                    <div class=\\\"attributes-list\\\">\\n                        ${Object.entries(info.attributes).map(([name, value]) => `\\n                            <div class=\\\"attribute-item\\\">\\n                                <div class=\\\"attribute-name\\\">${name}</div>\\n                                <div class=\\\"attribute-value\\\">${value}</div>\\n                            </div>\\n                        `).join('')}\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"realm-info\\\">\\n                    <h3>境界</h3>\\n                    <p><strong>${info.realm.名称}</strong></p>\\n                    <div class=\\\"progress-bar\\\">\\n                        <div class=\\\"progress\\\" style=\\\"width: ${info.realm.进度}%\\\"></div>\\n                    </div>\\n                    <span class=\\\"progress-text\\\">${info.realm.进度}%</span>\\n                </div>\\n\\n                <div class=\\\"skills-section\\\">\\n                    <h3>功法</h3>\\n                    ${info.skills.map((skill, index) => `\\n                        <div class=\\\"skill-item\\\">\\n                            <div class=\\\"skill-header\\\">\\n                                <span>${skill.名称} (${skill.等级})</span>\\n                                <button class=\\\"detail-btn\\\" onclick=\\\"EventHandler.toggleDetails('skill${index}')\\\">详情</button>\\n                            </div>\\n                            <div class=\\\"skill-details\\\" id=\\\"skill${index}\\\">\\n                                <p>${skill.描述}</p>\\n                                <p>当前效果：${skill.效果}</p>\\n                            </div>\\n                        </div>\\n                    `).join('')}\\n                </div>\\n\\n                <div class=\\\"artifacts-section\\\">\\n                    <h3>法宝</h3>\\n                    ${info.artifacts.map((artifact, index) => `\\n                        <div class=\\\"artifact-item\\\">\\n                            <div class=\\\"artifact-header\\\">\\n                                <span>${artifact.名称} (${artifact.品级})</span>\\n                                <button class=\\\"detail-btn\\\" onclick=\\\"EventHandler.toggleDetails('artifact${index}')\\\">详情</button>\\n                            </div>\\n                            <div class=\\\"skill-details\\\" id=\\\"artifact${index}\\\">\\n                                <p>${artifact.描述}</p>\\n                                <p>当前效果：${artifact.效果}</p>\\n                            </div>\\n                        </div>\\n                    `).join('')}\\n                </div>\\n\\n                <div class=\\\"backpack-section\\\">\\n                    <h3>背包</h3>\\n                    <ul>\\n                        ${info.backpack.map((item, index) => `\\n                            <li>\\n                                <button class=\\\"detail-btn\\\" onclick=\\\"EventHandler.toggleDetails('item${index}')\\\">${item.name}</button>\\n                                <div class=\\\"item-details\\\" id=\\\"item${index}\\\" style=\\\"display: none;\\\">\\n                                    <p><strong>描述：</strong>${item.description}</p>\\n                                    <p><strong>数量：</strong>${item.quantity}</p>\\n                                </div>\\n                            </li>\\n                        `).join('')}\\n                    </ul>\\n                </div>\\n            </div>\\n        `;\\n\\n        // 绘制雷达图\\n        GraphicsRenderer.drawRadarChart(info.attributes, info);\\n      },\\n\\n      updateSocialInfo(relationships) {\\n        if (!relationships) return;\\n\\n        const socialPanel = document.querySelector('#social');\\n        if (!socialPanel) return;\\n\\n        socialPanel.innerHTML = `\\n            <div class=\\\"social-controls\\\">\\n              <div class=\\\"search-box\\\">\\n                <input type=\\\"text\\\" id=\\\"character-search\\\" placeholder=\\\"搜索人物...\\\">\\n              </div>\\n              <div class=\\\"filter-controls\\\">\\n                <select id=\\\"relation-filter\\\">\\n                  <option value=\\\"all\\\">所有关系</option>\\n                  ${Object.keys(relationships).map(type =>\\n          `<option value=\\\"${type}\\\">${type}</option>`\\n        ).join('')}\\n                </select>\\n              </div>\\n            </div>\\n\\n            ${Object.entries(relationships).map(([type, characters]) => `\\n              <div class=\\\"relationship-category\\\" data-type=\\\"${type}\\\">\\n                <h3>${type}</h3>\\n                <div class=\\\"relationship-list\\\">\\n                  ${characters.map(char => `\\n                    <div class=\\\"relationship-item\\\" data-favor=\\\"${char.favor}\\\">\\n                      <div class=\\\"character-basic\\\">\\n                        <div class=\\\"character-name\\\">\\n                          ${char.name} (好感度：${char.favor})\\n                        </div>\\n                        <div class=\\\"character-info\\\">\\n                          <p>身份：${char.title || '未知'}</p>\\n                          <p>修为：${char.cultivation || '未知'}</p>\\n                          <p>状态：${char.status || '未知'}</p>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"character-details\\\">\\n                        <div class=\\\"detail-section\\\">\\n                          <h4>基本信息</h4>\\n                          ${Object.entries(char.details.basic).map(([key, value]) =>\\n          `<p>${key}：${value}</p>`\\n        ).join('')}\\n                        </div>\\n                        \\n                        ${char.details.skills.length > 0 ? `\\n                          <div class=\\\"detail-section\\\">\\n                            <h4>功法</h4>\\n                            ${char.details.skills.map(skill => `\\n                              <p>${skill.name} (${skill.level}) - ${skill.effect}</p>\\n                            `).join('')}\\n                          </div>\\n                        ` : ''}\\n                        \\n                        <div class=\\\"detail-section\\\">\\n                          <h4>性格特征</h4>\\n                          <p>${char.details.personality || '未知'}</p>\\n                        </div>\\n                        \\n                        <div class=\\\"detail-section\\\">\\n                          <h4>外貌</h4>\\n                          <p>${char.details.appearance || '未知'}</p>\\n                        </div>\\n                        \\n                        <div class=\\\"detail-section\\\">\\n                          <h4>穿着</h4>\\n                          <p>${char.details.clothing || '未知'}</p>\\n                        </div>\\n                        \\n                        <div class=\\\"detail-section\\\">\\n                          <h4>互动记录</h4>\\n                          ${char.details.interactions.length > 0 ?\\n            char.details.interactions.map(interaction => `\\n                              <div class=\\\"interaction-item\\\">\\n                                <span class=\\\"interaction-date\\\">${interaction.date}</span>：\\n                                <span class=\\\"interaction-content\\\">${interaction.content}</span>\\n                              </div>\\n                            `).join('')\\n            : '<p>暂无互动记录</p>'\\n          }\\n                        </div>\\n                      </div>\\n                      <button class=\\\"detail-toggle\\\">展开详情</button>\\n                    </div>\\n                  `).join('')}\\n                </div>\\n              </div>\\n            `).join('')}\\n          `;\\n\\n        // 绑定事件监听器\\n        EventHandler.bindSocialEventListeners();\\n      },\\n\\n      updateTimelineInfo(events) {\\n        if (!events) return;\\n\\n        const timelinePanel = document.querySelector('#events');\\n        if (!timelinePanel) return;\\n\\n        timelinePanel.innerHTML = `\\n            <h2>大事记</h2>\\n            <div class=\\\"timeline-controls\\\">\\n                <div class=\\\"search-box\\\">\\n                    <input type=\\\"text\\\" id=\\\"event-search\\\" placeholder=\\\"搜索事件...\\\">\\n                </div>\\n                <div class=\\\"filter-controls\\\">\\n                    <select id=\\\"event-filter\\\">\\n                        <option value=\\\"all\\\">所有事件</option>\\n                        ${[...new Set(events.flatMap(event => event.tags))].map(tag =>\\n          `<option value=\\\"${tag}\\\">${tag}</option>`\\n        ).join('')}\\n                    </select>\\n                </div>\\n            </div>\\n            \\n            <div class=\\\"timeline-container\\\">\\n                ${events.map(event => `\\n                    <div class=\\\"timeline-event\\\" data-tags=\\\"${event.tags.join(',')}\\\">\\n                        <div class=\\\"timeline-date\\\">\\n                            <span class=\\\"date-text\\\">${event.date}</span>\\n                            <div class=\\\"timeline-connector\\\"></div>\\n                        </div>\\n                        <div class=\\\"timeline-content\\\">\\n                            <div class=\\\"timeline-title\\\">${event.title}</div>\\n                            <div class=\\\"timeline-description\\\">${event.description}</div>\\n                            <div class=\\\"timeline-impact\\\">\\n                                <strong>影响：</strong>${event.impact}\\n                            </div>\\n                            <div class=\\\"timeline-tags\\\">\\n                                ${event.tags.map(tag =>\\n          `<span class=\\\"timeline-tag\\\">${tag}</span>`\\n        ).join('')}\\n                            </div>\\n                        </div>\\n                    </div>\\n                `).join('')}\\n            </div>\\n        `;\\n\\n        // 绑定事件监听器\\n        EventHandler.bindTimelineEventListeners();\\n      },\\n\\n      updateSectInfo(sectInfo) {\\n        if (!sectInfo) return;\\n\\n        const sectPanel = document.querySelector('#sect');\\n        if (!sectPanel) return;\\n\\n        sectPanel.innerHTML = `\\n            <h2>宗门信息</h2>\\n            <div class=\\\"sect-content\\\">\\n                <div class=\\\"sect-basic\\\">\\n                    <h3>${sectInfo.basic.名称}</h3>\\n                    <div class=\\\"sect-ranks\\\">\\n                        ${Object.entries(sectInfo.ranks).map(([world, rank]) => `\\n                            <p><strong>${world}：</strong>${rank}</p>\\n                        `).join('')}\\n                    </div>\\n                    <p><strong>最强者：</strong>${sectInfo.basic.最强者}</p>\\n                    <p><strong>山门：</strong>${sectInfo.basic.山门}</p>\\n                    <p><strong>历史：</strong>${sectInfo.basic.历史}</p>\\n                    <p><strong>特色：</strong>${sectInfo.basic.特色}</p>\\n                </div>\\n\\n                <div class=\\\"sect-status\\\">\\n                    <h3>主角身份</h3>\\n                    <p><strong>当前职位：</strong>${sectInfo.status.当前职位}</p>\\n                    <p><strong>贡献度：</strong>${sectInfo.status.贡献度}</p>\\n                    <p><strong>晋升条件：</strong>${sectInfo.status.晋升条件}</p>\\n                </div>\\n\\n                <div class=\\\"sect-facilities\\\">\\n                    <h3>宗门设施</h3>\\n                    <div class=\\\"facilities-grid\\\">\\n                        ${sectInfo.facilities.map(facility => `\\n                            <div class=\\\"facility-item\\\">\\n                                <h4>${facility.name}</h4>\\n                                <p>${facility.description}</p>\\n                            </div>\\n                        `).join('')}\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"sect-tasks\\\">\\n                    <h3>宗门任务</h3>\\n                    ${sectInfo.tasks.map(task => `\\n                        <div class=\\\"task-item\\\">\\n                            <h4>${task.name}</h4>\\n                            <p><strong>难度：</strong>${task.difficulty}</p>\\n                            <p><strong>奖励：</strong>${task.reward}</p>\\n                        </div>\\n                    `).join('')}\\n                </div>\\n\\n                <div class=\\\"sect-resources\\\">\\n                    <h3>宗门资源</h3>\\n                    ${Object.entries(sectInfo.resources).map(([resource, value]) => `\\n                        <p><strong>${resource}：</strong>${value}</p>\\n                    `).join('')}\\n                </div>\\n\\n                <div class=\\\"sect-rules\\\">\\n                    <h3>宗门规则</h3>\\n                    ${sectInfo.rules.map(rule => `\\n                        <div class=\\\"rule-item\\\">\\n                            <p><strong>${rule.rule}</strong></p>\\n                            <p class=\\\"rule-consequence\\\">${rule.consequence}</p>\\n                        </div>\\n                    `).join('')}\\n                </div>\\n            </div>\\n        `;\\n      }\\n    };\\n\\n    // ==================== 事件处理模块 ====================\\n    const EventHandler = {\\n      bindSocialEventListeners() {\\n        // 搜索功能\\n        document.getElementById('character-search')?.addEventListener('input', this.filterCharacters);\\n        // 筛选功能\\n        document.getElementById('relation-filter')?.addEventListener('change', this.filterCharacters);\\n        // 详情展开/收起\\n        document.querySelectorAll('.detail-toggle').forEach(button => {\\n          button.addEventListener('click', function () {\\n            const details = this.previousElementSibling;\\n            const isExpanded = details.style.display === 'block';\\n            details.style.display = isExpanded ? 'none' : 'block';\\n            this.textContent = isExpanded ? '展开详情' : '收起详情';\\n          });\\n        });\\n      },\\n\\n      bindTimelineEventListeners() {\\n        // 搜索功能\\n        document.getElementById('event-search')?.addEventListener('input', this.filterEvents);\\n        // 标签筛选\\n        document.getElementById('event-filter')?.addEventListener('change', this.filterEvents);\\n      },\\n\\n      filterCharacters() {\\n        const searchText = document.getElementById('character-search')?.value.toLowerCase() || '';\\n        const selectedRelation = document.getElementById('relation-filter')?.value;\\n\\n        document.querySelectorAll('.relationship-item').forEach(item => {\\n          const name = item.querySelector('.character-name').textContent.toLowerCase();\\n          const category = item.closest('.relationship-category').dataset.type;\\n\\n          const matchesSearch = name.includes(searchText);\\n          const matchesRelation = selectedRelation === 'all' || category === selectedRelation;\\n\\n          item.style.display = matchesSearch && matchesRelation ? 'block' : 'none';\\n        });\\n      },\\n\\n      filterEvents() {\\n        const searchText = document.getElementById('event-search')?.value.toLowerCase() || '';\\n        const selectedTag = document.getElementById('event-filter')?.value;\\n\\n        document.querySelectorAll('.timeline-event').forEach(event => {\\n          const title = event.querySelector('.timeline-title').textContent.toLowerCase();\\n          const description = event.querySelector('.timeline-description').textContent.toLowerCase();\\n          const tags = event.dataset.tags.split(',');\\n\\n          const matchesSearch = title.includes(searchText) || description.includes(searchText);\\n          const matchesTag = selectedTag === 'all' || tags.includes(selectedTag);\\n\\n          event.style.display = matchesSearch && matchesTag ? 'flex' : 'none';\\n        });\\n      },\\n\\n      toggleDetails(id) {\\n        const details = document.getElementById(id);\\n        const button = document.querySelector(`button[data-target=\\\"${id}\\\"]`);\\n\\n        if (details) {\\n          const isHidden = details.style.display === 'none' || !details.style.display;\\n          details.style.display = isHidden ? 'block' : 'none';\\n          if (button) {\\n            button.textContent = isHidden ? '收起' : '详情';\\n          }\\n        }\\n      }\\n    };\\n\\n    // ==================== 图形绘制模块 ====================\\n    const GraphicsRenderer = {\\n      drawRadarChart(attributes, characterInfo) {\\n        const canvas = document.getElementById('attributesChart');\\n        if (!canvas || !characterInfo || !characterInfo.realm) return;\\n\\n        // 获取当前境界和对应等级\\n        const realm = characterInfo.realm.名称;\\n\\n        // 修改 normalizeRealmName 函数\\n        function normalizeRealmName(name) {\\n          if (!name) return '';\\n\\n          // 定义可能的后缀，按照长度降序排列，确保先匹配最长的后缀\\n          const removableSuffixes = [\\n            '大圆满', '圆满', '大成', '初期', '中期', '后期',\\n            '小成', '境界', '境', '阶', '期'\\n          ];\\n\\n          // 定义可能的修炼体系标识\\n          const cultivationTypes = [\\n            '纯粹剑修', '纯粹武夫', '炼气士', '剑修', '大修士',\\n            '武者', '道士', '菩萨', '罗汉', '修士'\\n          ];\\n\\n          // 移除修炼体系标识\\n          let result = name;\\n          for (const type of cultivationTypes) {\\n            if (result.includes(type)) {\\n              result = result.replace(type, '');\\n              break;\\n            }\\n          }\\n\\n          // 移除境界后缀\\n          for (const suffix of removableSuffixes) {\\n            if (result.endsWith(suffix)) {\\n              result = result.slice(0, -suffix.length);\\n              break;\\n            }\\n          }\\n\\n          return result.trim();\\n        }\\n\\n        // 修改 isRealmMatch 函数\\n        function isRealmMatch(realmName, targetRealm) {\\n          const normalizedRealm = normalizeRealmName(realmName);\\n          const normalizedTarget = normalizeRealmName(targetRealm);\\n\\n          // 如果任一字符串为空，返回false\\n          if (!normalizedRealm || !normalizedTarget) return false;\\n\\n          // 将字符串转换为字符数组\\n          const realmChars = Array.from(normalizedRealm);\\n          const targetChars = Array.from(normalizedTarget);\\n\\n          // 如果目标字符串比实际字符串长，不可能匹配\\n          if (targetChars.length > realmChars.length) return false;\\n\\n          // 逐字匹配\\n          for (let i = 0; i < targetChars.length; i++) {\\n            if (realmChars[i] !== targetChars[i]) {\\n              return false;\\n            }\\n          }\\n\\n          // 添加调试日志\\n          console.log('Matching realms:', {\\n            original: realmName,\\n            normalized: normalizedRealm,\\n            target: targetRealm,\\n            normalizedTarget: normalizedTarget,\\n            isMatch: true\\n          });\\n\\n          return true;\\n        }\\n\\n        const cultivationSystems = {\\n          // 等级1的所有境界和小境界\\n          level1: {\\n            '道门': { '养魂': 1, '养魂初期': 1, '养魂小成': 1, '养魂圆满': 1 },\\n            '神道': { '游魂': 1, '游魂初期': 1, '游魂小成': 1, '游魂圆满': 1 },\\n            '武道': { '锻体': 1, '锻体初期': 1, '锻体小成': 1, '锻体圆满': 1 },\\n            '佛门': { '眼识': 1, '眼识初开': 1, '眼识小成': 1, '眼识圆满': 1 },\\n            '墨家': { '机巧': 1, '机巧入门': 1, '机巧小成': 1, '机巧圆满': 1 },\\n            '儒家': { '启蒙': 1, '启蒙初悟': 1, '启蒙小成': 1, '启蒙圆满': 1 },\\n            '法家': { '执法': 1, '执法初期': 1, '执法小成': 1, '执法圆满': 1 },\\n            '纯粹武夫': { '下三境': 1, '泥胚境': 1, '木胎境': 1, '水银境': 1 },\\n            '炼气士': { '下三境': 1, '铜皮': 1, '草根': 1, '柳筋': 1 }\\n          },\\n\\n          // 等级2的所有境界和小境界\\n          level2: {\\n            '道门': { '壮魂': 2, '壮魂初期': 2, '壮魂小成': 2, '壮魂圆满': 2 },\\n            '神道': { '游神': 2, '游神初期': 2, '游神小成': 2, '游神圆满': 2 },\\n            '武道': { '养气': 2, '养气初期': 2, '养气小成': 2, '养气圆满': 2 },\\n            '佛门': { '耳识': 2, '耳识初开': 2, '耳识小成': 2, '耳识圆满': 2 },\\n            '墨家': { '物匠': 2, '物匠初期': 2, '物匠小成': 2, '物匠圆满': 2 },\\n            '儒家': { '明理': 2, '明理初期': 2, '明理小成': 2, '明理圆满': 2 },\\n            '法家': { '律法': 2, '律法初期': 2, '律法小成': 2, '律法圆满': 2 },\\n            '纯粹武夫': { '英魂': 2, '英魂初期': 2, '英魂小成': 2, '英魂圆满': 2 },\\n            '炼气士': { '中三境': 2, '骨气': 2, '铸庐': 2, '洞府': 2 }\\n          },\\n\\n          // 等级3的所有境界和小境界\\n          level3: {\\n            '道门': { '出窍': 3, '出窍初期': 3, '出窍小成': 3, '出窍圆满': 3 },\\n            '神道': { '灵神': 3, '灵神初期': 3, '灵神小成': 3, '灵神圆满': 3 },\\n            '武道': { '先天': 3, '先天初期': 3, '先天小成': 3, '先天圆满': 3 },\\n            '佛门': { '口识': 3, '口识初开': 3, '口识小成': 3, '口识圆满': 3 },\\n            '墨家': { '机心': 3, '机心初期': 3, '机心小成': 3, '机心圆满': 3 },\\n            '儒家': { '格物': 3, '格物初期': 3, '格物小成': 3, '格物圆满': 3 },\\n            '法家': { '执政': 3, '执政初期': 3, '执政小成': 3, '执政圆满': 3 },\\n            '纯粹武夫': { '雄魄': 3, '雄魄初期': 3, '雄魄小成': 3, '雄魄圆满': 3 },\\n            '炼气士': { '观海': 3, '观海初期': 3, '观海小成': 3, '观海圆满': 3 }\\n          },\\n\\n          // 继续添加其他等级...\\n          level4: {\\n            '道门': { '引气': 4, '引气初期': 4, '引气小成': 4, '引气圆满': 4 },\\n            '神道': { '判官': 4, '初入判官': 4, '判官小成': 4, '判官圆满': 4 },\\n            '武道': { '神意': 4, '神意初期': 4, '神意小成': 4, '神意圆满': 4 },\\n            '佛门': { '鼻识': 4, '鼻识初开': 4, '鼻识小成': 4, '鼻识圆满': 4 },\\n            '墨家': { '器灵': 4, '器灵初期': 4, '器灵小成': 4, '器灵圆满': 4 },\\n            '儒家': { '致知': 4, '致知初期': 4, '致知小成': 4, '致知圆满': 4 },\\n            '法家': { '秩序': 4, '秩序初期': 4, '秩序小成': 4, '秩序圆满': 4 },\\n            '纯粹武夫': { '武胆': 4, '武胆初期': 4, '武胆小成': 4, '武胆圆满': 4 },\\n            '炼气士': { '龙门': 4, '龙门初期': 4, '龙门小成': 4, '龙门圆满': 4 }\\n          },\\n\\n          level5: {\\n            '道门': { '神魂': 5, '神魂初境': 5, '神魂小成': 5, '神魂圆满': 5 },\\n            '神道': { '地祗': 5, '初入地祗': 5, '地祗小成': 5, '地祗圆满': 5 },\\n            '武道': { '炼窍': 5, '炼窍初期': 5, '炼窍小成': 5, '炼窍圆满': 5 },\\n            '佛门': { '身识': 5, '身识初开': 5, '身识小成': 5, '身识圆满': 5 },\\n            '墨家': { '机师': 5, '机师初期': 5, '机师小成': 5, '机师圆满': 5 },\\n            '儒家': { '诚明': 5, '诚明初期': 5, '诚明小成': 5, '诚明圆满': 5 },\\n            '法家': { '法理': 5, '法理初期': 5, '法理小成': 5, '法理圆满': 5 },\\n            '纯粹武夫': { '小宗师': 5, '金身初期': 5, '金身小成': 5, '金身圆满': 5, '羽化初期': 5, '羽化小成': 5, '羽化圆满': 5 },\\n            '炼气士': { '金丹': 5, '金丹初期': 5, '金丹小成': 5, '金丹圆满': 5 }\\n          },\\n\\n          level6: {\\n            '道门': {\\n              '下品金丹': 6, '下品金丹初期': 6, '下品金丹小成': 6, '下品金丹圆满': 6,\\n              '中品金丹': 6, '中品金丹初期': 6, '中品金丹小成': 6, '中品金丹圆满': 6,\\n              '上品金丹': 6, '上品金丹初期': 6, '上品金丹小成': 6, '上品金丹圆满': 6\\n            },\\n            '神道': { '灵官': 6, '初入灵官': 6, '灵官小成': 6, '灵官圆满': 6 },\\n            '武道': { '武相': 6, '武相初期': 6, '武相小成': 6, '武相圆满': 6 },\\n            '佛门': { '意识': 6, '意识初开': 6, '意识小成': 6, '意识圆满': 6 },\\n            '墨家': { '机皇': 6, '机皇初期': 6, '机皇小成': 6, '机皇圆满': 6 },\\n            '儒家': { '正心': 6, '正心初期': 6, '正心小成': 6, '正心圆满': 6 },\\n            '法家': { '法令': 6, '法令初期': 6, '法令小成': 6, '法令圆满': 6 },\\n            '纯粹武夫': { '山巅': 6, '山巅初期': 6, '山巅小成': 6, '山巅圆满': 6 },\\n            '炼气士': { '元婴': 6, '元婴初期': 6, '元婴小成': 6, '元婴圆满': 6 }\\n          },\\n\\n          level7: {\\n            '道门': { '阴神': 7, '感应真灵': 7, '壮大真灵': 7, '凝练真灵': 7, '真灵圆满': 7 },\\n            '神道': { '神尊': 7, '初入神尊': 7, '神尊小成': 7, '神尊圆满': 7 },\\n            '武道': { '人仙': 7, '人仙初期': 7, '人仙小成': 7, '人仙圆满': 7 },\\n            '佛门': { '罗汉': 7, '初入罗汉': 7, '小罗汉': 7, '罗汉圆满': 7 },\\n            '墨家': { '机圣': 7, '机圣初期': 7, '机圣小成': 7, '机圣圆满': 7 },\\n            '儒家': { '修齐': 7, '修齐初期': 7, '修齐小成': 7, '修齐圆满': 7 },\\n            '法家': { '法圣': 7, '法圣初期': 7, '法圣小成': 7, '法圣圆满': 7 },\\n            '纯粹武夫': { '气盛': 7, '气盛初期': 7, '气盛小成': 7, '气盛圆满': 7 },\\n            '炼气士': { '玉璞': 7, '玉璞初期': 7, '玉璞小成': 7, '玉璞圆满': 7 }\\n          },\\n\\n          level8: {\\n            '道门': { '元神': 8, '元神初期': 8, '阳神一劫': 8, '阳神二劫': 8, '阳神三劫': 8 },\\n            '神道': { '神灵': 8, '初入神灵': 8, '神灵小成': 8, '神灵圆满': 8 },\\n            '武道': { '地仙': 8, '地仙初期': 8, '地仙小成': 8, '地仙圆满': 8 },\\n            '佛门': { '菩萨': 8, '初入菩萨': 8, '菩萨小成': 8, '菩萨圆满': 8 },\\n            '墨家': { '巨子': 8, '巨子初期': 8, '巨子小成': 8, '巨子圆满': 8 },\\n            '儒家': { '圣贤': 8, '圣贤初期': 8, '圣贤小成': 8, '圣贤圆满': 8 },\\n            '法家': { '法皇': 8, '法皇初期': 8, '法皇小成': 8, '法皇圆满': 8 },\\n            '纯粹武夫': { '神到': 8, '神到初期': 8, '神到小成': 8, '神到圆满': 8 },\\n            '炼气士': { '仙人': 8, '仙人初期': 8, '仙人小成': 8, '仙人圆满': 8 }\\n          },\\n\\n          level9: {\\n            '道门': { '天人': 9, '天仙大能': 9, '一劫天君': 9, '二劫天君': 9, '三劫天君': 9, '四劫天君': 9 },\\n            '神道': { '神君': 9, '初入神君': 9, '神君小成': 9, '神君圆满': 9 },\\n            '武道': { '天仙': 9, '天仙初期': 9, '天仙小成': 9, '天仙圆满': 9 },\\n            '佛门': { '佛陀': 9, '初入佛陀': 9, '佛陀小成': 9, '佛陀圆满': 9 },\\n            '纯粹武夫': { '归真': 9, '归真初期': 9, '归真小成': 9, '归真圆满': 9 },\\n            '炼气士': { '飞升': 9, '飞升初期': 9, '飞升小成': 9, '飞升圆满': 9 }\\n          },\\n\\n          level10: {\\n            '道门': { '半步金仙': 10, '万法归道': 10, '圆满道基': 10, '得道真意': 10, '外道演法': 10 },\\n            '神道': { '准圣': 10, '准圣初期': 10, '准圣小成': 10, '准圣圆满': 10 },\\n            '武道': { '武圣': 10, '武圣初期': 10, '武圣小成': 10, '武圣圆满': 10 },\\n            '佛门': { '未来佛祖': 10, '初入未来': 10, '未来小成': 10, '未来圆满': 10 },\\n            '纯粹武夫': { '半步武神': 10, '半步武神初期': 10, '半步武神小成': 10, '半步武神圆满': 10 },\\n            '炼气士': { '合道境': 10, '合道初期': 10, '合道小成': 10, '合道圆满': 10 }\\n          },\\n\\n          level11: {\\n            '道门': { '合道': 11, '后天道祖': 11, '先天道祖': 11, '道祖大成': 11, '合道圆满': 11 },\\n            '神道': { '神圣': 11, '神圣初期': 11, '神圣小成': 11, '神圣圆满': 11 },\\n            '武道': { '武道至尊': 11, '至尊初期': 11, '至尊小成': 11, '至尊圆满': 11 },\\n            '佛门': { '佛祖': 11, '初入佛祖': 11, '佛祖小成': 11, '佛祖圆满': 11 },\\n            '纯粹武夫': { '武神': 11, '武神初期': 11, '武神小成': 11, '武神圆满': 11 },\\n            '炼气士': { '十五境': 11, '十五初期': 11, '十五小成': 11, '十五圆满': 11 }\\n          },\\n\\n          level12: {\\n            '道门': { '造化': 12, '初入造化': 12, '造化小成': 12, '造化圆满': 12 },\\n            '神道': { '天道': 12, '天道初期': 12, '天道小成': 12, '天道圆满': 12 },\\n            '武道': { '武圣': 12, '武圣初期': 12, '武圣小成': 12, '武圣圆满': 12 },\\n            '佛门': { '佛主': 12, '初入佛主': 12, '佛主小成': 12, '佛主圆满': 12 },\\n          },\\n\\n          level13: {\\n            '道门': { '永恒': 13, '初入永恒': 13, '永恒小成': 13, '永恒圆满': 13 },\\n          }\\n        };\\n\\n        let level = 1;\\n        const normalizedRealm = normalizeRealmName(realm);\\n\\n        // 修改境界匹配逻辑\\n        for (let i = 1; i <= 13; i++) {\\n          const levelData = cultivationSystems[`level${i}`];\\n          let found = false;\\n\\n          for (const [school, realms] of Object.entries(levelData)) {\\n            for (const targetRealm of Object.keys(realms)) {\\n              if (isRealmMatch(normalizedRealm, targetRealm)) {\\n                level = i;\\n                found = true;\\n                break;\\n              }\\n            }\\n            if (found) break;\\n          }\\n          if (found) break;\\n        }\\n\\n        // 计算战力倍率\\n        const powerMultiplier = Math.pow(2.5, level - 1);\\n\\n        const maxValue = level === 1 ? 20 : level === 2 ? 60 : 60 * Math.pow(3, level - 2);\\n\\n        const ctx = canvas.getContext('2d');\\n        const centerX = canvas.width / 2;\\n        const centerY = canvas.height / 2;\\n        const radius = 120;\\n\\n        // 清空画布\\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\\n\\n        // 获取属性数据并归一化\\n        const attributeNames = Object.keys(attributes);\\n        const originalValues = Object.values(attributes);\\n        const multipliedValues = originalValues.map(value => value * powerMultiplier);\\n        const attributeValues = multipliedValues.map(value =>\\n          (value / maxValue) * 100  // 将值归一化到0-100范围\\n        );\\n        const sides = attributeNames.length;\\n\\n        // 绘制背景网格\\n        for (let gridLevel = 1; gridLevel <= 5; gridLevel++) {\\n          ctx.beginPath();\\n          ctx.strokeStyle = 'rgba(0, 0, 0, 0.1)';\\n\\n          for (let i = 0; i < sides; i++) {\\n            const angle = (i * 2 * Math.PI) / sides - Math.PI / 2;\\n            const r = (radius * gridLevel) / 5;\\n            const x = centerX + r * Math.cos(angle);\\n            const y = centerY + r * Math.sin(angle);\\n\\n            if (i === 0) {\\n              ctx.moveTo(x, y);\\n            } else {\\n              ctx.lineTo(x, y);\\n            }\\n          }\\n\\n          ctx.closePath();\\n          ctx.stroke();\\n\\n          // 添加刻度值标注\\n          const scaleValue = Math.round((maxValue * gridLevel) / 5);\\n          ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\\n          ctx.font = '12px var(--global-font)';\\n          ctx.fillText(scaleValue.toString(), centerX + 5, centerY - (radius * gridLevel) / 5);\\n        }\\n\\n        // 绘制属性轴线和名称\\n        for (let i = 0; i < sides; i++) {\\n          const angle = (i * 2 * Math.PI) / sides - Math.PI / 2;\\n\\n          // 绘制轴线\\n          ctx.beginPath();\\n          ctx.strokeStyle = 'rgba(0, 0, 0, 0.2)';\\n          ctx.moveTo(centerX, centerY);\\n          ctx.lineTo(\\n            centerX + radius * Math.cos(angle),\\n            centerY + radius * Math.sin(angle)\\n          );\\n          ctx.stroke();\\n\\n          // 绘制属性名称和当前值\\n          ctx.fillStyle = '#333';\\n          ctx.font = '14px var(--global-font)';\\n          ctx.textAlign = 'center';\\n          ctx.textBaseline = 'middle';\\n\\n          const textRadius = radius + 20;\\n          const textX = centerX + textRadius * Math.cos(angle);\\n          const textY = centerY + textRadius * Math.sin(angle);\\n\\n          const originalValue = originalValues[i];\\n          const multipliedValue = Math.round(multipliedValues[i]);\\n          ctx.fillText(`${attributeNames[i]}(${originalValue}→${multipliedValue})`, textX, textY);\\n        }\\n\\n        // 绘制数值区域\\n        ctx.beginPath();\\n        ctx.fillStyle = 'rgba(76, 175, 80, 0.2)';\\n        ctx.strokeStyle = 'rgba(76, 175, 80, 0.8)';\\n        ctx.lineWidth = 2;\\n\\n        for (let i = 0; i < sides; i++) {\\n          const angle = (i * 2 * Math.PI) / sides - Math.PI / 2;\\n          const value = attributeValues[i];\\n          const r = (radius * value) / 100;\\n          const x = centerX + r * Math.cos(angle);\\n          const y = centerY + r * Math.sin(angle);\\n\\n          if (i === 0) {\\n            ctx.moveTo(x, y);\\n          } else {\\n            ctx.lineTo(x, y);\\n          }\\n        }\\n\\n        ctx.closePath();\\n        ctx.fill();\\n        ctx.stroke();\\n\\n        // 绘制数值点\\n        attributeValues.forEach((value, i) => {\\n          const angle = (i * 2 * Math.PI) / sides - Math.PI / 2;\\n          const r = (radius * value) / 100;\\n          const x = centerX + r * Math.cos(angle);\\n          const y = centerY + r * Math.sin(angle);\\n\\n          ctx.beginPath();\\n          ctx.fillStyle = '#4CAF50';\\n          ctx.arc(x, y, 4, 0, 2 * Math.PI);\\n          ctx.fill();\\n        });\\n\\n        // 显示当前境界和等级信息\\n        ctx.fillStyle = '#333';\\n        ctx.font = '14px var(--global-font)';\\n        ctx.textAlign = 'left';\\n        ctx.fillText(`当前境界: ${realm}`, 10, 20);\\n        ctx.fillText(`属性上限: ${maxValue}`, 10, 40);\\n        ctx.fillText(`战力倍率: ${powerMultiplier.toFixed(1)}倍`, 10, 60);\\n      },\\n\\n      // ... existing code ...\\n    };\\n\\n    // ==================== 初始化代码 ====================\\n    document.addEventListener('DOMContentLoaded', function () {\\n      initializeUI();\\n      bindEventListeners();\\n\\n      if (typeof gameText !== 'undefined') {\\n        processGameText(gameText);\\n      }\\n    });\\n\\n    // 主处理函数\\n    function processGameText(text) {\\n      const mainContent = DataExtractor.extractMainContent(text);\\n      const characterInfo = DataExtractor.extractCharacterInfo(text);\\n      const socialInfo = DataExtractor.extractSocialInfo(text);\\n      const timelineInfo = DataExtractor.extractTimelineInfo(text);\\n      const sectInfo = DataExtractor.extractSectInfo(text);\\n\\n      UIUpdater.updateMainContent(mainContent);\\n      if (characterInfo && characterInfo.attributes) {\\n        GraphicsRenderer.drawRadarChart(characterInfo.attributes, characterInfo);\\n      }\\n      UIUpdater.updateCharacterInfo(characterInfo);\\n      UIUpdater.updateSocialInfo(socialInfo);\\n      UIUpdater.updateTimelineInfo(timelineInfo);\\n      UIUpdater.updateSectInfo(sectInfo);\\n    }\\n\\n    // 初始化UI\\n    function initializeUI() {\\n      // 绑定导航按钮事件\\n      document.querySelectorAll('.nav-button').forEach(button => {\\n        button.addEventListener('click', () => {\\n          document.querySelectorAll('.nav-button').forEach(btn => btn.classList.remove('active'));\\n          document.querySelectorAll('.panel').forEach(panel => panel.classList.remove('active'));\\n\\n          button.classList.add('active');\\n          const panelId = button.getAttribute('data-panel');\\n          document.getElementById(panelId).classList.add('active');\\n        });\\n      });\\n\\n      // 初始化设置面板\\n      initializeSettings();\\n    }\\n\\n    // 绑定全局事件监听器\\n    function bindEventListeners() {\\n      // 窗口大小改变时重绘雷达图\\n      window.addEventListener('resize', () => {\\n        const characterInfo = DataExtractor.extractCharacterInfo(gameText);\\n        if (characterInfo) {\\n          GraphicsRenderer.drawRadarChart(characterInfo.attributes, characterInfo);\\n        }\\n      });\\n    }\\n\\n    // 初始化设置\\n    function initializeSettings() {\\n      // 从 localStorage 加载保存的设置\\n      const savedSettings = loadSettings();\\n\\n      // 字体选择\\n      const fontSelect = document.getElementById('fontSelect');\\n      if (fontSelect) {\\n        // 设置保存的字体\\n        if (savedSettings.font) {\\n          fontSelect.value = savedSettings.font;\\n          document.documentElement.style.setProperty('--global-font', savedSettings.font);\\n        }\\n\\n        fontSelect.addEventListener('change', function () {\\n          document.documentElement.style.setProperty('--global-font', this.value);\\n          saveSettings('font', this.value);\\n        });\\n      }\\n\\n      // 字体大小\\n      const fontSizeSlider = document.getElementById('fontSize');\\n      const fontSizeValue = document.getElementById('fontSizeValue');\\n      if (fontSizeSlider && fontSizeValue) {\\n        // 设置保存的字体大小\\n        if (savedSettings.fontSize) {\\n          fontSizeSlider.value = savedSettings.fontSize;\\n          fontSizeValue.textContent = savedSettings.fontSize + 'px';\\n          document.querySelectorAll('.panel').forEach(panel => {\\n            panel.style.fontSize = savedSettings.fontSize + 'px';\\n          });\\n        }\\n\\n        fontSizeSlider.addEventListener('input', function () {\\n          const size = this.value;\\n          document.querySelectorAll('.panel').forEach(panel => {\\n            panel.style.fontSize = size + 'px';\\n          });\\n          fontSizeValue.textContent = size + 'px';\\n          saveSettings('fontSize', size);\\n        });\\n      }\\n\\n      // 窗口颜色\\n      const windowColorInput = document.getElementById('windowColor');\\n      const windowColorPreview = document.getElementById('windowColorPreview');\\n      if (windowColorInput && windowColorPreview) {\\n        // 设置保存的窗口颜色\\n        if (savedSettings.windowColor) {\\n          windowColorInput.value = savedSettings.windowColor;\\n          windowColorPreview.style.backgroundColor = savedSettings.windowColor;\\n          document.querySelectorAll('.panel').forEach(panel => {\\n            panel.style.backgroundColor = savedSettings.windowColor;\\n          });\\n        }\\n\\n        windowColorInput.addEventListener('input', function () {\\n          const color = this.value;\\n          document.querySelectorAll('.panel').forEach(panel => {\\n            panel.style.backgroundColor = color;\\n          });\\n          windowColorPreview.style.backgroundColor = color;\\n          saveSettings('windowColor', color);\\n        });\\n      }\\n\\n      // 窗口透明度\\n      const opacitySlider = document.getElementById('windowOpacity');\\n      const opacityValue = document.getElementById('opacityValue');\\n      if (opacitySlider && opacityValue) {\\n        // 设置保存的透明度\\n        if (savedSettings.opacity) {\\n          opacitySlider.value = savedSettings.opacity;\\n          opacityValue.textContent = savedSettings.opacity + '%';\\n          document.querySelectorAll('.panel').forEach(panel => {\\n            panel.style.opacity = savedSettings.opacity / 100;\\n          });\\n        }\\n\\n        opacitySlider.addEventListener('input', function () {\\n          const opacity = this.value;\\n          document.querySelectorAll('.panel').forEach(panel => {\\n            panel.style.opacity = opacity / 100;\\n          });\\n          opacityValue.textContent = opacity + '%';\\n          saveSettings('opacity', opacity);\\n        });\\n      }\\n    }\\n\\n    // 添加保存设置的函数\\n    function saveSettings(key, value) {\\n      try {\\n        let settings = JSON.parse(localStorage.getItem('userSettings') || '{}');\\n        settings[key] = value;\\n        localStorage.setItem('userSettings', JSON.stringify(settings));\\n      } catch (e) {\\n        console.error('保存设置失败:', e);\\n      }\\n    }\\n\\n    // 添加加载设置的函数\\n    function loadSettings() {\\n      try {\\n        const settings = JSON.parse(localStorage.getItem('userSettings') || '{}');\\n        return settings;\\n      } catch (e) {\\n        console.error('加载设置失败:', e);\\n        return {};\\n      }\\n    }\\n\\n    // 添加重置设置的函数\\n    function resetSettings() {\\n      const defaultSettings = {\\n        font: 'chengrongguangke',\\n        fontSize: '16',\\n        windowColor: '#ffffff',\\n        opacity: '81'\\n      };\\n\\n      localStorage.setItem('userSettings', JSON.stringify(defaultSettings));\\n      return defaultSettings;\\n    }\\n    function resetAndApplySettings() {\\n      if (confirm('确定要重置所有设置吗？')) {\\n        const defaultSettings = resetSettings();\\n\\n        // 重新加载页面以应用默认设置\\n        location.reload();\\n      }\\n    }\\n\\n    let archiveSaved = false;\\n\\n    async function saveArchive() {\\n      try {\\n        if (archiveSaved) return;\\n        archiveSaved = true;\\n\\n        // 获取最后一条消息\\n        let chatContent = await triggerSlashWithResult(`/messages {{lastMessageId}}`);\\n\\n        // 只保留<gametext>标签内的内容\\n        let gametextMatch = chatContent.match(/<gametext>[\\\\s\\\\S]*?<\\\\/gametext>/);\\n        if (!gametextMatch) {\\n          throw new Error('未找到gametext内容');\\n        }\\n        chatContent = gametextMatch[0];\\n\\n        // 移除<maincontent>标签及其内容\\n        chatContent = chatContent.replace(/<maincontent>[\\\\s\\\\S]*?<\\\\/maincontent>\\\\n?/, '');\\n\\n        // 移除gametext标签之外的内容\\n        chatContent = chatContent.replace(/^[\\\\s\\\\S]*?<gametext>/, '<gametext>');\\n        chatContent = chatContent.replace(/<\\\\/gametext>[\\\\s\\\\S]*$/, '</gametext>');\\n\\n        // 处理内容中的特殊字符，但保留换行\\n        const processedContent = chatContent\\n          .replace(/\\\\|/g, '\\\\\\\\|')\\n          .replace(/\\\"/g, '\\\\\\\\\\\"')\\n          .replace(/'/g, \\\"\\\\\\\\'\\\");\\n\\n        // 调试信息\\n        console.log('存档内容:', processedContent);\\n\\n        try {\\n          // 保存到两个uid\\n          const command1 = `/setentryfield file=1xianxia uid=16 field=content \\\"${processedContent}\\\"`;\\n          const command2 = `/setentryfield file=1xianxia uid=17 field=content \\\"${processedContent}\\\"`;\\n\\n          console.log('执行命令1:', command1);\\n          console.log('执行命令2:', command2);\\n\\n          await triggerSlashWithResult(command1);\\n          await triggerSlashWithResult(command2);\\n\\n          alert('存档已保存！');\\n        } catch (error) {\\n          console.error('保存存档失败:', error);\\n          alert('保存存档失败，请检查世界书和uid是否正确！');\\n          archiveSaved = false;\\n        }\\n      } catch (error) {\\n        console.error('获取聊天内容失败:', error);\\n        alert('获取聊天内容失败！');\\n        archiveSaved = false;\\n      }\\n    }\\n\\n    // 修改 autoCheckAndFill 函数,添加调试日志\\n    async function autoCheckAndFill() {\\n      try {\\n        console.log('开始执行 autoCheckAndFill');\\n\\n        // 1. 获取最后一条消息内容\\n        const currentContent = await triggerSlashWithResult(\\\"/messages {{lastMessageId}}\\\");\\n        console.log('获取到当前消息内容');\\n\\n        // 2. 提取gametext内容并保存到uid18\\n        const gametextMatch = currentContent.match(/<gametext>([\\\\s\\\\S]*?)<\\\\/gametext>/);\\n        if (!gametextMatch) {\\n          console.log('未找到gametext内容,退出执行');\\n          return;\\n        }\\n\\n        const processedContent = gametextMatch[0]\\n          .replace(/\\\\|/g, '\\\\\\\\|')\\n          .replace(/\\\"/g, '\\\\\\\\\\\"')\\n          .replace(/'/g, \\\"\\\\\\\\'\\\");\\n\\n        console.log('保存内容到uid18');\\n        await triggerSlashWithResult(`/setentryfield file=1xianxia uid=18 field=content \\\"${processedContent}\\\"`);\\n\\n        // 3. 获取uid18和uid17的内容\\n        console.log('获取uid18和uid17的内容');\\n        const uid18Content = await triggerSlashWithResult(`/getentryfield file=1xianxia field=content 18`);\\n        const uid17Content = await triggerSlashWithResult(`/getentryfield file=1xianxia field=content 17`);\\n        const uid16Content = await triggerSlashWithResult(`/getentryfield file=1xianxia field=content 16`);\\n\\n        // 检查是否是新游戏(UID17为空或无效)\\n        if (!uid17Content || !uid17Content.includes('<gametext>')) {\\n          console.log('检测到新游戏(UID17为空或无效)');\\n          // 将UID18的内容同步到UID16和UID17\\n          await triggerSlashWithResult(`/setentryfield file=1xianxia uid=16 field=content \\\"${processedContent}\\\"`);\\n          await triggerSlashWithResult(`/setentryfield file=1xianxia uid=17 field=content \\\"${processedContent}\\\"`);\\n          console.log('已同步UID18内容到UID16和UID17');\\n          return;\\n        }\\n\\n        // 提取 gametext 内容\\n        const uid18GameText = uid18Content.match(/<gametext>([\\\\s\\\\S]*?)<\\\\/gametext>/);\\n        const uid17GameText = uid17Content.match(/<gametext>([\\\\s\\\\S]*?)<\\\\/gametext>/);\\n\\n        if (!uid18GameText || !uid17GameText) {\\n          console.log('无法提取gametext内容');\\n          console.log('uid18GameText:', uid18GameText);\\n          console.log('uid17GameText:', uid17GameText);\\n          return;\\n        }\\n\\n        // 使用提取的gametext内容\\n        const uid18ContentProcessed = uid18GameText[0];\\n        const uid17ContentProcessed = uid17GameText[0];\\n\\n        console.log('提取到的uid18内容:', uid18ContentProcessed);\\n        console.log('提取到的uid17内容:', uid17ContentProcessed);\\n\\n        // 4. 检查章节标题\\n        const title18Match = uid18ContentProcessed.match(/<maincontent>[\\\\s\\\\S]*?当前章节标题\\\\|(.*?)[\\\\n\\\\r]/);\\n        const title17Match = uid17ContentProcessed.match(/<maincontent>[\\\\s\\\\S]*?当前章节标题\\\\|(.*?)[\\\\n\\\\r]/);\\n\\n        console.log('章节标题对比:');\\n        console.log('uid18标题:', title18Match ? title18Match[1] : '未找到');\\n        console.log('uid17标题:', title17Match ? title17Match[1] : '未找到');\\n\\n        if (title18Match && title17Match) {\\n          console.log('两个标题都存在，进行比较');\\n          const title18 = title18Match[1].trim();\\n          const title17 = title17Match[1].trim();\\n          console.log('标题18 (trim):', JSON.stringify(title18));\\n          console.log('标题17 (trim):', JSON.stringify(title17));\\n\\n          // 无论标题是否相同，都进行内容比较\\n          console.log('开始进行内容比较和合并');\\n          let updatedContent = uid18Content;\\n          let hasUpdates = false;\\n\\n          const xmlTags = {\\n            timelineinfo: mergeTimelineInfo,\\n            socialinfo: mergeSocialInfo,\\n            characterinfo: mergeCharacterInfo,\\n            sectinfo: mergeSectInfo\\n          };\\n\\n          // 首先检查并确保所有必需的标签都存在\\n          for (const [tag, mergeFunction] of Object.entries(xmlTags)) {\\n            console.log(`开始处理${tag}标签`);\\n            const tagRegex = new RegExp(`<${tag}>([\\\\\\\\s\\\\\\\\S]*?)<\\\\\\\\/${tag}>`);\\n            const current18Match = uid18ContentProcessed.match(tagRegex);\\n            const saved17Match = uid17ContentProcessed.match(tagRegex);\\n\\n            console.log(`${tag} 在uid18中:`, !!current18Match);\\n            console.log(`${tag} 在uid17中:`, !!saved17Match);\\n\\n            if (!current18Match && saved17Match) {\\n              console.log(`${tag}: uid18缺少该标签，从uid17补充`);\\n              // 在</gametext>前插入缺失的标签\\n              const insertPosition = updatedContent.indexOf('</gametext>');\\n              if (insertPosition !== -1) {\\n                updatedContent = updatedContent.slice(0, insertPosition) +\\n                  saved17Match[0] + '\\\\n' +\\n                  updatedContent.slice(insertPosition);\\n                hasUpdates = true;\\n              }\\n            } else if (current18Match && saved17Match) {\\n              console.log(`${tag}: 找到两个版本,执行合并`);\\n              const mergedContent = await mergeFunction(current18Match[1], saved17Match[1]);\\n              console.log(`${tag} 合并后内容:`, mergedContent);\\n\\n              if (mergedContent && mergedContent !== current18Match[1]) {\\n                console.log(`${tag}: 内容有变化，进行更新`);\\n                updatedContent = updatedContent.replace(\\n                  tagRegex,\\n                  `<${tag}>${mergedContent}</${tag}>`\\n                );\\n                hasUpdates = true;\\n              }\\n            } else if (!current18Match && !saved17Match) {\\n              console.log(`${tag}: 两个版本都缺少该标签，创建空标签`);\\n              const insertPosition = updatedContent.indexOf('</gametext>');\\n              if (insertPosition !== -1) {\\n                updatedContent = updatedContent.slice(0, insertPosition) +\\n                  `<${tag}>\\\\n</${tag}>\\\\n` +\\n                  updatedContent.slice(insertPosition);\\n                hasUpdates = true;\\n              }\\n            }\\n          }\\n\\n          if (hasUpdates) {\\n            console.log('检测到内容更新，准备保存');\\n            // 修改转义处理方式\\n            const updatedGametext = updatedContent\\n              .replace(/\\\\\\\\\\\\|/g, '|')  // 先把已经转义的|转回来\\n              .replace(/\\\\\\\\\\\"/g, '\\\"')   // 先把已经转义的\\\"转回来\\n              .replace(/\\\\\\\\'/g, \\\"'\\\")   // 先把已经转义的'转回来\\n              .replace(/\\\\|/g, '\\\\\\\\|')  // 重新转义|\\n              .replace(/\\\"/g, '\\\\\\\\\\\"')   // 重新转义\\\"\\n              .replace(/'/g, \\\"\\\\\\\\'\\\");  // 重新转义'\\n\\n            console.log('更新当前消息');\\n            await setChatMessage(updatedGametext, await getLastMessageId(), {\\n              refresh: 'display_and_render_current'\\n            });\\n\\n            console.log('更新存档');\\n            await triggerSlashWithResult(`/setentryfield file=1xianxia uid=16 field=content \\\"${updatedGametext}\\\"`);\\n            await triggerSlashWithResult(`/setentryfield file=1xianxia uid=17 field=content \\\"${updatedGametext}\\\"`);\\n            await triggerSlashWithResult(`/setentryfield file=1xianxia uid=18 field=content \\\"${updatedGametext}\\\"`);\\n            console.log('存档更新完成');\\n          } else {\\n            console.log('没有检测到需要更新的内容，同步保存当前内容');\\n            await triggerSlashWithResult(`/setentryfield file=1xianxia uid=16 field=content \\\"${processedContent}\\\"`);\\n            await triggerSlashWithResult(`/setentryfield file=1xianxia uid=17 field=content \\\"${processedContent}\\\"`);\\n          }\\n        } else {\\n          console.log('至少有一个标题未找到，直接同步保存当前内容');\\n          await triggerSlashWithResult(`/setentryfield file=1xianxia uid=16 field=content \\\"${processedContent}\\\"`);\\n          await triggerSlashWithResult(`/setentryfield file=1xianxia uid=17 field=content \\\"${processedContent}\\\"`);\\n        }\\n\\n        console.log('autoCheckAndFill执行完成');\\n      } catch (error) {\\n        console.error('执行过程中发生错误:', error);\\n      }\\n    }\\n\\n    // 合并主角信息\\n    async function mergeCharacterInfo(currentContent, savedContent) {\\n      // 检查当前内容是否为空或过短\\n      if (!currentContent || currentContent.length < 40) {\\n        console.log('当前主角信息内容为空或过短，使用存档内容');\\n        return savedContent;\\n      }\\n\\n      const currentLines = currentContent.split('\\\\n').filter(line => line.trim());\\n      const savedLines = savedContent.split('\\\\n').filter(line => line.trim());\\n\\n      // 创建一个Map来存储所有信息\\n      const infoMap = new Map();\\n\\n      // 处理存档的信息\\n      savedLines.forEach(line => {\\n        const [category, key, value] = line.split('|').map(s => s.trim());\\n        infoMap.set(`${category}|${key}`, line);\\n      });\\n\\n      // 处理当前的信息，更新变化的部分\\n      currentLines.forEach(line => {\\n        const [category, key, value] = line.split('|').map(s => s.trim());\\n        const mapKey = `${category}|${key}`;\\n        infoMap.set(mapKey, line); // 使用当前内容覆盖旧内容\\n      });\\n\\n      return Array.from(infoMap.values()).join('\\\\n');\\n    }\\n\\n    // 合并社交信息\\n    async function mergeSocialInfo(currentContent, savedContent) {\\n      console.log('开始合并社交信息');\\n\\n      const currentLines = currentContent.split('\\\\n').filter(line => line.trim());\\n      const savedLines = savedContent.split('\\\\n').filter(line => line.trim());\\n\\n      // 用于存储所有关系类型和人物信息\\n      const relationTypes = new Map();\\n      let currentType = '';\\n      let currentPerson = null;\\n      let currentPersonLines = [];\\n\\n      // 辅助函数：处理并存储一个人物的信息\\n      function storePersonInfo(type, personLines, isFromCurrent) {\\n        if (!personLines.length) return;\\n\\n        const nameMatch = personLines.find(line => line.startsWith('关系人物|'));\\n        if (!nameMatch) return;\\n\\n        const name = nameMatch.split('|')[1];\\n        const key = `${type}|${name}`;\\n\\n        // 如果是当前内容的人物信息，直接覆盖\\n        if (isFromCurrent) {\\n          if (!relationTypes.has(type)) {\\n            relationTypes.set(type, new Map());\\n          }\\n          relationTypes.get(type).set(name, personLines);\\n        } else {\\n          // 如果是存档内容，只在当前内容没有该人物时才添加\\n          if (!relationTypes.has(type)) {\\n            relationTypes.set(type, new Map());\\n          }\\n          if (!relationTypes.get(type).has(name)) {\\n            relationTypes.get(type).set(name, personLines);\\n          }\\n        }\\n      }\\n\\n      // 处理当前内容\\n      for (const line of currentLines) {\\n        if (line.startsWith('关系类型|')) {\\n          if (currentPerson) {\\n            storePersonInfo(currentType, currentPersonLines, true);\\n          }\\n          currentType = line.split('|')[1];\\n          currentPerson = null;\\n          currentPersonLines = [line];\\n        } else if (line.startsWith('关系人物|')) {\\n          if (currentPerson) {\\n            storePersonInfo(currentType, currentPersonLines, true);\\n          }\\n          currentPerson = line.split('|')[1];\\n          currentPersonLines = [line];\\n        } else if (currentPerson) {\\n          currentPersonLines.push(line);\\n        }\\n      }\\n      // 处理最后一个人物\\n      if (currentPerson) {\\n        storePersonInfo(currentType, currentPersonLines, true);\\n      }\\n\\n      // 重置变量，处理存档内容\\n      currentType = '';\\n      currentPerson = null;\\n      currentPersonLines = [];\\n\\n      // 处理存档内容\\n      for (const line of savedLines) {\\n        if (line.startsWith('关系类型|')) {\\n          if (currentPerson) {\\n            storePersonInfo(currentType, currentPersonLines, false);\\n          }\\n          currentType = line.split('|')[1];\\n          currentPerson = null;\\n          currentPersonLines = [line];\\n        } else if (line.startsWith('关系人物|')) {\\n          if (currentPerson) {\\n            storePersonInfo(currentType, currentPersonLines, false);\\n          }\\n          currentPerson = line.split('|')[1];\\n          currentPersonLines = [line];\\n        } else if (currentPerson) {\\n          currentPersonLines.push(line);\\n        }\\n      }\\n      // 处理最后一个人物\\n      if (currentPerson) {\\n        storePersonInfo(currentType, currentPersonLines, false);\\n      }\\n\\n      // 生成最终结果\\n      const result = [];\\n      for (const [type, persons] of relationTypes) {\\n        result.push(`关系类型|${type}`);\\n        for (const [name, personLines] of persons) {\\n          result.push(...personLines.filter(line => !line.startsWith('关系类型|')));\\n        }\\n      }\\n\\n      return result.join('\\\\n');\\n    }\\n\\n    // 合并大事记\\n    async function mergeTimelineInfo(currentContent, savedContent) {\\n      console.log('开始合并大事记');\\n      console.log('当前内容:', currentContent);\\n      console.log('存档内容:', savedContent);\\n\\n      // 创建Map存储事件,以日期为键\\n      const eventMap = new Map();\\n\\n      // 辅助函数：从事件文本中提取完整事件\\n      function extractEvents(content) {\\n        const events = new Map();\\n        let currentEvent = [];\\n        let currentDate = null;\\n        let currentIndex = null;\\n\\n        const lines = content.split('\\\\n').filter(line => line.trim());\\n\\n        for (const line of lines) {\\n          if (line.startsWith('事件|日期|')) {\\n            if (currentEvent.length > 0 && currentDate) {\\n              // 使用日期和序号的组合作为键，确保唯一性\\n              const key = `${currentDate}_${currentIndex || 0}`;\\n              events.set(key, currentEvent);\\n            }\\n            currentEvent = [line];\\n            currentDate = line.split('|')[2];\\n            currentIndex = null;\\n          } else if (line.startsWith('事件序号|')) {\\n            currentIndex = parseInt(line.split('|')[1]);\\n            currentEvent.push(line);\\n          } else {\\n            currentEvent.push(line);\\n          }\\n        }\\n\\n        // 处理最后一个事件\\n        if (currentEvent.length > 0 && currentDate) {\\n          const key = `${currentDate}_${currentIndex || 0}`;\\n          events.set(key, currentEvent);\\n        }\\n\\n        return events;\\n      }\\n\\n      // 分别提取存档和当前的事件\\n      const savedEventsMap = extractEvents(savedContent);\\n      const currentEventsMap = extractEvents(currentContent);\\n\\n      console.log('存档事件Map:', savedEventsMap);\\n      console.log('当前事件Map:', currentEventsMap);\\n\\n      // 合并事件\\n      for (const [key, eventLines] of savedEventsMap) {\\n        eventMap.set(key, eventLines);\\n      }\\n      for (const [key, eventLines] of currentEventsMap) {\\n        eventMap.set(key, eventLines);\\n      }\\n\\n      // 按日期倒序排序（最新的在前）并合并所有事件\\n      const sortedEvents = Array.from(eventMap.entries())\\n        .sort(([dateA], [dateB]) => {\\n          // 从日期字符串中提取年月日\\n          const [yearA, monthA, dayA] = dateA.split('_')[0].split('年')[1].split('月').map(n => parseInt(n));\\n          const [yearB, monthB, dayB] = dateB.split('_')[0].split('年')[1].split('月').map(n => parseInt(n));\\n\\n          // 比较年月日\\n          if (yearA !== yearB) return yearB - yearA;\\n          if (monthA !== monthB) return monthB - monthA;\\n          return dayB - dayA;\\n        })\\n        .map(([_, lines]) => lines.join('\\\\n'));\\n\\n      console.log('最终合并的事件Map:', eventMap);\\n      console.log('排序后的事件:', sortedEvents);\\n\\n      const result = sortedEvents.join('\\\\n');\\n      console.log('最终结果:', result);\\n\\n      return result;\\n    }\\n\\n    // 合并宗门信息\\n    async function mergeSectInfo(currentContent, savedContent) {\\n      // 检查当前内容是否为空或过短\\n      if (!currentContent || currentContent.length < 40) {\\n        console.log('当前宗门信息内容为空或过短，使用存档内容');\\n        return savedContent;\\n      }\\n\\n      const currentLines = currentContent.split('\\\\n').filter(line => line.trim());\\n      const savedLines = savedContent.split('\\\\n').filter(line => line.trim());\\n\\n      // 创建一个Map来存储所有信息\\n      const infoMap = new Map();\\n\\n      // 处理存档的信息\\n      savedLines.forEach(line => {\\n        const [category, ...rest] = line.split('|').map(s => s.trim());\\n        infoMap.set(line, line);\\n      });\\n\\n      // 处理当前的信息，更新变化的部分\\n      currentLines.forEach(line => {\\n        infoMap.set(line, line); // 使用当前内容覆盖旧内容\\n      });\\n\\n      return Array.from(infoMap.values()).join('\\\\n');\\n    }\\n\\n    // 立即执行autoCheckAndFill函数\\n    (async () => {\\n      try {\\n        await autoCheckAndFill();\\n        console.log('自动检测和填补执行完成');\\n      } catch (error) {\\n        console.error('执行autoCheckAndFill时发生错误:', error);\\n      }\\n    })();\\n  </script>\\n</body>\\n\\n</html>\\n```\",\"trimStrings\":[],\"placement\":[2],\"substituteRegex\":0,\"minDepth\":null,\"maxDepth\":null,\"markdownOnly\":true,\"promptOnly\":false},{\"id\":\"5c19529a-c5cd-4dc2-bc25-cf00b27f31fe\",\"scriptName\":\"开局经历\",\"disabled\":false,\"runOnEdit\":true,\"findRegex\":\"【kjjl】\",\"replaceString\":\"```\\n<!DOCTYPE html>\\n<html lang=\\\"zh\\\">\\n\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <title>修仙开局选择</title>\\n  <style>\\n    @import url('https://static.zeoseven.com/zsft/235/main/result.css');\\n\\n    :root {\\n      --global-font: \\\"chengrongguangke\\\";\\n      --panel-bg: rgba(255, 255, 255, 0.85);\\n      --primary-color: #4CAF50;\\n      --hover-color: #45a049;\\n      --accent-color: #2196F3;\\n      --error-color: #f44336;\\n      --success-color: #4CAF50;\\n      --warning-color: #FFC107;\\n      --disabled-color: #9E9E9E;\\n      --text-primary: #2c3e50;\\n      --text-secondary: #34495e;\\n      --text-tertiary: #455a64;\\n    }\\n\\n    body {\\n      margin: 0;\\n      padding: 0;\\n      cursor: url('data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"%234CAF50\\\" stroke-width=\\\"2\\\"><path d=\\\"M12 2L2 12l10 10 10-10L12 2z\\\"/></svg>') 12 12, auto;\\n      height: 800PX;\\n      background: url('https://pub-0f03753252fb439e966a538d805f20ef.r2.dev/docs/1734444679152.gif') no-repeat center center fixed;\\n      background-size: cover;\\n      font-family: var(--global-font);\\n      color: var(--text-primary);\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n    }\\n\\n    .creation-container {\\n      width: 90%;\\n      max-width: 1400px;\\n      background: var(--panel-bg);\\n      backdrop-filter: blur(10px);\\n      border-radius: 15px;\\n      padding: 30px;\\n      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\\n      display: grid;\\n      grid-template-rows: auto auto 1fr auto;\\n      gap: 20px;\\n      max-height: 90vh;\\n      overflow-y: auto;\\n    }\\n\\n    /* 主标题样式 */\\n    .creation-header {\\n      text-align: center;\\n      padding: 20px 0;\\n      margin-bottom: 30px;\\n      border-bottom: 3px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .creation-header h1 {\\n      font-size: 2.8em;\\n      color: var(--text-primary);\\n      margin: 0;\\n      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .creation-header p {\\n      font-size: 1.4em;\\n      color: var(--text-secondary);\\n      margin: 10px 0 0;\\n    }\\n\\n    /* 步骤指示器样式 */\\n    .steps-indicator {\\n      display: flex;\\n      justify-content: center;\\n      margin-bottom: 30px;\\n      padding: 20px 0;\\n      border-bottom: 2px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .step-item {\\n      display: flex;\\n      align-items: center;\\n      margin: 0 20px;\\n      opacity: 0.5;\\n      transition: all 0.3s ease;\\n    }\\n\\n    .step-item.active {\\n      opacity: 1;\\n    }\\n\\n    .step-number {\\n      width: 30px;\\n      height: 30px;\\n      border-radius: 50%;\\n      background: var(--primary-color);\\n      color: white;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      margin-right: 10px;\\n      font-weight: bold;\\n    }\\n\\n    .step-text {\\n      font-size: 1.2em;\\n      font-weight: bold;\\n      color: var(--text-primary);\\n    }\\n\\n    /* 分节标题样式 */\\n    .section-title {\\n      text-align: left;\\n      padding: 15px 25px;\\n      margin: 25px 0;\\n      font-size: 1.8em;\\n      color: var(--text-primary);\\n      border-bottom: 3px solid rgba(0, 0, 0, 0.1);\\n      background: rgba(255, 255, 255, 0.4);\\n      border-radius: 10px;\\n      font-weight: bold;\\n      text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    /* 时代选择面板样式 */\\n    .era-selection {\\n      display: grid;\\n      grid-template-columns: repeat(2, 1fr);\\n      gap: 20px;\\n      padding: 20px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 15px;\\n      margin: 20px 0;\\n    }\\n\\n    .era-card {\\n      background: rgba(255, 255, 255, 0.5);\\n      border-radius: 15px;\\n      padding: 20px;\\n      cursor: pointer;\\n      transition: all 0.3s ease;\\n      position: relative;\\n      overflow: hidden;\\n    }\\n\\n    .era-card:hover {\\n      transform: translateY(-5px);\\n      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .era-card.selected {\\n      border: 2px solid var(--primary-color);\\n      background: rgba(76, 175, 80, 0.1);\\n    }\\n\\n    .era-header {\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      margin-bottom: 15px;\\n      padding-bottom: 10px;\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .era-name {\\n      font-size: 1.4em;\\n      font-weight: bold;\\n      color: var(--text-primary);\\n    }\\n\\n    .era-tag {\\n      padding: 5px 15px;\\n      border-radius: 15px;\\n      background: rgba(76, 175, 80, 0.2);\\n      color: var(--primary-color);\\n      font-size: 0.9em;\\n      font-weight: bold;\\n    }\\n\\n    .era-description {\\n      font-size: 1.1em;\\n      color: var(--text-secondary);\\n      line-height: 1.6;\\n      margin: 10px 0;\\n    }\\n\\n    .era-features {\\n      margin: 15px 0;\\n    }\\n\\n    .era-feature {\\n      font-size: 1em;\\n      color: var(--text-tertiary);\\n      padding: 8px 12px;\\n      margin: 5px 0;\\n      background: rgba(255, 255, 255, 0.4);\\n      border-radius: 6px;\\n    }\\n\\n    .era-background {\\n      font-size: 0.95em;\\n      color: var(--text-tertiary);\\n      font-style: italic;\\n      margin-top: 15px;\\n      padding: 10px;\\n      background: rgba(255, 255, 255, 0.3);\\n      border-radius: 6px;\\n    }\\n\\n    /* 难度选择面板样式 */\\n    .difficulty-selection {\\n      display: grid;\\n      grid-template-columns: repeat(3, 1fr);\\n      gap: 20px;\\n      padding: 20px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 15px;\\n      margin: 20px 0;\\n    }\\n\\n    .difficulty-card {\\n      background: rgba(255, 255, 255, 0.5);\\n      border-radius: 15px;\\n      padding: 20px;\\n      cursor: pointer;\\n      transition: all 0.3s ease;\\n    }\\n\\n    .difficulty-card:hover {\\n      transform: translateY(-5px);\\n      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .difficulty-card.selected {\\n      border: 2px solid var(--primary-color);\\n      background: rgba(76, 175, 80, 0.1);\\n    }\\n\\n    .difficulty-header {\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      margin-bottom: 15px;\\n      padding-bottom: 10px;\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .difficulty-name {\\n      font-size: 1.4em;\\n      font-weight: bold;\\n      color: var(--text-primary);\\n    }\\n\\n    .points-value {\\n      font-size: 1.2em;\\n      color: var(--accent-color);\\n      font-weight: bold;\\n    }\\n\\n    .difficulty-description {\\n      font-size: 1.1em;\\n      color: var(--text-secondary);\\n      line-height: 1.6;\\n      margin: 10px 0;\\n    }\\n\\n    .difficulty-feature {\\n      font-size: 1em;\\n      color: var(--text-tertiary);\\n      padding: 8px 12px;\\n      margin: 5px 0;\\n      background: rgba(255, 255, 255, 0.4);\\n      border-radius: 6px;\\n    }\\n\\n    /* 属性选择面板样式 */\\n    .attributes-grid {\\n      display: grid;\\n      grid-template-columns: repeat(2, 1fr);\\n      gap: 20px;\\n      padding: 20px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 15px;\\n      margin: 20px 0;\\n    }\\n\\n    .attribute-card {\\n      background: rgba(255, 255, 255, 0.5);\\n      border-radius: 15px;\\n      padding: 20px;\\n    }\\n\\n    .attribute-header {\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      margin-bottom: 10px;\\n    }\\n\\n    .attribute-name {\\n      font-size: 1.2em;\\n      font-weight: bold;\\n      color: var(--text-primary);\\n    }\\n\\n    .attribute-value {\\n      display: flex;\\n      align-items: center;\\n      gap: 10px;\\n    }\\n\\n    .decrease-btn,\\n    .increase-btn {\\n      width: 30px;\\n      height: 30px;\\n      border: none;\\n      border-radius: 50%;\\n      background: var(--primary-color);\\n      color: white;\\n      cursor: pointer;\\n      font-size: 1.2em;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      transition: all 0.3s ease;\\n    }\\n\\n    .decrease-btn:hover,\\n    .increase-btn:hover {\\n      background: var(--hover-color);\\n    }\\n\\n    .decrease-btn:disabled,\\n    .increase-btn:disabled {\\n      background: var(--disabled-color);\\n      cursor: not-allowed;\\n    }\\n\\n    .attribute-description {\\n      font-size: 0.9em;\\n      color: var(--text-secondary);\\n      margin-top: 10px;\\n    }\\n\\n    .value {\\n      font-size: 1.2em;\\n      font-weight: bold;\\n      color: var(--text-primary);\\n      min-width: 30px;\\n      text-align: center;\\n    }\\n\\n    /* 导航按钮样式 */\\n    .nav-buttons {\\n      display: flex;\\n      justify-content: space-between;\\n      padding: 20px;\\n      border-top: 2px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .nav-btn {\\n      padding: 12px 30px;\\n      border: none;\\n      border-radius: 25px;\\n      font-size: 1.1em;\\n      cursor: pointer;\\n      transition: all 0.3s ease;\\n      font-family: var(--global-font);\\n    }\\n\\n    .prev-btn {\\n      background: linear-gradient(135deg, #757575, #616161);\\n      color: white;\\n    }\\n\\n    .next-btn {\\n      background: linear-gradient(135deg, var(--primary-color), var(--hover-color));\\n      color: white;\\n    }\\n\\n    .nav-btn:hover:not(:disabled) {\\n      transform: translateY(-2px);\\n      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\\n    }\\n\\n    .nav-btn:disabled {\\n      background: #ccc;\\n      cursor: not-allowed;\\n      transform: none;\\n      box-shadow: none;\\n    }\\n\\n    /* 经历选择面板样式 */\\n    .experiences-grid {\\n      display: grid;\\n      grid-template-columns: repeat(2, 1fr);\\n      gap: 20px;\\n      padding: 20px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 15px;\\n      margin: 20px 0;\\n    }\\n\\n    .experience-card {\\n      background: rgba(255, 255, 255, 0.5);\\n      border-radius: 15px;\\n      padding: 20px;\\n      cursor: pointer;\\n      transition: all 0.3s ease;\\n    }\\n\\n    .experience-card:hover {\\n      transform: translateY(-5px);\\n      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .experience-card.selected {\\n      border: 2px solid var(--primary-color);\\n      background: rgba(76, 175, 80, 0.1);\\n    }\\n\\n    .experience-header {\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      margin-bottom: 15px;\\n      padding-bottom: 10px;\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .experience-name {\\n      font-size: 1.4em;\\n      font-weight: bold;\\n      color: var(--text-primary);\\n    }\\n\\n    .experience-cost {\\n      font-size: 1.1em;\\n      color: var(--accent-color);\\n      font-weight: bold;\\n    }\\n\\n    .experience-bonus {\\n      display: flex;\\n      flex-wrap: wrap;\\n      gap: 10px;\\n      margin: 10px 0;\\n    }\\n\\n    .bonus-item {\\n      padding: 5px 10px;\\n      border-radius: 15px;\\n      font-size: 0.9em;\\n      font-weight: bold;\\n    }\\n\\n    .bonus-item.positive {\\n      background: rgba(76, 175, 80, 0.2);\\n      color: var(--success-color);\\n    }\\n\\n    .bonus-item.negative {\\n      background: rgba(244, 67, 54, 0.2);\\n      color: var(--error-color);\\n    }\\n\\n    /* 世界选择面板样式 */\\n    .worlds-grid {\\n      display: grid;\\n      grid-template-columns: repeat(2, 1fr);\\n      gap: 20px;\\n      padding: 20px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 15px;\\n      margin: 20px 0;\\n    }\\n\\n    .world-card {\\n      background: rgba(255, 255, 255, 0.5);\\n      border-radius: 15px;\\n      padding: 20px;\\n      cursor: pointer;\\n      transition: all 0.3s ease;\\n    }\\n\\n    .world-card:hover {\\n      transform: translateY(-5px);\\n      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .world-card.selected {\\n      border: 2px solid var(--primary-color);\\n      background: rgba(76, 175, 80, 0.1);\\n    }\\n\\n    .world-header {\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      margin-bottom: 15px;\\n      padding-bottom: 10px;\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .world-name {\\n      font-size: 1.4em;\\n      font-weight: bold;\\n      color: var(--text-primary);\\n    }\\n\\n    .world-rank {\\n      padding: 5px 15px;\\n      border-radius: 15px;\\n      font-size: 0.9em;\\n      font-weight: bold;\\n    }\\n\\n    .world-rank.SS {\\n      background: rgba(33, 150, 243, 0.2);\\n      color: var(--accent-color);\\n    }\\n\\n    .world-rank.S {\\n      background: rgba(33, 150, 243, 0.2);\\n      color: var(--accent-color);\\n    }\\n\\n    .world-rank.A {\\n      background: rgba(76, 175, 80, 0.2);\\n      color: var(--primary-color);\\n    }\\n\\n    /* 添加SSS级世界的样式 */\\n    .world-rank.SSS {\\n      background: linear-gradient(135deg, rgba(255, 0, 0, 0.2), rgba(255, 0, 0, 0.4));\\n      color: #ff0000;\\n      font-weight: bold;\\n      text-shadow: 0 0 5px rgba(255, 0, 0, 0.3);\\n      border: 1px solid rgba(255, 0, 0, 0.3);\\n      animation: sss-pulse 2s infinite;\\n    }\\n\\n    @keyframes sss-pulse {\\n      0% {\\n        box-shadow: 0 0 5px rgba(255, 0, 0, 0.5);\\n      }\\n\\n      50% {\\n        box-shadow: 0 0 15px rgba(255, 0, 0, 0.8);\\n      }\\n\\n      100% {\\n        box-shadow: 0 0 5px rgba(255, 0, 0, 0.5);\\n      }\\n    }\\n\\n    /* B-D级世界的样式 */\\n    .world-rank.B {\\n      background: rgba(156, 39, 176, 0.2);\\n      /* 紫色背景 */\\n      color: #9c27b0;\\n      /* 紫色文字 */\\n    }\\n\\n    .world-rank.C {\\n      background: rgba(63, 81, 181, 0.2);\\n      /* 靛蓝色背景 */\\n      color: #3f51b5;\\n      /* 靛蓝色文字 */\\n    }\\n\\n    .world-rank.D {\\n      background: rgba(96, 125, 139, 0.2);\\n      /* 蓝灰色背景 */\\n      color: #607d8b;\\n      /* 蓝灰色文字 */\\n    }\\n\\n    .world-info {\\n      margin: 10px 0;\\n      font-size: 1.1em;\\n    }\\n\\n    .world-info-label {\\n      font-weight: bold;\\n      color: var(--text-primary);\\n      margin-right: 10px;\\n    }\\n\\n    .world-features {\\n      margin: 15px 0;\\n    }\\n\\n    .world-feature {\\n      font-size: 1em;\\n      color: var(--text-tertiary);\\n      padding: 8px 12px;\\n      margin: 5px 0;\\n      background: rgba(255, 255, 255, 0.4);\\n      border-radius: 6px;\\n    }\\n\\n    .world-description {\\n      font-size: 1.1em;\\n      color: var(--text-secondary);\\n      line-height: 1.6;\\n      margin: 10px 0;\\n    }\\n\\n    .world-cultivation-path {\\n      margin-top: 15px;\\n      padding: 10px;\\n      background: rgba(255, 255, 255, 0.3);\\n      border-radius: 6px;\\n    }\\n\\n    .path-title {\\n      font-weight: bold;\\n      margin-bottom: 5px;\\n      color: var(--text-primary);\\n    }\\n\\n    .path-content {\\n      color: var(--text-tertiary);\\n      font-style: italic;\\n    }\\n\\n    .world-background {\\n      font-size: 0.95em;\\n      color: var(--text-tertiary);\\n      font-style: italic;\\n      margin-top: 15px;\\n      padding: 10px;\\n      background: rgba(255, 255, 255, 0.3);\\n      border-radius: 6px;\\n    }\\n\\n    /*    选择面板样式 */\\n    .origins-grid {\\n      display: grid;\\n      grid-template-columns: repeat(2, 1fr);\\n      gap: 20px;\\n      padding: 20px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 15px;\\n      margin: 20px 0;\\n    }\\n\\n    .origin-card {\\n      background: rgba(255, 255, 255, 0.5);\\n      border-radius: 15px;\\n      padding: 20px;\\n      cursor: pointer;\\n      transition: all 0.3s ease;\\n    }\\n\\n    .origin-card:hover {\\n      transform: translateY(-5px);\\n      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .origin-card.selected {\\n      border: 2px solid var(--primary-color);\\n      background: rgba(76, 175, 80, 0.1);\\n    }\\n\\n    /* 属性总览样式 */\\n    .attributes-summary {\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 15px;\\n      padding: 20px;\\n      margin: 20px 0;\\n    }\\n\\n    .summary-grid {\\n      display: grid;\\n      grid-template-columns: repeat(4, 1fr);\\n      gap: 15px;\\n    }\\n\\n    .summary-item {\\n      background: rgba(255, 255, 255, 0.5);\\n      padding: 10px;\\n      border-radius: 8px;\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n    }\\n\\n    .summary-name {\\n      font-weight: bold;\\n      color: var(--text-primary);\\n    }\\n\\n    .summary-value {\\n      font-weight: bold;\\n    }\\n\\n    .summary-value.positive {\\n      color: var(--success-color);\\n    }\\n\\n    .summary-value.negative {\\n      color: var(--error-color);\\n    }\\n\\n    /* 创建结果显示样式 */\\n    .creation-summary {\\n      background: rgba(255, 255, 255, 0.9);\\n      border-radius: 15px;\\n      padding: 30px;\\n      max-width: 800px;\\n      margin: 0 auto;\\n    }\\n\\n    .creation-summary h2 {\\n      text-align: center;\\n      color: var(--primary-color);\\n      margin-bottom: 30px;\\n    }\\n\\n    .summary-section {\\n      margin-bottom: 25px;\\n      padding: 20px;\\n      background: rgba(255, 255, 255, 0.5);\\n      border-radius: 10px;\\n    }\\n\\n    .summary-section h3 {\\n      color: var(--text-primary);\\n      margin-bottom: 15px;\\n      padding-bottom: 10px;\\n      border-bottom: 2px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .summary-section p {\\n      margin: 8px 0;\\n      font-size: 1.1em;\\n      color: var(--text-secondary);\\n    }\\n\\n    .origin-header {\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      margin-bottom: 15px;\\n      padding-bottom: 10px;\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .origin-name {\\n      font-size: 1.4em;\\n      font-weight: bold;\\n      color: var(--text-primary);\\n    }\\n\\n    .origin-cost {\\n      font-size: 1.1em;\\n      color: var(--accent-color);\\n      font-weight: bold;\\n    }\\n\\n    .origin-content {\\n      margin-top: 10px;\\n    }\\n\\n    .origin-feature {\\n      font-size: 1em;\\n      color: var(--text-tertiary);\\n      padding: 8px 12px;\\n      margin: 5px 0;\\n      background: rgba(255, 255, 255, 0.4);\\n      border-radius: 6px;\\n    }\\n\\n    .origin-bonus {\\n      display: flex;\\n      flex-wrap: wrap;\\n      gap: 10px;\\n      margin: 10px 0;\\n    }\\n\\n    .fame-value {\\n      font-weight: bold;\\n      padding: 5px 10px;\\n      border-radius: 8px;\\n      margin-top: 10px;\\n    }\\n\\n    .fame-value.positive {\\n      background: rgba(76, 175, 80, 0.2);\\n      color: var(--success-color);\\n    }\\n\\n    .fame-value.negative {\\n      background: rgba(244, 67, 54, 0.2);\\n      color: var(--error-color);\\n    }\\n\\n    .start-game-btn {\\n      padding: 15px 40px;\\n      font-size: 1.2em;\\n      background: linear-gradient(135deg, var(--primary-color), var(--hover-color));\\n      color: white;\\n      border: none;\\n      border-radius: 25px;\\n      cursor: pointer;\\n      transition: all 0.3s ease;\\n      margin-top: 20px;\\n    }\\n\\n    .start-game-btn:hover {\\n      transform: translateY(-2px);\\n      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\\n    }\\n\\n    @media screen and (max-width: 1024px) {\\n      .creation-container {\\n        width: 95%;\\n        padding: 20px;\\n      }\\n\\n      .era-selection,\\n      .worlds-grid,\\n      .origins-grid,\\n      .experiences-grid {\\n        grid-template-columns: 1fr;\\n        gap: 15px;\\n      }\\n\\n      .attributes-grid {\\n        grid-template-columns: repeat(2, 1fr);\\n      }\\n\\n      .summary-grid {\\n        grid-template-columns: repeat(3, 1fr);\\n      }\\n\\n      .creation-header h1 {\\n        font-size: 2.2em;\\n      }\\n\\n      .section-title {\\n        font-size: 1.5em;\\n      }\\n    }\\n\\n    /* 在现有的 style 标签内添加以下媒体查询代码 */\\n\\n    /* 平板设备 - 屏幕宽度小于 1024px */\\n    @media screen and (max-width: 1024px) {\\n      .creation-container {\\n        width: 95%;\\n        padding: 20px;\\n        max-height: 95vh;\\n      }\\n\\n      .creation-header h1 {\\n        font-size: 2.2em;\\n      }\\n\\n      .creation-header p {\\n        font-size: 1.2em;\\n      }\\n\\n      .era-selection,\\n      .difficulty-selection {\\n        grid-template-columns: 1fr;\\n        gap: 15px;\\n      }\\n\\n      .attributes-grid {\\n        grid-template-columns: repeat(2, 1fr);\\n      }\\n\\n      .step-item {\\n        margin: 0 10px;\\n      }\\n\\n      .section-title {\\n        font-size: 1.5em;\\n        padding: 12px 20px;\\n      }\\n    }\\n\\n    /* 手机设备 - 屏幕宽度小于 768px */\\n    @media screen and (max-width: 768px) {\\n      body {\\n        height: auto;\\n        min-height: 100vh;\\n      }\\n\\n      .creation-container {\\n        width: 100%;\\n        padding: 15px;\\n        border-radius: 0;\\n        max-height: none;\\n      }\\n\\n      .creation-header h1 {\\n        font-size: 1.8em;\\n      }\\n\\n      .steps-indicator {\\n        flex-wrap: wrap;\\n        justify-content: center;\\n        gap: 10px;\\n        padding: 15px 0;\\n      }\\n\\n      .step-item {\\n        margin: 5px;\\n      }\\n\\n      .attributes-grid {\\n        grid-template-columns: 1fr;\\n      }\\n\\n      .attribute-card {\\n        padding: 15px;\\n      }\\n\\n      .nav-buttons {\\n        padding: 15px;\\n        flex-direction: column;\\n        gap: 10px;\\n      }\\n\\n      .nav-btn {\\n        width: 100%;\\n        padding: 10px;\\n      }\\n\\n      .era-card,\\n      .difficulty-card {\\n        padding: 15px;\\n      }\\n\\n      .era-header,\\n      .difficulty-header {\\n        flex-direction: column;\\n        align-items: flex-start;\\n        gap: 10px;\\n      }\\n\\n      .era-tag {\\n        align-self: flex-start;\\n      }\\n    }\\n\\n    /* 小型手机设备 - 屏幕宽度小于 5000px */\\n    @media screen and (max-width: 5000px) {\\n      .creation-header h1 {\\n        font-size: 1.5em;\\n      }\\n\\n      .creation-header p {\\n        font-size: 1em;\\n      }\\n\\n      .step-number {\\n        width: 25px;\\n        height: 25px;\\n        font-size: 0.9em;\\n      }\\n\\n      .step-text {\\n        font-size: 0.9em;\\n      }\\n\\n      .section-title {\\n        font-size: 1.2em;\\n        padding: 10px 15px;\\n      }\\n\\n      .era-name,\\n      .difficulty-name {\\n        font-size: 1.2em;\\n      }\\n\\n      .era-description,\\n      .difficulty-description {\\n        font-size: 0.9em;\\n      }\\n\\n      .era-feature,\\n      .difficulty-feature {\\n        font-size: 0.85em;\\n        padding: 6px 10px;\\n      }\\n\\n      .attribute-name {\\n        font-size: 1em;\\n      }\\n\\n      .attribute-description {\\n        font-size: 0.85em;\\n      }\\n\\n      .decrease-btn,\\n      .increase-btn {\\n        width: 25px;\\n        height: 25px;\\n      }\\n    }\\n\\n    /* 处理横屏模式 */\\n    @media screen and (max-height: 600px) and (orientation: landscape) {\\n      .creation-container {\\n        max-height: none;\\n        height: auto;\\n      }\\n\\n      .steps-indicator {\\n        padding: 10px 0;\\n      }\\n\\n      .creation-header {\\n        padding: 10px 0;\\n        margin-bottom: 15px;\\n      }\\n\\n      .section-title {\\n        margin: 15px 0;\\n      }\\n\\n      .nav-buttons {\\n        position: static;\\n        padding: 10px;\\n      }\\n    }\\n\\n    /* 优化触摸设备交互 */\\n    @media (hover: none) and (pointer: coarse) {\\n\\n      .era-card,\\n      .difficulty-card {\\n        cursor: pointer;\\n        -webkit-tap-highlight-color: transparent;\\n      }\\n\\n      .decrease-btn,\\n      .increase-btn,\\n      .nav-btn {\\n        min-height: 44px;\\n        min-width: 44px;\\n      }\\n\\n      .era-card:hover,\\n      .difficulty-card:hover {\\n        transform: none;\\n      }\\n\\n      .nav-btn:hover {\\n        transform: none;\\n      }\\n\\n      /* 加点击区域 */\\n      .attribute-value {\\n        gap: 15px;\\n      }\\n\\n      /* 优化滚动条 */\\n      ::-webkit-scrollbar {\\n        width: 12px;\\n        height: 12px;\\n      }\\n    }\\n\\n    /* 创建总结页面的响应式样式 */\\n    @media screen and (max-width: 768px) {\\n      .creation-summary {\\n        padding: 15px;\\n      }\\n\\n      .summary-section {\\n        margin-bottom: 20px;\\n      }\\n\\n      .summary-section h3 {\\n        font-size: 1.2em;\\n      }\\n\\n      .experience-summary {\\n        padding: 10px;\\n      }\\n\\n      .experience-name {\\n        font-size: 1em;\\n      }\\n\\n      .experience-desc {\\n        font-size: 0.9em;\\n      }\\n\\n      .start-game-btn {\\n        width: 100%;\\n        margin-top: 20px;\\n      }\\n    }\\n\\n    /* 性别选择样式 */\\n    .gender-selection {\\n      display: grid;\\n      grid-template-columns: repeat(4, 1fr);\\n      gap: 20px;\\n      padding: 20px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 15px;\\n      margin: 20px 0;\\n    }\\n\\n    .gender-card {\\n      background: rgba(255, 255, 255, 0.5);\\n      border-radius: 15px;\\n      padding: 20px;\\n      cursor: pointer;\\n      transition: all 0.3s ease;\\n    }\\n\\n    .gender-card:hover {\\n      transform: translateY(-5px);\\n      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .gender-card.selected {\\n      border: 2px solid var(--primary-color);\\n      background: rgba(76, 175, 80, 0.1);\\n    }\\n\\n    /* 种族选择样式 */\\n    .race-selection {\\n      display: grid;\\n      grid-template-columns: repeat(3, 1fr);\\n      gap: 20px;\\n      padding: 20px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 15px;\\n      margin: 20px 0;\\n    }\\n\\n    .race-card {\\n      background: rgba(255, 255, 255, 0.5);\\n      border-radius: 15px;\\n      padding: 20px;\\n      cursor: pointer;\\n      transition: all 0.3s ease;\\n    }\\n\\n    .race-card:hover {\\n      transform: translateY(-5px);\\n      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .race-card.selected {\\n      border: 2px solid var(--primary-color);\\n      background: rgba(76, 175, 80, 0.1);\\n    }\\n\\n    /* 响应式布局 */\\n    @media screen and (max-width: 1024px) {\\n      .gender-selection {\\n        grid-template-columns: repeat(2, 1fr);\\n      }\\n\\n      .race-selection {\\n        grid-template-columns: repeat(2, 1fr);\\n      }\\n    }\\n\\n    @media screen and (max-width: 768px) {\\n\\n      .gender-selection,\\n      .race-selection {\\n        grid-template-columns: 1fr;\\n      }\\n    }\\n\\n    /* 添加相应的CSS样式 */\\n    .experience-cost.positive {\\n      color: var(--success-color);\\n      font-weight: bold;\\n    }\\n\\n    /* 在CSS中添加新的样式 */\\n    .starts-grid {\\n      display: grid;\\n      grid-template-columns: repeat(2, 1fr);\\n      gap: 20px;\\n      padding: 20px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 15px;\\n      margin: 20px 0;\\n    }\\n\\n    .start-card {\\n      background: rgba(255, 255, 255, 0.5);\\n      border-radius: 15px;\\n      padding: 20px;\\n      cursor: pointer;\\n      transition: all 0.3s ease;\\n    }\\n\\n    .start-card:hover {\\n      transform: translateY(-5px);\\n      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .start-card.selected {\\n      border: 2px solid var(--primary-color);\\n      background: rgba(76, 175, 80, 0.1);\\n    }\\n\\n    .start-header {\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      margin-bottom: 15px;\\n      padding-bottom: 10px;\\n      border-bottom: 1px solid rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .start-name {\\n      font-size: 1.4em;\\n      font-weight: bold;\\n      color: var(--text-primary);\\n    }\\n\\n    .start-bonus {\\n      display: flex;\\n      flex-wrap: wrap;\\n      gap: 10px;\\n      margin: 10px 0;\\n    }\\n\\n    .start-feature {\\n      font-size: 0.9em;\\n      color: var(--text-tertiary);\\n      padding: 8px 12px;\\n      margin: 5px 0;\\n      background: rgba(255, 255, 255, 0.4);\\n      border-radius: 6px;\\n    }\\n\\n    .start-background {\\n      font-size: 0.95em;\\n      color: var(--text-tertiary);\\n      font-style: italic;\\n      margin-top: 15px;\\n      padding: 10px;\\n      background: rgba(255, 255, 255, 0.3);\\n      border-radius: 6px;\\n    }\\n\\n    /* 在现有的CSS中添加以下样式 */\\n    .yao-type-input {\\n      margin: 15px 0;\\n      padding: 10px;\\n      background: rgba(255, 255, 255, 0.3);\\n      border-radius: 8px;\\n    }\\n\\n    .yao-type-input label {\\n      display: block;\\n      margin-bottom: 8px;\\n      color: var(--text-primary);\\n      font-weight: bold;\\n    }\\n\\n    .yao-type-field {\\n      width: 100%;\\n      padding: 8px 12px;\\n      border: 1px solid rgba(0, 0, 0, 0.1);\\n      border-radius: 4px;\\n      background: rgba(255, 255, 255, 0.8);\\n      font-family: var(--global-font);\\n      font-size: 1em;\\n      color: var(--text-primary);\\n    }\\n\\n    .yao-type-field:focus {\\n      outline: none;\\n      border-color: var(--primary-color);\\n      box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\\n    }\\n\\n    /* 在CSS部分添加以下样式 */\\n    .custom-input {\\n      padding: 15px;\\n      background: rgba(255, 255, 255, 0.2);\\n      border-radius: 8px;\\n      margin-top: 15px;\\n    }\\n\\n    .custom-world-field,\\n    .custom-start-field,\\n    .attribute-input {\\n      margin-bottom: 15px;\\n    }\\n\\n    .custom-input-field {\\n      width: 100%;\\n      padding: 8px;\\n      border: 1px solid rgba(0, 0, 0, 0.1);\\n      border-radius: 4px;\\n      background: rgba(255, 255, 255, 0.8);\\n      margin-top: 5px;\\n    }\\n\\n    textarea.custom-input-field {\\n      min-height: 80px;\\n      resize: vertical;\\n    }\\n\\n    .attribute-adjustments {\\n      margin-top: 20px;\\n      padding: 15px;\\n      background: rgba(255, 255, 255, 0.3);\\n      border-radius: 8px;\\n    }\\n\\n    .attribute-grid {\\n      display: grid;\\n      grid-template-columns: repeat(2, 1fr);\\n      gap: 15px;\\n      margin-top: 10px;\\n    }\\n\\n    .attribute-value-input {\\n      width: 80px;\\n      padding: 5px;\\n      border: 1px solid rgba(0, 0, 0, 0.1);\\n      border-radius: 4px;\\n      text-align: center;\\n    }\\n\\n    @media screen and (max-width: 768px) {\\n      .attribute-grid {\\n        grid-template-columns: 1fr;\\n      }\\n    }\\n\\n    .experience-card.no-hover:hover,\\n    .start-card.no-hover:hover {\\n      transform: none !important;\\n      box-shadow: none !important;\\n    }\\n\\n    .experience-card.selected.no-hover,\\n    .start-card.selected.no-hover {\\n      transform: none !important;\\n      box-shadow: none !important;\\n    }\\n\\n    .start-details {\\n      background: rgba(255, 255, 255, 0.9);\\n      border-radius: 10px;\\n      padding: 20px;\\n      margin-top: 20px;\\n      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\n    }\\n\\n    .start-header {\\n      border-bottom: 2px solid var(--primary-color);\\n      margin-bottom: 15px;\\n      padding-bottom: 10px;\\n    }\\n\\n    .start-name {\\n      color: var(--primary-color);\\n      font-size: 1.5em;\\n      margin: 0;\\n    }\\n\\n    .start-content {\\n      display: grid;\\n      gap: 20px;\\n    }\\n\\n    .start-content h4 {\\n      color: var(--text-secondary);\\n      margin: 0 0 10px 0;\\n      font-size: 1.2em;\\n    }\\n\\n    .start-features ul {\\n      list-style: none;\\n      padding: 0;\\n      margin: 0;\\n    }\\n\\n    .start-features li {\\n      padding: 5px 0;\\n      position: relative;\\n      padding-left: 20px;\\n    }\\n\\n    .start-features li:before {\\n      content: \\\"•\\\";\\n      color: var(--primary-color);\\n      position: absolute;\\n      left: 0;\\n    }\\n\\n    .bonus-grid {\\n      display: grid;\\n      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\\n      gap: 10px;\\n    }\\n\\n    .bonus-item {\\n      padding: 5px 10px;\\n      border-radius: 5px;\\n      text-align: center;\\n    }\\n\\n    .bonus-item.positive {\\n      background: rgba(76, 175, 80, 0.1);\\n      color: var(--success-color);\\n    }\\n\\n    .bonus-item.negative {\\n      background: rgba(244, 67, 54, 0.1);\\n      color: var(--error-color);\\n    }\\n\\n    /* 添加自定义信息显示的样式 */\\n    .custom-info-section {\\n      background: rgba(255, 255, 255, 0.1);\\n      border-radius: 8px;\\n      padding: 15px;\\n      margin-bottom: 20px;\\n    }\\n\\n    .custom-info-section h3 {\\n      color: var(--primary-color);\\n      margin-bottom: 10px;\\n    }\\n\\n    .custom-info-section p {\\n      margin: 5px 0;\\n    }\\n\\n    .custom-info-section ul {\\n      list-style-type: none;\\n      padding-left: 20px;\\n    }\\n\\n    .custom-info-section ul li {\\n      position: relative;\\n      padding: 3px 0;\\n    }\\n\\n    .custom-info-section ul li:before {\\n      content: \\\"•\\\";\\n      color: var(--primary-color);\\n      position: absolute;\\n      left: -15px;\\n    }\\n\\n    /* 添加新的样式 */\\n    .attributes-grid {\\n      display: grid;\\n      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\\n      gap: 10px;\\n      margin-top: 10px;\\n    }\\n\\n    .attribute-item {\\n      display: flex;\\n      justify-content: space-between;\\n      align-items: center;\\n      padding: 5px 10px;\\n      background: rgba(255, 255, 255, 0.05);\\n      border-radius: 4px;\\n    }\\n\\n    .attribute-name {\\n      font-weight: bold;\\n      cursor: help;\\n    }\\n\\n    .attribute-value {\\n      font-family: monospace;\\n    }\\n\\n    .attribute-value.positive {\\n      color: var(--success-color);\\n    }\\n\\n    .attribute-value.negative {\\n      color: var(--error-color);\\n    }\\n\\n    .custom-info-section strong {\\n      color: var(--primary-color);\\n    }\\n  </style>\\n</head>\\n\\n<body>\\n  <div class=\\\"creation-container\\\">\\n    <div class=\\\"creation-header\\\">\\n      <h1>修仙之路</h1>\\n      <p>选择你的命运之途</p>\\n    </div>\\n\\n    <div class=\\\"steps-indicator\\\">\\n      <div class=\\\"step-item active\\\">\\n        <div class=\\\"step-number\\\">1</div>\\n        <div class=\\\"step-text\\\">时代与难度</div>\\n      </div>\\n      <div class=\\\"step-item\\\">\\n        <div class=\\\"step-number\\\">2</div>\\n        <div class=\\\"step-text\\\">属性与经历</div>\\n      </div>\\n      <div class=\\\"step-item\\\">\\n        <div class=\\\"step-number\\\">3</div>\\n        <div class=\\\"step-text\\\">性别与种族</div>\\n      </div>\\n      <div class=\\\"step-item\\\">\\n        <div class=\\\"step-number\\\">4</div>\\n        <div class=\\\"step-text\\\">世界选择</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"creation-content\\\">\\n      <!-- 内容将通过JavaScript动态生成 -->\\n    </div>\\n\\n    <div class=\\\"nav-buttons\\\">\\n      <button class=\\\"nav-btn prev-btn\\\" disabled>返回</button>\\n      <button class=\\\"nav-btn next-btn\\\">下一步</button>\\n    </div>\\n  </div>\\n\\n  <script>\\n    // 游戏数据配置\\n    const CONFIG = {\\n      MAX_ATTR_VALUE: 10,\\n      // 基础属性定义\\n      ATTRIBUTES: {\\n        // 核心属性\\n        heart: { name: '心性', description: '决定修炼速度和心境修为' },\\n        bone: { name: '根骨', description: '影响修炼资质和体魄强度' },\\n        wisdom: { name: '悟性', description: '影响功法领悟和道法参悟' },\\n        luck: { name: '气运', description: '影响机缘获取和危机规避' },\\n        power: { name: '法力', description: '决定法术威力和真元强度' },\\n\\n        // 特殊属性\\n        martialArt: { name: '功法资质', description: '影响功法修炼资格和速度' },\\n        fame: { name: '声望', description: '影响声望和，可以为负数，正数代表正道声望，负数代表魔道声望' },\\n        charm: { name: '魅力', description: '影响人际关系，声望获取' },\\n        lifespan: { name: '寿元', description: '影响生命长度' },\\n\\n        // 技艺属性\\n        forging: { name: '炼器资质', description: '影响法器炼制能力' },\\n        alchemy: { name: '炼丹资质', description: '影响丹药炼制能力' },\\n\\n        // 武学属性\\n        palmArt: { name: '掌法资质', description: '影响掌法修炼速度' },\\n        fingerArt: { name: '指法资质', description: '影响指法修炼速度' },\\n        fistArt: { name: '拳法资质', description: '影响拳法修炼速度' },\\n        swordArt: { name: '剑法资质', description: '影响剑法修炼速度' },\\n        spearArt: { name: '枪法资质', description: '影响枪法修炼速度' },\\n        bladeArt: { name: '刀法资质', description: '影响刀法修炼速度' }\\n      },\\n\\n      ERAS: {\\n        yinyang: {\\n          id: 'yinyang',\\n          name: '阴阳纪',\\n          description: '荒古结束，诞生了第一位证道永恒，超脱此方宇宙的道祖。',\\n          features: [\\n            '道祖传承机会+20%',\\n            '悟道速度+30%',\\n            '大道感悟+10%',\\n            '遭遇上古大能概率+15%'\\n          ],\\n          background: '道祖刚刚证道永恒,诸天万界尚未完全稳定，是寻求大道机缘的最佳时期。'\\n        },\\n        ancient: {\\n          id: 'ancient',\\n          name: '中古',\\n          description: '各个道祖大战频发，争夺成道机缘。危险与机遇并存。',\\n          features: [\\n            '战斗经验获取+40%',\\n            '遭遇危险概率+50%',\\n            '获得大能传承机会+30%',\\n            '道法感悟+20%'\\n          ],\\n          background: '道祖之间的争斗达到顶峰，整个宇宙都在动荡。'\\n        },\\n        vermilion: {\\n          id: 'vermilion',\\n          name: '朱雀纪',\\n          description: '中古大战结束，机缘与危险兼具的时代。',\\n          features: [\\n            '综合修炼速度+20%',\\n            '机缘获取+25%',\\n            '基础资源获取+30%',\\n            '突破难度-10%'\\n          ],\\n          background: '大战结束后的黄金时代，百废待兴，机会处处。'\\n        },\\n        taiji: {\\n          id: 'taiji',\\n          name: '末劫纪',\\n          description: '末法时代，整个宇宙即将毁灭轮回前，灵气复苏，是为最后一次成道之机。',\\n          features: [\\n            '灵气亲和度+40%',\\n            '终末类大道感悟+30%',\\n            '逆天改命机会+20%',\\n            '获得秘境传承几率+25%'\\n          ],\\n          background: '整个宇宙陷入毁灭的倒计时，注定要从太极复归无极，物质回归元气，反而带来了前所未有的机遇。'\\n        },\\n        // 在ERAS对象的最后添加自定义时代选项\\n        customEra: {\\n          id: 'customEra',\\n          name: '自定义时代',\\n          description: '玩家可以自行填写时代内容。',\\n          features: [],\\n          background: ''\\n        }\\n      },\\n      DIFFICULTIES: {\\n        normal: {\\n          id: 'normal',\\n          name: '泯然众人',\\n          points: 30,\\n          description: '普通的修仙者，资质平平，全靠自己打拼。',\\n          features: [\\n            '起始资源较少',\\n            '体验平凡修士的人生'\\n          ]\\n        },\\n        talented: {\\n          id: 'talented',\\n          name: '天之骄子',\\n          points: 60,\\n          description: '天赋异禀，受天道眷顾的修仙者。',\\n          features: [\\n            '起始资源适中',\\n            '请合理分配点数'\\n          ]\\n        },\\n        protagonist: {\\n          id: 'protagonist',\\n          name: '爽文主角',\\n          points: 140,\\n          description: '天命之子，注定要在修仙界掀起波澜。',\\n          features: [\\n            '起始资源丰富',\\n            '大采购，开始！'\\n          ]\\n        }\\n      },\\n\\n      ORIGINS: {\\n        mortalBorn: {\\n          id: 'mortalBorn',\\n          name: '凡人出身',\\n          cost: 0,\\n          description: '普通凡人家庭出身，无权无势，但也无拘无束。',\\n          features: [\\n            '起步艰难，但潜力无限',\\n            '较容易获得机缘眷顾',\\n            '无门派束缚，可自由发展'\\n          ],\\n          bonus: {\\n            luck: 3\\n          }\\n        },\\n        sectDisciple: {\\n          id: 'sectDisciple',\\n          name: '散仙儿女',\\n          cost: 12,\\n          description: '出身于游走世间的散仙家庭，从小接受修炼教导。',\\n          features: [\\n            '基础较为扎实',\\n            '有父母庇护',\\n            '开局有一定起始资源'\\n          ],\\n          bonus: {\\n            wisdom: 3,\\n            power: 2,\\n            martialArt: 2\\n          }\\n        },\\n        royalBlood: {\\n          id: 'royalBlood',\\n          name: '修行世家',\\n          cost: 20,\\n          description: '家族世代修行，拥有凡人难以企及的修行资源',\\n          features: [\\n            '起始资源丰富',\\n            '肩负家族使命',\\n            '基础扎实'\\n          ],\\n          bonus: {\\n            power: 4,\\n            bone: 4,\\n            charm: 4,\\n            fame: 3\\n          }\\n        },\\n        humanSaint: {\\n          id: 'humanSaint',\\n          name: '奇迹圣体',\\n          cost: 35,\\n          description: '亿万分之一的造物奇迹，各方面都达到极高水准。',\\n          features: [\\n            '全方位超凡',\\n            '体质完美',\\n            '潜力无限'\\n          ],\\n          bonus: {\\n            power: 5,\\n            wisdom: 5,\\n            luck: 5,\\n            bone: 5,\\n            heart: 5,\\n            charm: 5,\\n            lifespan: 40\\n          }\\n        },\\n        destinyChild: {\\n          id: 'destinyChild',\\n          name: '天命之子',\\n          cost: 25,\\n          description: '天命所钟，气运加身。',\\n          features: [\\n            '气运非凡',\\n            '魅力超群',\\n            '天命所归'\\n          ],\\n          bonus: {\\n            luck: 8,\\n            charm: 5,\\n            wisdom: 5,\\n            fame: 3\\n          }\\n        },\\n        heroicLegacy: {\\n          id: 'heroicLegacy',\\n          name: '英雄传承',\\n          cost: 20,\\n          description: '灵魂继承了古代英雄的意志。',\\n          bonus: {\\n            bone: 5,\\n            wisdom: 3,\\n            fame: 30\\n          },\\n          features: [\\n            '开场正面声望很高',\\n            '根骨优秀',\\n            '英雄气概'\\n          ],\\n          background: '继承了上古英雄的意志，天生正气凛然。'\\n        },\\n        ancientBloodline: {\\n          id: 'ancientBloodline',\\n          name: '古圣血脉',\\n          cost: 25,\\n          description: '体内流淌着远古强者的血脉。',\\n          features: [\\n            '血脉强大',\\n            '寿元绵长',\\n            '功法亲和'\\n          ],\\n          bonus: {\\n            power: 4,\\n            bone: 4,\\n            lifespan: 20,\\n            martialArt: 2\\n          }\\n        }\\n      },\\n\\n      EXPERIENCES: {\\n        martialArtist: {\\n          id: 'martialArtist',\\n          name: '舞刀弄枪',\\n          cost: 5,\\n          description: '自小习武，对武技有独特的领悟。',\\n          features: [\\n            '武技资质优秀',\\n            '对武学有天然亲和'\\n          ],\\n          bonus: {\\n            martialArt: 3,\\n            bone: 2,\\n            wisdom: -2\\n          }\\n        },\\n        alchemyGenius: {\\n          id: 'alchemyGenius',\\n          name: '丹道天才',\\n          cost: 8,\\n          description: '在丹道方面展现出惊人的天赋。',\\n          features: [\\n            '炼丹天赋绝佳',\\n            '对丹道有独特理解'\\n          ],\\n          bonus: {\\n            alchemy: 5,\\n            wisdom: 2,\\n            luck: 1\\n          }\\n        },\\n        swordManiac: {\\n          id: 'swordManiac',\\n          name: '剑痴',\\n          cost: 8,\\n          description: '一心向剑，剑道天赋惊人。',\\n          features: [\\n            '剑道天赋卓绝',\\n            '对剑法有独特理解'\\n          ],\\n          bonus: {\\n            swordArt: 7,\\n            wisdom: 2,\\n            power: 2\\n          }\\n        },\\n        cursedFate: {\\n          id: 'cursedFate',\\n          name: '诅咒之身',\\n          cost: 0,\\n          description: '背负诅咒，但因此获得特殊能力。',\\n          features: [\\n            '力量强大',\\n            '诅咒缠身',\\n            '寿元受损'\\n          ],\\n          bonus: {\\n            power: 4,\\n            luck: -5,\\n            lifespan: -20,\\n            charm: -3\\n          }\\n        },\\n        martialProdigy: {\\n          id: 'martialProdigy',\\n          name: '战斗天才',\\n          cost: 12,\\n          description: '武道与法术皆有天赋，是难得的武法双修奇才。',\\n          features: [\\n            '武学天赋出众',\\n            '法力浑厚',\\n            '双修潜力'\\n          ],\\n          bonus: {\\n            martialArt: 5,\\n            power: 4,\\n            wisdom: 2\\n          }\\n        },\\n        manyEnemies: {\\n          id: 'manyEnemies',\\n          name: '四面树敌',\\n          cost: 0,\\n          description: '仇家众多，但在不断的生死危机中获得成长。',\\n          features: [\\n            '敌人众多',\\n            '实力增长快',\\n            '机缘不断'\\n          ],\\n          bonus: {\\n            power: 4,\\n            luck: 3,\\n            charm: -4,\\n            fame: -3\\n          }\\n        },\\n        alchemyMaster: {\\n          id: 'alchemyMaster',\\n          name: '丹道宗师',\\n          cost: 15,\\n          description: '炼丹造诣极高，对丹道有着超凡的理解。',\\n          features: [\\n            '丹道天赋绝顶',\\n            '对药理精通',\\n            '财运亨通'\\n          ],\\n          bonus: {\\n            alchemy: 7,\\n            wisdom: 3,\\n            luck: 2,\\n            fame: 2\\n          }\\n        },\\n        hiddenGenius: {\\n          id: 'hiddenGenius',\\n          name: '大隐隐于世',\\n          cost: 10,\\n          description: '天赋绝佳却甘于平凡，低调行事暗中修行。',\\n          features: [\\n            '悟性超群',\\n            '心性稳固',\\n            '难觅踪迹'\\n          ],\\n          bonus: {\\n            wisdom: 5,\\n            heart: 3,\\n            fame: -2,\\n            luck: 2\\n          }\\n        },\\n        destinyBearer: {\\n          id: 'destinyBearer',\\n          name: '命运之子',\\n          cost: 20,\\n          description: '背负着特殊的使命，冥冥中受天道眷顾。',\\n          features: [\\n            '气运非凡',\\n            '天命加身',\\n            '因果缠身'\\n          ],\\n          bonus: {\\n            luck: 6,\\n            power: 3,\\n            wisdom: 2,\\n            heart: 2,\\n            lifespan: -10\\n          }\\n        },\\n        scholarFamily: {\\n          id: 'scholarFamily',\\n          name: '书香门第',\\n          cost: 8,\\n          description: '世代读书人家，培养出极高的悟性。',\\n          features: [\\n            '悟性极高',\\n            '知识渊博'\\n          ],\\n          bonus: {\\n            wisdom: 4,\\n            martialArt: -2,\\n            charm: 2\\n          }\\n        },\\n        heavenlyJealousy: {\\n          id: 'heavenlyJealousy',\\n          name: '天妒英才',\\n          cost: 10,\\n          description: '惊才绝艳，却遭天妒',\\n          features: [\\n            '悟性绝顶',\\n            '寿元受损',\\n            '气运不佳'\\n          ],\\n          bonus: {\\n            wisdom: 9,\\n            lifespan: -10,\\n            luck: -3\\n          }\\n        },\\n        forgemaster: {\\n          id: 'forgemaster',\\n          name: '炼器奇才',\\n          cost: 8,\\n          description: '对炼器一道有着非凡天赋。',\\n          features: [\\n            '炼器天赋出众',\\n            '对法器有独特理解'\\n          ],\\n          bonus: {\\n            forging: 5,\\n            power: 2,\\n            wisdom: 2\\n          }\\n        },\\n        demonicHeart: {\\n          id: 'demonicHeart',\\n          name: '魔性之心',\\n          cost: 5,\\n          description: '天生邪性，不拘一格。',\\n          features: [\\n            '魔道声望提升',\\n            '威慑力强'\\n          ],\\n          bonus: {\\n            fame: -5,\\n            power: 3,\\n            charm: 3\\n          }\\n        },\\n        righteousHeart: {\\n          id: 'righteousHeart',\\n          name: '侠义之心',\\n          cost: 5,\\n          description: '天生正义感强烈，乐于助人。',\\n          features: [\\n            '正道声望提升',\\n            '人缘良好'\\n          ],\\n          bonus: {\\n            fame: 5,\\n            charm: 2\\n          }\\n        },\\n        cursedBlood: {\\n          id: 'cursedBlood',\\n          name: '诅咒之血',\\n          cost: -10, // 负数表示获得点数\\n          description: '体内流淌着被诅咒的血脉，时常会遭受诅咒反噬。',\\n          features: [\\n            '每次突破都有30%概率遭受反噬',\\n            '寿元降低',\\n            '其他修士会本能地感到不适'\\n          ],\\n          bonus: {\\n            lifespan: -10,\\n            charm: -3,\\n            luck: -3,\\n            heart: -2\\n          }\\n        },\\n        karmaDebt: {\\n          id: 'karmaDebt',\\n          name: '业力缠身',\\n          cost: -8,\\n          description: '前世作恶太多，导致今生背负深重业力。',\\n          features: [\\n            '修炼速度降低30%',\\n            '难以获得机缘',\\n            '容易遭遇危险'\\n          ],\\n          bonus: {\\n            luck: -5,\\n            heart: -2,\\n            fame: -5\\n          }\\n        },\\n        brokenMeridians: {\\n          id: 'brokenMeridians',\\n          name: '经脉受损',\\n          cost: -6,\\n          description: '经脉严重受损，修炼事倍功半。',\\n          features: [\\n            '修炼速度降低50%',\\n            '突破更加困难',\\n            '容易走火入魔'\\n          ],\\n          bonus: {\\n            bone: -3,\\n            power: -2,\\n            heart: -1\\n          }\\n        },\\n        soulDefect: {\\n          id: 'soulDefect',\\n          name: '残缺魂魄',\\n          cost: -12,\\n          description: '魂魄不全，修行举步维艰。',\\n          features: [\\n            '无法修炼需要完整魂魄的功法',\\n            '容易被邪祟侵扰',\\n            '神识虚弱'\\n          ],\\n          bonus: {\\n            wisdom: -4,\\n            power: -2,\\n            luck: -2,\\n            heart: -2\\n          }\\n        },\\n        heavenlyEnemy: {\\n          id: 'heavenlyEnemy',\\n          name: '天道之敌',\\n          cost: -15,\\n          description: '不知为何被天道标记为敌，时常遭受天谴。',\\n          features: [\\n            '每隔一段时间必定遭受天谴',\\n            '无法参悟天道法则',\\n            '其他修士会本能地排斥'\\n          ],\\n          bonus: {\\n            luck: -6,\\n            wisdom: -3,\\n            charm: -3,\\n            fame: -8\\n          }\\n        },\\n        demonizedBody: {\\n          id: 'demonizedBody',\\n          name: '魔化之体',\\n          cost: -8,\\n          description: '体内潜藏着难以控制的魔性。',\\n          features: [\\n            '容易陷入魔性爆发',\\n            '难以修炼正统功法',\\n            '正道修士会主动与你为敌'\\n          ],\\n          bonus: {\\n            heart: -4,\\n            fame: -10,\\n            power: 2, // 唯一的好处是力量略有提升\\n            charm: -2\\n          }\\n        },\\n        ancestralSin: {\\n          id: 'ancestralSin',\\n          name: '祖辈罪业',\\n          cost: -10,\\n          description: '承担着祖辈犯下的滔天大罪，备受歧视。',\\n          features: [\\n            '世家大族会主动针对',\\n            '难以加入大型宗门',\\n            '机缘被压制'\\n          ],\\n          bonus: {\\n            luck: -4,\\n            charm: -3,\\n            fame: -6,\\n            heart: -2\\n          }\\n        },\\n        chaosBody: {\\n          id: 'chaosBody',\\n          name: '混沌之体',\\n          cost: -20,\\n          description: '体内混沌之力失控，随时可能爆体而亡。',\\n          features: [\\n            '寿元极度缩短',\\n            '修炼时极易走火入魔',\\n            '体内混沌之力会伤害亲近之人'\\n          ],\\n          bonus: {\\n            lifespan: -15,\\n            power: -3,\\n            heart: -3,\\n            charm: -5,\\n            bone: -3\\n          }\\n        },\\n        fatedDoom: {\\n          id: 'fatedDoom',\\n          name: '命中注定之劫',\\n          cost: -15,\\n          description: '命中注定将面临无法避免的大劫。',\\n          features: [\\n            '容易遭遇致命危机',\\n            '渡劫难度提升100%',\\n          ],\\n          bonus: {\\n            luck: -8,\\n            heart: -2,\\n            wisdom: -2\\n          }\\n        },\\n        soulBond: {\\n          id: 'soulBond',\\n          name: '魂契之苦',\\n          cost: -12,\\n          description: '与一个强大邪物订立了无法解除的魂契。',\\n          features: [\\n            '被迫听从邪物的部分命令',\\n            '正道功法修炼效率降低',\\n            '时常遭受噩梦侵扰'\\n          ],\\n          bonus: {\\n            heart: -4,\\n            wisdom: -2,\\n            fame: -7,\\n            luck: -3\\n          }\\n        },\\n        childhoodTrauma: {\\n          id: 'childhoodTrauma',\\n          name: '童年阴影',\\n          cost: -5,\\n          description: '幼年经历过一些不愉快的事情，导致性格有些阴郁。',\\n          features: [\\n            '与人交往时容易紧张',\\n            '对陌生人保持警惕',\\n            '情绪偶尔会失控'\\n          ],\\n          bonus: {\\n            heart: -2,\\n            charm: -1,\\n            luck: -1\\n          }\\n        },\\n        lostLove: {\\n          id: 'lostLove',\\n          name: '情伤之痛',\\n          cost: -3,\\n          description: '曾经失去过重要的人，内心留下了难以愈合的伤痕。',\\n          features: [\\n            '对感情比较淡漠',\\n            '不轻易相信他人',\\n            '独来独往'\\n          ],\\n          bonus: {\\n            heart: -1,\\n            charm: -2\\n          }\\n        },\\n        poorFamily: {\\n          id: 'poorFamily',\\n          name: '寒门出身',\\n          cost: -2,\\n          description: '出身贫寒，缺乏修炼资源。',\\n          features: [\\n            '起步资源较少',\\n            '人脉关系较弱',\\n            '修炼进度较慢'\\n          ],\\n          bonus: {\\n            luck: -1,\\n            charm: -1\\n          }\\n        },\\n        weakBody: {\\n          id: 'weakBody',\\n          name: '体弱多病',\\n          cost: -3,\\n          description: '天生体质较弱，需要更多时间调养。',\\n          features: [\\n            '修炼体系功法较慢',\\n            '突破时较为痛苦',\\n            '需要定期服用丹药'\\n          ],\\n          bonus: {\\n            bone: -2,\\n            power: -1\\n          }\\n        },\\n        socialAnxiety: {\\n          id: 'socialAnxiety',\\n          name: '社交恐惧',\\n          cost: -3,\\n          description: '不擅长与人交往，容易紧张。',\\n          features: [\\n            '难以加入大型门派',\\n            '不适合参加群体活动',\\n            '独自修炼效率更高'\\n          ],\\n          bonus: {\\n            charm: -2,\\n            wisdom: 1 // 独处多所以悟性略高\\n          }\\n        },\\n        stubbornPersonality: {\\n          id: 'stubbornPersonality',\\n          name: '倔强性格',\\n          cost: -2,\\n          description: '性格固执，不愿意接受他人建议。',\\n          features: [\\n            '难以得到前辈指点',\\n            '不擅长团队合作',\\n            '修炼方向容易走偏'\\n          ],\\n          bonus: {\\n            wisdom: -1,\\n            heart: -1\\n          }\\n        },\\n        badReputation: {\\n          id: 'badReputation',\\n          name: '名声不佳',\\n          cost: -3,\\n          description: '因为一些误会，在修仙界留下了不好的名声。',\\n          features: [\\n            '初次见面印象较差',\\n            '难以获得信任',\\n            '容易遭人排挤'\\n          ],\\n          bonus: {\\n            fame: -3,\\n            charm: -1\\n          }\\n        },\\n        unluckyAura: {\\n          id: 'unluckyAura',\\n          name: '衰运缠身',\\n          cost: -4,\\n          description: '运气不太好，经常错过机缘。',\\n          features: [\\n            '寻找机缘较难',\\n            '容易遇到小麻烦',\\n            '宝物获取概率降低'\\n          ],\\n          bonus: {\\n            luck: -3,\\n            fame: -1\\n          }\\n        },\\n        emotionalInstability: {\\n          id: 'emotionalInstability',\\n          name: '情绪失控',\\n          cost: -3,\\n          description: '情绪容易波动，影响修炼状态。',\\n          features: [\\n            '修炼时容易走火入魔',\\n            '难以保持平静心态',\\n            '容易冲动行事'\\n          ],\\n          bonus: {\\n            heart: -2,\\n            wisdom: -1\\n          }\\n        },\\n        slowLearner: {\\n          id: 'slowLearner',\\n          name: '资质平庸',\\n          cost: -3,\\n          description: '学习能力较差，需要更多时间理解功法。',\\n          features: [\\n            '功法领悟较慢',\\n            '突破瓶颈较难',\\n            '修炼进度缓慢'\\n          ],\\n          bonus: {\\n            wisdom: -2,\\n            bone: -1\\n          }\\n        },\\n        fistMaster: {\\n          id: 'fistMaster',\\n          name: '拳道宗师',\\n          cost: 10,\\n          description: '天生拳法奇佳，对拳法有着超凡的领悟。',\\n          features: [\\n            '拳法资质极高',\\n            '体魄强健',\\n            '战斗直觉敏锐'\\n          ],\\n          bonus: {\\n            fistArt: 6,\\n            bone: 3,\\n            power: 2,\\n            martialArt: 2\\n          }\\n        },\\n        fingerArtist: {\\n          id: 'fingerArtist',\\n          name: '指法大师',\\n          cost: 10,\\n          description: '手指灵活异常，对指法有独特感悟。',\\n          features: [\\n            '指法资质极高',\\n            '手指灵敏度超群',\\n            '适合修炼点穴类功法'\\n          ],\\n          bonus: {\\n            fingerArt: 6,\\n            wisdom: 2,\\n            power: 2,\\n            martialArt: 2\\n          }\\n        },\\n        palmMaster: {\\n          id: 'palmMaster',\\n          name: '掌法奇才',\\n          cost: 10,\\n          description: '掌力浑厚，对掌法有天然亲和。',\\n          features: [\\n            '掌法资质极高',\\n            '内力浑厚',\\n            '易悟掌法真意'\\n          ],\\n          bonus: {\\n            palmArt: 6,\\n            power: 3,\\n            bone: 2,\\n            martialArt: 2\\n          }\\n        },\\n        alchemyProdigy: {\\n          id: 'alchemyProdigy',\\n          name: '丹道神童',\\n          cost: 15,\\n          description: '自幼便能辨识药材，对丹道有着惊人的天赋。',\\n          features: [\\n            '炼丹天赋绝顶',\\n            '对药理有特殊感知',\\n            '能预知丹药品质'\\n          ],\\n          bonus: {\\n            alchemy: 8,\\n            wisdom: 4,\\n            luck: 2,\\n            fame: 3\\n          }\\n        },\\n        poisonMaster: {\\n          id: 'poisonMaster',\\n          name: '毒道大师',\\n          cost: 8,\\n          description: '精通各类毒理，能炼制奇毒。',\\n          features: [\\n            '毒药炼制效果加成',\\n            '免疫大部分毒素',\\n            '名声较差'\\n          ],\\n          bonus: {\\n            alchemy: 4,\\n            wisdom: 2,\\n            fame: -5,\\n            luck: 1\\n          }\\n        },\\n        transmigrator: {\\n          id: 'transmigrator',\\n          name: '穿越者',\\n          cost: 20,\\n          description: '来自现代地球的穿越者，拥有独特的见识和思维方式。由于经历过两个世界，对大道的理解有着独特视角。',\\n          features: [\\n            '具备现代科学思维',\\n            '对修真界常识有着不同的理解角度',\\n            '能够融合现代知识与修真体系',\\n            '具有超强的适应能力',\\n            '容易引起天道注意'\\n          ],\\n          bonus: {\\n            wisdom: 6,        // 现代知识带来的智慧加成\\n            luck: 4,          // 身为主角的幸运加成\\n            heart: 3,         // 两世为人的心性加成\\n            charm: 2,         // 独特气质带来的魅力\\n            fame: -2,         // 格格不入导致的声望略降\\n            lifespan: -10     // 转世带来的寿元损耗\\n          }\\n        },\\n        // 在经历部分添加一个空白选项\\n        customExperience: {\\n          id: 'customExperience',\\n          name: '自定义经历',\\n          cost: 0,\\n          description: '玩家可以自行填写经历内容。',\\n          features: [],\\n          bonus: {}\\n        }\\n      },\\n\\n      WORLDS: {\\n        honghuang: {\\n          id: 'honghuang',\\n          name: '洪荒宇宙',\\n          rank: 'SSS',\\n          tradition: '万事皆虚万事皆允',\\n          inheritance: '三千大道的圆满宇宙',\\n          maxCultivator: '鸿钧道祖(永恒大成)',\\n          description: '三千混沌魔神陨落之地，道祖讲道之所，三清证道之处。洪荒宇宙是诸天万界中最为古老、等级最高的宇宙之一。',\\n          features: [\\n            '先天灵气浓度达到极致，修炼速度+200%',\\n            '可以参悟先天大道，但难度极高',\\n            '随时可能遭遇混沌魔神、先天神魔等强大存在',\\n            '机缘与杀劫并存，动辄灭世量劫',\\n            '三千大道皆可修炼，但每一条路都充满凶险',\\n            '世界意志极其强大，违逆者将遭受天谴'\\n          ],\\n          background: '在混沌初开之时，盘古开天辟地，化身万物。三千混沌魔神在开天之战中陨落，其精血与真灵化作无尽造化。鸿钧道祖立下天地规则，确立三清、西方二圣等各方势力。这里有最完整的修炼体系，但也充满了数不尽的杀劫。',\\n          cultivationPath: '可选择加入阐教、截教、人教等各大圣人道统\\\\n参悟先天大道需要极高的悟性\\\\n建议先寻求基础功法，稳固根基\\\\n切勿轻易招惹先天神魔\\\\n量劫降临时需要选择合适的立场'\\n        },\\n        xiyou: {\\n          id: 'xiyou',\\n          name: '西游宇宙',\\n          rank: 'SSS',\\n          tradition: '佛道双修',\\n          inheritance: '三千大道的圆满宇宙',\\n          maxCultivator: '如来佛祖(造化圆满)',\\n          description: '大唐盛世，取经之路，妖魔横行，佛法昌盛。这是一个充满机缘的世界，但也处处充满磨难与考验。',\\n          features: [\\n            '功德加持，修炼事半功倍',\\n            '妖族修炼难度降低50%',\\n            '佛法修炼速度+100%',\\n            '随时可能遭遇天庭或佛门的劫难考验',\\n            '可以通过降妖除魔获取功德',\\n            '世界意志偏向佛门，但也容纳其他修行体系'\\n          ],\\n          background: '这是西游记的世界，天庭高居九重天，统御万界。佛门势力在西方不断扩张，与道教形成微妙的平衡。妖魔横行人间，但也不乏得道高人。世界充满了机缘，但每一步都是考验。',\\n          cultivationPath: '可选择加入天庭、佛门、散修等不同阵营\\\\n建议通过降妖除魔积累功德\\\\n注意在佛道之间保持平衡\\\\n可以选择投靠各方势力，但需谨慎\\\\n建议先打好根基，再考虑大的机缘'\\n        },\\n        jiuyou: {\\n          id: 'jiuyou',\\n          name: '九幽大世界',\\n          rank: 'SS',\\n          tradition: '道佛兼具',\\n          inheritance: '先天生死大道',\\n          maxCultivator: '生死道祖(先天大道金仙)',\\n          description: '生死轮回之地，道法自然，大道气息浓厚。',\\n          features: [\\n            '道法威力+50%',\\n            '生死大道亲和度+100%',\\n            '获得生死轮回体质',\\n            '拥有九层世界，每层世界有不同的运转法则'\\n          ],\\n          background: '九幽大世界是生死轮回之地，蕴含完整的生死大道。世界等级极高，但环境险恶。',\\n          cultivationPath: '以道法为根基，参悟生死大道，最终或可依附生死道祖，成为九幽的帝君之一。'\\n        },\\n        mandala: {\\n          id: 'mandala',\\n          name: '曼陀罗大世界',\\n          rank: 'SS',\\n          tradition: '佛道同修',\\n          inheritance: '先天涅槃大道',\\n          maxCultivator: '未来庄严佛祖(先天大道金仙)',\\n          description: '佛光普照三千界，众生平等，愿力浩荡。',\\n          features: [\\n            '世界律法要求众生向善，违背者将受到世界意志压制',\\n            '佛门气运鼎盛，修行佛法事半功倍',\\n            '寺庙遍布，香火愿力充沛',\\n            '有菩提妙树庇护，世界灵气充沛且纯净'\\n          ],\\n          background: '未来庄严佛祖道场所在，佛法昌盛，众生向善。整个世界都在佛法的影响下，形成了独特的修行环境。',\\n          cultivationPath: '以佛法为根基，参悟涅槃大道，可拜入各大佛门宗派，追求解脱。'\\n        },\\n        xuanxiao: {\\n          id: 'xuanxiao',\\n          name: '玄霄大世界',\\n          rank: 'S',\\n          tradition: '道门为主，兼容百家',\\n          inheritance: '先天宇之大道',\\n          maxCultivator: '玄霄道君(半步金仙)',\\n          description: '空间变幻莫测，世界构造独特。',\\n          features: [\\n            '世界各处都有空间裂缝，穿梭空间较为容易',\\n            '三霄宫为世界主宰，统领诸多道统',\\n            '修行者需注重空间法则感悟',\\n            '世界构造复杂，贸易发达，各个城市、宗门均设有通往诸天万界的传送阵'\\n          ],\\n          background: '三霄宫道统所在，以空间法则闻名。世界中遍布空间裂缝，形成独特的修行环境。',\\n          cultivationPath: '可拜入三霄宫或其他道统，以空间法则为基，追求大道。'\\n        },\\n        zizai: {\\n          id: 'zizai',\\n          name: '自在大世界',\\n          rank: 'S',\\n          tradition: '诸道统皆有传承，佛、魔、道、武、神道错综复杂',\\n          inheritance: '后天化身大道',\\n          maxCultivator: '自在佛祖(后天大道金仙)',\\n          description: '混沌、混乱的大世界，每个道统都十分擅长改换人格，控制他人，或是伪造身份。',\\n          features: [\\n            '包含多个世界，既有类似于现代地球的科技世界，也有佛道昌盛和道法昌盛的世界',\\n            '重视在诸多外相中明心见性，各家法门皆可伪造人格，制造分身等，因此更难明晰真如',\\n            '各家功法易于传播和修习',\\n            '化身之法源远流长，传承完整'\\n          ],\\n          background: '自在佛祖道场所在，是一方旺盛发展的混沌之地。此界众生勾心斗角，一人千面。',\\n          cultivationPath: '可拜入诸多宗派，以斗争为主，参悟化身之道。'\\n        },\\n        shenhuang: {\\n          id: 'shenhuang',\\n          name: '神皇大世界',\\n          rank: 'A',\\n          tradition: '神道传承',\\n          inheritance: '后天奴役之道',\\n          maxCultivator: '神皇(半步金仙)',\\n          description: '神庭林立，香火鼎盛，神道昌盛。',\\n          features: [\\n            '世界以神庭为尊，凡人供奉神灵',\\n            '重视香火愿力，神道气运浓厚',\\n            '各方神庭割据，互相争夺信徒',\\n            '神道功法完整，传承久远'\\n          ],\\n          background: '这是一个神道昌盛的世界，神庭林立，香火不断。神灵与凡人形成独特的共生关系。',\\n          cultivationPath: '可拜入神庭或自立神位，通过收集香火愿力提升实力。'\\n        },\\n        qingyun: {\\n          id: 'qingyun',\\n          name: '独胜大世界',\\n          rank: 'A',\\n          tradition: '魔道独尊',\\n          inheritance: '后天掠夺大道',\\n          maxCultivator: '孔方魔君(半步金仙)',\\n          description: '魔气冲霄，强者为尊，弱肉强食。',\\n          features: [\\n            '不讲道理，只讲实力',\\n            '善良会受到无情的欺诈和挤压',\\n            '各大魔道宗门割据一方',\\n            '资源争夺激烈，机缘与危机并存'\\n          ],\\n          background: '魔道圣地，是孔方魔君的道场所在。世界规则崇尚强者，弱者难以生存。',\\n          cultivationPath: '可加入魔道宗门，或独自修行，追求力量至上。'\\n        },\\n        wuxia: {\\n          id: 'wuxia',\\n          name: '武略大世界',\\n          rank: 'B',\\n          tradition: '武道传承',\\n          inheritance: '后天锋锐大道',\\n          maxCultivator: '苍行(天仙，约等于道门二劫天君)',\\n          description: '武道昌盛，英雄辈出，武林纷争不断。',\\n          features: [\\n            '世界以武为尊，重视实战',\\n            '各大武林门派林立，各有绝学',\\n            '讲究武德，以武会友',\\n            '机缘多在险境，历练艰难'\\n          ],\\n          background: '这是一个以武为尊的世界，武林门派林立，武道传承完整。江湖纷争不断，但也孕育了无数英雄豪杰。',\\n          cultivationPath: '可拜入武林门派或自行习武，通过实战提升，追求武道极致。'\\n        },\\n        nongxiang: {\\n          id: 'nongxiang',\\n          name: '谷丰大世界',\\n          rank: 'C',\\n          tradition: '农家传承',\\n          inheritance: '后天枯荣大道',\\n          maxCultivator: '许桑之(神农，约等于道门二劫阳神真人)',\\n          description: '五谷丰登，草木繁盛，天地灵气充沛。',\\n          features: [\\n            '世界以农为本，重视生机培育',\\n            '灵田遍布，适合种植灵药',\\n            '农家传承完整，圣地立',\\n            '崇尚和平，排斥征伐'\\n          ],\\n          background: '这是一个以农为本的世界，大地肥沃，灵气充沛。农家传承源远流长，形成了独特的修行体系。但由于二劫阳神已经接触到物质变换之道，农家已无前路，因此已经几十万年无人突破阳神境界。',\\n          cultivationPath: '可拜入农家圣地，通过培育灵植、感悟生机来提升修为。'\\n        },\\n        rujia: {\\n          id: 'rujia',\\n          name: '礼乐大世界',\\n          rank: 'B',\\n          tradition: '儒道传承',\\n          inheritance: '后天礼乐大道',\\n          maxCultivator: '孔明德(当代儒圣，约等于道门一劫天君)',\\n          description: '礼乐昌盛，人文鼎盛，天人合一。圣人之道代代相传，以礼化人。',\\n          features: [\\n            '以礼乐教化为本，重视人文修养',\\n            '天人感应显著，圣人意志能影响天象',\\n            '五经六艺皆可成道，书院遍布天下',\\n            '以德服人，重视教化而非征伐'\\n          ],\\n          background: '这是一个儒家理想的大同世界，以礼乐教化为根本。通过对五经六艺的参悟，可以达到天人合一的境界。历代圣人都在追求\\\"内圣外王\\\"的至高境界。',\\n          cultivationPath: '拜入各大书院，通过研习经典、修身性来提升修为。'\\n        },\\n        fajia: {\\n          id: 'fajia',\\n          name: '法行大世界',\\n          rank: 'C',\\n          tradition: '法家铁律传承',\\n          inheritance: '后天刑罚大道',\\n          maxCultivator: '刑不吝(法祖，约等于道门三劫阳神真人)',\\n          description: '法令森严，赏罚分明。天地万物皆有定法，违法者受天谴。',\\n          features: [\\n            '以法为教，奉行赏罚分明',\\n            '天地规则显化为法则之力',\\n            '重法制，轻仁义，以法驭下',\\n            '崇尚实用，排斥虚文'\\n          ],\\n          background: '这是一个以法为尊的世界，天地间存在着森严的法则。修行者通过参悟法则之力来提升修为，但过于严苛的法则也限制了世界的发展。',\\n          cultivationPath: '可拜入法家宗门，通过参悟法则、执行律法来提升修为。'\\n        },\\n        xianjie: {\\n          id: 'xianjie',\\n          name: '白鹿大世界',\\n          rank: 'D',\\n          tradition: '杂糅百家',\\n          inheritance: '没有明确道统',\\n          maxCultivator: '云中子(元神真人，约等于道门元神真人的极度劣化版)',\\n          description: '此界修士追求长生不老，但修行体系残缺，导致修士性格深陷功法影响，且已无前路。',\\n          features: [\\n            '修行体系杂乱，缺乏系统性',\\n            '佛、道、神、武皆有，但功法设计有缺陷，与正宗道统相比差距很大',\\n            '修士普遍寿元不长，需要不断寻找延寿之法',\\n            '资源争夺激烈，门派林立'\\n          ],\\n          background: '这是一个缺乏完整传承的世界，也是绝大多数大世界的常态。由于修行体系的不完整，修士们虽然能够获得强大的力量，但功法缺陷极大，且前路已断。最高法门均为以外道方法成就元神,要数万年至数十万年才会有天劫,然而外道元神无法再进一步，成就天人。',\\n          cultivationPath: '可拜入各派学习，但需要自己摸索真正的长生之道。'\\n        },\\n        modernEarth: {\\n          id: 'modernEarth',\\n          name: '灵绝大世界·道绝天·现实地球',\\n          rank: 'D',\\n          tradition: '百家争鸣',\\n          inheritance: '科技与修真共存',\\n          maxCultivator: '龙虎山老天师（壮魂期修士）',\\n          description: '灵气刚刚复苏的现代地球，科技与修真的碰撞才刚刚开始。世界屏障异常坚固，千年内不会被外部势力攻破，是一个适合稳扎稳打的修行世界。',\\n          features: [\\n            '灵气浓度极低但正在稳步提升',\\n            '科技力量与修真力量共存',\\n            '世界屏障异常坚固',\\n            '适合长期发展',\\n            '没有顶尖强者的压制'\\n          ],\\n          background: '二十一世纪初期，地球灵气开始复苏，一些隐世修士纷纷出山，与现代科技文明发生碰撞。然而即使是最强者，也不过是修道刚入门的境界，因此几乎相当于全人类都在同一起跑线上。各国政府开始关注超自然现象，修真与科技的融合时代即将来临。',\\n          cultivationPath: '可以选择传统修真之路，但需要更多时间积累\\\\n 可以尝试科技辅助修行的新路子，但是上限较低\\\\n适合稳健发展，不用担心被高手碾压.'\\n        },\\n        huanxi: {\\n          id: 'huanxi',\\n          name: '欢喜大世界',\\n          rank: 'A',\\n          tradition: '佛魔道武并存',\\n          inheritance: '后天情欲大道',\\n          maxCultivator: '欢喜大自在佛（半步金仙）',\\n          description: '一个充满争议的大世界，这里的修士可以同时修炼佛法、魔功、道法和武学，但核心都是参悟情欲之道。道门有合欢宗，佛门有欢喜密教，武修也有快活门，世界意志偏向包容。',\\n          features: [\\n            '四道同修皆可大成',\\n            '情欲之力浓郁',\\n            '世界意志极度包容',\\n            '机缘与劫难并存',\\n          ],\\n          background: '欢喜大自在佛乃是佛门中的正道，但修持此法门极其容易堕入魔道，因此被佛门视为异端。欢喜大自在佛便是沿此道修行，虽未能证得金仙，却也达到了半步金仙的境界，成为此界主宰。此界修士多以情入道，以欲证真，虽备受争议，却自成一体。',\\n          cultivationPath: '可选择佛、魔、道、武任意体系修行\\\\n 需要正视并参悟情欲之力\\\\n 不可刻意压制七情六欲\\\\n 最适合随心而行之人'\\n        },\\n        mojing: {\\n          id: 'mojing',\\n          name: '枢墨大世界',\\n          rank: 'C',\\n          tradition: '墨家机关道统',\\n          inheritance: '后天机关大道',\\n          maxCultivator: '墨如霜(当世巨子，约等于道门三劫阳神真人)',\\n          description: '机关城林立，处处皆是造物奇迹。',\\n          features: [\\n            '世界以机关造物为尊，以庞大和精巧为美，拥有多个巨型机关城市、星舰',\\n            '崇尚眼见为实的科学，拒绝玄之又玄的形而上学',\\n            '到处都是科学研究的学习机构，稷下学宫为最高统治机关',\\n            '公输家被墨家压下一头，但双方各有所长'\\n          ],\\n          background: '墨家与公输家的天下，以机关造物为根本。整个大世界在机关道统的影响下运转。',\\n          cultivationPath: '可拜入墨家或公输家，研习机关之道，追求造物之极致。'\\n        },\\n        // 在世界部分添加一个空白选项\\n        customWorld: {\\n          id: 'customWorld',\\n          name: '自定义世界',\\n          rank: '',\\n          tradition: '',\\n          inheritance: '',\\n          maxCultivator: '',\\n          description: '玩家可以自行填写世界内容。',\\n          features: [],\\n          background: '',\\n          cultivationPath: ''\\n        },\\n        tianting: {\\n          id: 'tianting',\\n          name: '封神天庭',\\n          rank: 'SSS',\\n          tradition: '道门正统，神道香火',\\n          inheritance: '天庭仙官体系',\\n          maxCultivator: '玉皇大帝(混元大罗金仙)',\\n          description: '三界六道，神仙显圣，人神共存的世界。道士修炼成仙后可入天庭为官，享受香火供奉。',\\n          features: [\\n            '修炼速度+100%（天庭气运加持）',\\n            '神通威力+80%（天庭法则加持）',\\n            '香火愿力可转化修为',\\n            '有机会成为天庭神职仙官',\\n            '可以参与天庭政务，获得功德',\\n            '需要遵守天条，违反将受到天谴',\\n            '可以收集信仰之力增强实力'\\n          ],\\n          background: '这是一个神仙显圣的世界，有着完整的天庭体系。修士可以通过修道、立功等方式获得封神机会。天庭中有众多知名神仙，如二郎神杨戬、哪吒三太子、天蓬元帅等。修士也可以通过香火愿力成就神位，如关羽成为关圣帝君、岳飞成为忠武王。',\\n          cultivationPath: '建议先打好道法基础，积累功德，寻求天庭中的机缘。可以选择加入各大仙门，或是独自修行。切记要遵守天条，不可违逆天道。'\\n        },\\n\\n        cyberpunk: {\\n          id: 'cyberpunk',\\n          name: '赛博修真',\\n          rank: 'S',\\n          tradition: '科技修真，数字大道',\\n          inheritance: '数字化修真体系',\\n          maxCultivator: '数字道祖(数据永生)',\\n          description: '2077年，科技与修真结合的未来世界。修士通过数字化手段提升境界，追求数据永生。',\\n          features: [\\n            '可以通过数字化提升修为',\\n            '神通可以与科技结合',\\n            '有机会进入数字空间修炼',\\n            '可以利用网络获取修炼资源',\\n            '需要防范数字污染和病毒入侵',\\n            '可以开发数字法宝和程序神通'\\n          ],\\n          background: '在科技高度发达的2077年，人类发现了将修真与数字技术结合的方法。修士可以通过植入芯片、数字化意识等方式提升境界。这个世界充满了高科技与修真相结合的奇迹，但也面临着数字污染、意识病毒等新的威胁。',\\n          cultivationPath: '需要同时掌握修真术法和数字技术，可以选择加入各大科技公司或黑客组织。注意防范数字污染，保持意识纯净。'\\n        },\\n\\n        fanren: {\\n          id: 'fanren',\\n          name: '凡人世界',\\n          rank: 'SSS',\\n          tradition: '灵根资质，功法典籍',\\n          inheritance: '掌天瓶传承、大衍神君传承等',\\n          maxCultivator: '韩立(时间法则道祖)',\\n          description: '这是一个浩瀚无垠、波澜壮阔的修仙世界。凡人、妖兽、魔族并存，修仙者追求长生大道，历经无数劫难，飞升仙界。',\\n          features: [\\n            '修炼速度+20% (因有灵根之说，比一般世界略快)',\\n            '功法威能+30% (秘术、神通繁多，威力强大)',\\n            '女修士样貌+60% (修仙界女修注重容颜，功法多有驻颜之效)',\\n            '男修士样貌+40% (修炼有成者，气质脱俗)',\\n            '历史悠久+100% (人界、灵界、魔界历史悠久，上古遗迹众多)',\\n            '大道领悟+15% (高阶修士可参悟法则之力)',\\n            '灵气浓度+50% (灵界、灵眼之地灵气充沛)',\\n            '种族多样性+80% (人族、妖族、魔族、异族等)',\\n            '世界板块巨大+100% (人界、灵界、魔界，小灵天等界面广阔无垠)',\\n            '宝物资源丰富+80% (天材地宝、灵丹妙药、法宝灵宝种类繁多)',\\n            '危险程度+100% (杀人夺宝、妖兽袭击、天劫考验、界面战争等)',\\n            '因果报应+60% (杀戮过多，容易滋生心魔)'\\n          ],\\n          background: '凡人修仙传世界是一个等级森严、资源争夺激烈的修仙世界。世界分为多个界面，包括人界、灵界、魔界、真仙界等。每个界面又包含无数大陆、岛屿和秘境。修士通过吸收天地灵气，经过炼气、筑基、结丹、元婴等阶段修炼，追求长生。',\\n          cultivationPath: '首先要检测灵根资质，选择合适的功法。稳扎稳打，不可急功近利。可以选择加入宗门获取资源，也可以独自寻找机缘。注意积累丹药、法宝等资源，为渡劫做准备。'\\n        },\\n\\n        yuuki: {\\n          id: 'yuuki',\\n          name: '结城友奈世界',\\n          rank: 'SS',\\n          tradition: '勇者系统、防人体系',\\n          inheritance: '神树之力',\\n          maxCultivator: '神树化身(天神境界)',\\n          description: '这是一个被天神侵蚀的世界，人类依靠神树的力量选择勇者对抗天敌。勇者们需要付出巨大的代价来保护世界。',\\n          features: [\\n            '可以被选为勇者，获得神树之力',\\n            '可以使用满开系统，但会付出散华的代价',\\n            '可以成为防人，使用特殊药物获得力量',\\n            '需要警惕神婚和奉火祭的危险',\\n            '可以开发御魂系统，与前代勇者共鸣',\\n            '世界观独特，充满人性的考验'\\n          ],\\n          background: '在神世纪300年，人类被迫依靠神树的力量对抗天敌Vertex。大赦组织选拔勇者，让她们使用神树之力战斗。但这种力量需要付出巨大代价，每次使用满开都会失去身体机能。同时，大赦还秘密进行着奉火祭和神婚等可怕仪式。',\\n          cultivationPath: '可以选择成为勇者，获得强大的力量但需要承担散华的风险；也可以选择成为防人，虽然力量较弱但更加稳定；或者成为巫女，为勇者提供支援。无论选择哪条路，都要警惕大赦的阴谋，寻找真相。'\\n        },\\n        jianlai: {\\n          id: 'jianlai',\\n          name: '剑来世界',\\n          rank: 'SSS',\\n          tradition: '剑道、三教、妖修',\\n          inheritance: '剑气长城传承、三教道统、妖族血脉',\\n          maxCultivator: '天庭共主(十六境)',\\n          description: '一个充满争议与纷争的大世界。万年前人族推翻神界统治，但胜利后又因理念不同分裂。如今分为青冥、莲花、浩然、蛮荒四大天下。就在不久前，蛮荒天下大举入侵浩然天下，剑气长城拼死顽抗，拖住了妖族进攻的步伐，而浩然天下也最终付出了惨重的代价获得了胜利。如今剑气长城已经不存，妖族伤筋动骨，各方势力暗流涌动。',\\n          features: [\\n            '三教修行效率+80%（道统完整）',\\n            '悟性要求极高（需要领悟\\\"一\\\"的真谛）',\\n            '政治局势复杂（四大天下各怀心思）',\\n            '随时可能爆发大战（各方势力蠢蠢欲动）',\\n            '机缘与杀劫并存（天庭遗物散落人间）',\\n            '可以选择多种修行体系（炼气士，纯粹武夫）',\\n            '世界等级极高（有十六境强者存在）',\\n            '因果关系复杂（万年恩怨纠缠不清）',\\n            '道统传承完整（三教体系完备）',\\n          ],\\n          background: `这是一个经历过三次大战的世界。第一次是人族联合妖族推翻神界统治，第二次是因理念分歧而爆发的内战，第三次是不久前刚刚爆发的蛮荒天下大举入侵浩然天下的大战，以浩然天下惨胜告终。如今世界分为四大天下：\\n\\n            道教的青冥天下：道统最为完整，实力最强，抗击化外天魔。\\n            佛教的莲花天下：普度众生，镇压地狱。\\n            儒家的浩然天下：重视修身养性。\\n            妖族的蛮荒天下：被驱逐的妖族聚集地，元气大伤。\\n            天庭破碎后，其遗物化作各种洞天福地、仙器灵宝散落人间。三教创立后，以各自的价值观教化天下，维持表面和平。\\n\\n            然而暗地里，各方势力都在谋划自己的后手：\\n            - 道祖首徒欲融合三教，追求\\\"一\\\"的境界\\n            - 白泽心灰意冷，隐于人间\\n            - 周密借助妖族入侵，重开飞升台，如今和火神阮秀分庭抗礼。\\n\\n            这是一个充满机遇与危机的世界，每个选择都可能影响未来的走向。`,\\n          cultivationPath: `修行建议：\\n\\n            1. 选择修行体系：\\n            - 剑修：最为艰难，需要极强的毅力与天赋\\n            - 三教：相对稳妥，但需谨慎选择阵营\\n            - 妖修：潜力巨大，但面临诸多限制\\n\\n            2. 处世之道：\\n            - 保持警惕：各方势力暗流涌动\\n            - 明辨是非：不要轻易卷入派系斗争\\n            - 把握机缘：寻找天庭遗物，提升实力\\n\\n            3. 修行要点：\\n            - 领悟\\\"一\\\"：终极目标是达到天庭共主的境界\\n            - 修心重要：不要被各方势力蛊惑\\n            - 结交同道：在动荡时局中寻找可靠盟友\\n\\n            4. 特别提醒：\\n            - 剑修需防范叛逃诱惑\\n            - 三教弟子要注意派系纷争\\n            - 妖修要提防被利用\\n            - 独行侠要避免卷入大势\\n\\n            这是一个需要智慧与实力并重的世界，既要有强大的修为，也要有通达的心智。`\\n        }\\n      },\\n\\n      GENDERS: {\\n        male: {\\n          id: 'male',\\n          name: '男性',\\n          description: '阳刚之气充盈，适合修炼阳属性功法',\\n          features: [\\n            '阳属性功法修炼速度+10%',\\n            '体魄强度略高',\\n            '更容易获得男性修士的认可'\\n          ]\\n        },\\n        female: {\\n          id: 'female',\\n          name: '女性',\\n          description: '阴柔之气充盈，适合修炼阴属性功法',\\n          features: [\\n            '阴属性功法修炼速度+10%',\\n            '魅力略高',\\n            '更容易获得女性修士的认可'\\n          ]\\n        },\\n        futa: {\\n          id: 'futa',\\n          name: '扶她',\\n          description: '阴阳调和，适合修炼阴阳双修功法',\\n          features: [\\n            '阴阳双修功法修炼速度+5%',\\n            '特殊体质带来优势',\\n            '较难被常人理解'\\n          ]\\n        },\\n        femboy: {\\n          id: 'femboy',\\n          name: '男生女相',\\n          description: '外表阴柔，内蕴阳刚，适合修炼变化之道',\\n          features: [\\n            '变化类功法修炼速度+10%',\\n            '魅力略高',\\n            '容易被误解'\\n          ]\\n        }\\n      },\\n\\n      RACES: {\\n        human: {\\n          id: 'human',\\n          name: '人族',\\n          description: '万族之长，适应性最强，同时也是天生最适合修行各类功法的种族',\\n          features: [\\n            '所有属性均衡',\\n            '学习能力+10%',\\n            '没有明显短板'\\n          ],\\n          bonus: {\\n            wisdom: 1,\\n            luck: 1,\\n            bone: 1,\\n            power: 1,\\n            heart: 1,\\n            charm: 1\\n          }\\n        },\\n        dragon: {\\n          id: 'dragon',\\n          name: '真龙血脉',\\n          description: '体内流淌着真龙血脉，天生强大',\\n          features: [\\n            '力量属性极高，但是本性贪婪傲慢，心性较差',\\n            '寿命漫长，但是修道进度十分缓慢',\\n            '天生威严，容易获得他人尊重'\\n          ],\\n          bonus: {\\n            power: 10,\\n            wisdom: -5,\\n            lifespan: 1000,\\n            charm: 2,\\n            heart: -7\\n          }\\n        },\\n        phoenix: {\\n          id: 'phoenix',\\n          name: '凤凰血脉',\\n          description: '体内流淌着凤凰血脉，天生强大',\\n          features: [\\n            '五行之道尤其是火行亲合度极高',\\n            '寿命漫长，但是修道进度十分缓慢',\\n            '天生高贵，容易获得他人尊重'\\n          ],\\n          bonus: {\\n            wisdom: -5,\\n            lifespan: 1000,\\n            charm: 2,\\n            luck: 2,\\n            power: 2,\\n            heart: -1\\n          }\\n        },\\n        demon: {\\n          id: 'demon',\\n          name: '邪魔',\\n          description: '天生邪异，往往是在九幽、血海等阴暗污秽之地诞生',\\n          features: [\\n            '力量属性极高',\\n            '心性较差',\\n            '容易陷入暴走'\\n          ],\\n          bonus: {\\n            power: 4,\\n            bone: 1,\\n            heart: -2,\\n            lifespan: 100,\\n            fame: -10\\n          }\\n        },\\n        yaoguai: {\\n          id: 'yaoguai',\\n          name: '妖怪',\\n          description: '万物有灵，妖怪是天地间除了人族之外的生灵，获得灵智后的统称',\\n          features: [\\n            '悟性极高',\\n            '寿命较长',\\n            '各方面属性都较为均衡'\\n          ],\\n          bonus: {\\n            wisdom: 2,\\n            lifespan: 50,\\n            power: -1,\\n            bone: 1,\\n            heart: -1,\\n            charm: 1\\n          }\\n        },\\n        celestial: {\\n          id: 'celestial',\\n          name: '古人族',\\n          description: '古人族。第一位证道永恒的道祖正是人族，确立了人族乃万界之尊。天生亲近天道，悟性极高',\\n          features: [\\n            '悟性极高',\\n            '受天妒，寿元较短',\\n            '各方面属性都较为优秀'\\n          ],\\n          bonus: {\\n            wisdom: 4,\\n            lifespan: -25,\\n            power: 2,\\n            bone: 2,\\n            heart: 2,\\n            charm: 2,\\n            luck: -2\\n          }\\n        },\\n        ghost: {\\n          id: 'ghost',\\n          name: '鬼魂',\\n          description: '介于虚实之间，天生适合修习神道',\\n          features: [\\n            '天生拥有隐藏能力',\\n            '寿元较短，突破元神境界前，依赖香火愿力来维持存在',\\n            '对于现实的影响较弱，修习五行、造物类功法效果较差'\\n          ],\\n          bonus: {\\n            luck: 3,\\n            wisdom: 3,\\n            bone: -2,\\n            lifespan: -25,\\n            heart: 2,\\n          }\\n        },\\n        // 在RACES对象的最后添加自定义种族选项\\n        customRace: {\\n          id: 'customRace',\\n          name: '自定义种族',\\n          description: '玩家可以自行填写种族内容。',\\n          features: [],\\n          bonus: {}\\n        }\\n      },\\n\\n      STARTS: {\\n        ancestralBlessing: {\\n          id: 'ancestralBlessing',\\n          name: '祖宗显灵',\\n          description: '无意中在老宅里找到了一本«天星修真全册»，这本书除了你以外的人都看不见书上的字。',\\n          features: [\\n            '获得«天星修真全册»',\\n            '书中记载了关于修炼的一切',\\n            '只有你能看到书上的内容',\\n            '有挂！'\\n          ],\\n          background: '你打开翻了几页，发现似乎是一本类似于山海经的图书，讲述的是一些修仙界的功法，丹方以及炼器图册，直到有一天你发现除了你以外的都看不见书上的字，你知道你的人生开始变得不同了。',\\n          bonus: {\\n            heart: -3,\\n            bone: 0,\\n            wisdom: 5,\\n            luck: 5,\\n            power: 0,\\n            charm: 0\\n          }\\n        },\\n        sectLeaderDescendant: {\\n          id: 'sectLeaderDescendant',\\n          name: '宗主后代',\\n          description: '你是一个大型修仙宗门的宗主之子，从小便享受着优渥的修炼资源。',\\n          features: [\\n            '出生便有上等灵根',\\n            '拥有宗门庇护',\\n            '可以获得顶级功法',\\n            '有大量修炼资源'\\n          ],\\n          background: '身为宗主之子，你从小便接受着最好的培养。宗门上下对你期望甚高，但同时也带来了不小的压力。你需要在宗门政治和修炼之间找到平衡。',\\n          bonus: {\\n            heart: 2,\\n            bone: 3,\\n            wisdom: 2,\\n            luck: 1,\\n            power: 3,\\n            charm: 2,\\n            lifespan: 20\\n          }\\n        },\\n        huangliangDream: {\\n          id: 'huangliangDream',\\n          name: '黄粱多梦',\\n          description: '仙道何其难！在这个被瘟疫改变的修仙界中，你拥有了一件特殊的异宝，能够将真实的人生转为一场黄粱梦，重回穿越之时！',\\n          features: [\\n            '拥有重生异宝',\\n            '保留前世记忆',\\n            '每次重生都能获得新的领悟',\\n            '在绝望中寻找希望',\\n            '百世轮回只为求道'\\n          ],\\n          background: '在这个仙凡永隔的世界，你虽有雄心万丈，却只能于凡尘中打滚。但你拥有了一件特殊的异宝，能够在临终之时将真实的人生转为黄粱一梦，重回穿越之时。第二世权倾天下却未见仙踪，第三世殚精竭虑却抵不过仙人一剑...你，一介凡人，百世不悔，但求长生！',\\n          bonus: {\\n            heart: 5,\\n            bone: 1,\\n            wisdom: 4,\\n            luck: -2,\\n            power: 2,\\n            charm: 1,\\n            lifespan: -10\\n          }\\n        },\\n        mysteriousInheritance: {\\n          id: 'mysteriousInheritance',\\n          name: '神秘传承',\\n          description: '在一次意外中，你获得了一枚来历不明的玉简，里面似乎封印着一位远古大能的传承。',\\n          features: [\\n            '获得神秘玉简一枚',\\n            '玉简中蕴含远古大能的传承',\\n            '解封需要特定条件',\\n            '可能会引来他人觊觎'\\n          ],\\n          background: '那是一个平常的夜晚，一颗流星划过天际，坠落在你家的后院。等你跑去查看时，只在坑中发现了一枚温润如玉的玉简，上面刻着神秘的符文，似乎在等待着什么人来解开它的秘密。',\\n          bonus: {\\n            heart: 2,\\n            bone: 0,\\n            wisdom: 3,\\n            luck: 3,\\n            power: -2,\\n            charm: 1\\n          }\\n        },\\n        reincarnatedImmortal: {\\n          id: 'reincarnatedImmortal',\\n          name: '仙人转世',\\n          description: '你是一位陨落的仙人转世，虽然失去了修为，但保留了一些本能和记忆碎片。',\\n          features: [\\n            '拥有前世的零星记忆',\\n            '对修炼有着本能的亲和',\\n            '容易引起大能注意',\\n            '可能会遇到前世的因果'\\n          ],\\n          background: '你从小就与众不同，经常能在梦中看到一些奇异的景象：仙宫琼楼、丹炉药鼎、飞剑遁光...直到某一天，你在修炼时突然觉醒了前世的一些记忆，原来你曾是一位陨落的仙人。',\\n          bonus: {\\n            heart: 3,\\n            bone: 2,\\n            wisdom: 4,\\n            luck: -2,\\n            power: 0,\\n            charm: 2,\\n            lifespan: 20\\n          }\\n        },\\n        villageDestroyed: {\\n          id: 'villageDestroyed',\\n          name: '魔灾余孤',\\n          description: '村庄被魔道修士屠戮一空，你是唯一的幸存者。',\\n          features: [\\n            '获得对魔道的刻骨仇恨',\\n            '起始获得一件保命法器（村中长辈留下）',\\n            '对正道功法亲和度+20%',\\n            '起始声望+5'\\n          ],\\n          background: '不久之前，血色的月光下，魔修肆意屠戮。当你从昏迷中醒来，入目皆是焦土与白骨，你发誓要为村中亲朋好友报仇。',\\n          bonus: {\\n            heart: 2,\\n            power: 1,\\n            fame: 5\\n          }\\n        },\\n        sectRecruitment: {\\n          id: 'sectRecruitment',\\n          name: '赴考少年',\\n          description: '正准备参加该洲陆顶级宗门的收徒大典。',\\n          features: [\\n            '获得参加顶级宗门考核的机会',\\n            '起始声望+2'\\n          ],\\n          background: '百年一次的招收弟子大会即将开始，这是你改变命运的最好机会。',\\n          bonus: {\\n            wisdom: 1,\\n            luck: 1,\\n            fame: 2\\n          }\\n        },\\n        outerDisciple: {\\n          id: 'outerDisciple',\\n          name: '外门弟子',\\n          description: '已是二流宗门的外门弟子，但默默无闻。',\\n          features: [\\n            '起始就有修仙者身份',\\n            '掌握基础功法',\\n            '有稳定的修炼资源获取渠道',\\n            '起始声望+3'\\n          ],\\n          background: '已经成为了外门弟子，但你一直默默无闻，或许是时候寻找新的机缘了。',\\n          bonus: {\\n            martialArt: 2,\\n            fame: 3\\n          }\\n        },\\n        cityStruggle: {\\n          id: 'cityStruggle',\\n          name: '凡间寻道',\\n          description: '身处繁华的凡间，渴望修行却无门可入。',\\n          features: [\\n            '对人间社会了如指掌',\\n            '起始获得一定资源',\\n            '适应能力较强',\\n          ],\\n          background: '在凡俗世间，你意外觉醒了力量，却找不到任何修行的门路。',\\n          bonus: {\\n            wisdom: 2,\\n            charm: 1,\\n            fame: -1\\n          }\\n        },\\n        ancientTomb: {\\n          id: 'ancientTomb',\\n          name: '古墓机缘',\\n          description: '意外发现一座上古大能的墓穴。',\\n          features: [\\n            '获得一位上古大能的传承机会',\\n            '起始获得一些古代功法残篇',\\n            '可能会惹上一些麻烦',\\n            '起始声望-1'\\n          ],\\n          background: '在一次偶然的机会下，你发现了一座上古大能的墓穴，里面似乎蕴含着惊人的机缘。',\\n          bonus: {\\n            luck: 2,\\n            wisdom: 1,\\n            fame: -1\\n          }\\n        },\\n        wanderingMaster: {\\n          id: 'wanderingMaster',\\n          name: '游方遇师',\\n          description: '被一位神秘的游方修士看中，收为记名弟子。',\\n          features: [\\n            '获得神秘师父的指导',\\n            '起始获得一些独特的修炼资源',\\n            '未知的机遇与挑战',\\n            '起始声望+1'\\n          ],\\n          background: '那位神秘的游方修士似乎来历不凡，却性格古怪，时常消失不见。',\\n          bonus: {\\n            wisdom: 1,\\n            luck: 2,\\n            fame: 1\\n          }\\n        },\\n        marketApprentice: {\\n          id: 'marketApprentice',\\n          name: '市集学徒',\\n          description: '在修真市集做学徒，接触到各种修真资源。',\\n          features: [\\n            '对各类修真物品较为了解',\\n            '有稳定的收入来源',\\n            '容易结识各路修士',\\n            '起始声望+1'\\n          ],\\n          background: '在这个修真市集中，你每天都能接触到各种神奇的物品，也许有朝一日能找到适合自己的修行之路。',\\n          bonus: {\\n            charm: 2,\\n            luck: 1,\\n            fame: 1\\n          }\\n        },\\n        // 在开局部分添加一个空白选项\\n        customStart: {\\n          id: 'customStart',\\n          name: '自定义开局',\\n          description: '玩家可以自行填写开局内容。',\\n          features: [],\\n          bonus: {}\\n        },\\n        sectMaster: {\\n          id: 'sectMaster',\\n          name: '宗门之主',\\n          description: '在偏僻的弱小地区建立新宗门，从零开始打造属于自己的修真圣地！但是你还没想好宗门的名字。',\\n          features: [\\n            '可以自由命名宗门',\\n            '获得开创宗门的基础资源',\\n            '拥有建立宗门的基础功法',\\n            '在偏僻地区有一定影响力',\\n            '可以招收弟子'\\n          ],\\n          background: '你决定在这偏僻的山区开创属于自己的宗门。虽然起步艰难，但你坚信，终有一日，这里将成为修真界的一方圣地！第一步，先取个宗门的名字吧！',\\n          bonus: {\\n            heart: 3,\\n            wisdom: 2,\\n            charm: 3,\\n            power: 1,\\n            luck: -2,\\n            fame: 5\\n          },\\n          customInput: {\\n            type: 'text',\\n            label: '宗门名称',\\n            placeholder: '请输入您要创建的宗门名称'\\n          }\\n        },\\n        furnace: {\\n          id: 'furnace',\\n          name: '炉鼎',\\n          description: '你天生就是完美的炉鼎之体，这是福是祸？',\\n          features: [\\n            '完美的炉鼎体质',\\n            '修炼速度翻倍',\\n            '容易引来觊觎',\\n            '随时可能被抓去当炉鼎'\\n          ],\\n          background: '天生的完美炉鼎之体，这究竟是上天的恩赐还是诅咒？你需要小心翼翼地隐藏自己的体质，否则随时可能被有心人发现并抓去当炉鼎。',\\n          bonus: {\\n            bone: 5,\\n            power: 3,\\n            wisdom: 2,\\n            luck: -3,\\n            charm: 3,\\n            lifespan: 50\\n          }\\n        },\\n        soulTransferredDemonLord: {\\n          id: 'soulTransferredDemonLord',\\n          name: '魂穿魔君',\\n          description: '你的灵魂穿越到了此界最恶名昭著的魔道宗门的掌门身上，面对虎视眈眈的弟子们和正道大能，你将如何自处？',\\n          features: [\\n            '继承三劫真君的记忆',\\n            '当前境界跌落到神魂期',\\n            '统领着一群阳神真人弟子',\\n            '正道虎视眈眈',\\n            '弟子们蠢蠢欲动'\\n          ],\\n          background: '当你清醒过来的时候，发现自己的灵魂穿越到了此界最恶名昭著的魔道宗门的掌门，你的弟子全都是阳神真人，而你原本是诸天万界都排得上号的三劫真君，此刻却发现，一起穿越过来的除了灵魂，还有你弱小的境界-神魂期。面对虎视眈眈的弟子们，和准备围剿你的正道大能，你的选择是？',\\n          bonus: {\\n            wisdom: 5,\\n            heart: 3,\\n            power: -5,\\n            luck: -3,\\n            charm: 2,\\n            fame: -20\\n          }\\n        },\\n        terribleMisfortune: {\\n          id: 'terribleMisfortune',\\n          name: '倒了大霉',\\n          description: '你莫名其妙背上了一个杀人大锅，正道人士视你为仇敌，魔道中人却对你颇为欣赏。',\\n          features: [\\n            '受到正道某个门派追杀',\\n            '受到魔道尊敬',\\n            '可以把愤怒转化为法力',\\n            '获得特殊的修炼方式'\\n          ],\\n          background: '你走在路上，突然天上掉下来一个死透的修真者，过了不过一瞬间，很快一群人将你围住，他们面露凶光，眼中带着憎恨，为首的人说到\\\"是你杀了我们大师兄！\\\"从此你的人生彻底改变。',\\n          bonus: {\\n            power: 3,\\n            luck: -5,\\n            heart: 2,\\n            fame: -10,\\n            wisdom: 2\\n          }\\n        },\\n        demonLordReborn: {\\n          id: 'demonLordReborn',\\n          name: '魔君重生',\\n          description: '身为阳神三劫的大魔头，你在被正道围攻至死后，回到了一千年前的养魂期。',\\n          features: [\\n            '保留前世的记忆和经验',\\n            '知晓未来的各种机缘',\\n            '了解各个宗门的秘密',\\n            '可以提前布局',\\n            '需要小心隐藏身份'\\n          ],\\n          background: '阳神三劫的大魔头，也就是你，被正道围攻至死，回过神来，你回到了一千年前，那时你才刚刚进入养魂。带着千年的记忆，掌握了许多机缘的你，能否重活一世？',\\n          bonus: {\\n            wisdom: 5,\\n            heart: 3,\\n            power: 2,\\n            luck: 2,\\n            charm: 1,\\n            fame: -5\\n          }\\n        },\\n        swordTraveler: {\\n          id: 'swordTraveler',\\n          name: '游侠儿',\\n          description: '你是一个在流霞洲游荡的年轻剑客，靠着一把剑在江湖上讨生活，虽然不是什么高门大派的弟子，但也算是有几分微弱本事的野修。',\\n          features: [\\n            '剑道天赋较高',\\n            '江湖阅历丰富',\\n            '人脉广泛',\\n            '起始为观海境'\\n          ],\\n          background: '你自幼就是孤儿，跟着一位老剑客学了几手剑法。这些年来，你靠着这把剑在江湖上行侠仗义，结识了不少朋友。',\\n          bonus: {\\n            swordArt: 3,\\n            charm: 2,\\n            power: 1,\\n            luck: 1\\n          }\\n        },\\n\\n        // 浩然天下开局\\n        confucianScholar: {\\n          id: 'confucianScholar',\\n          name: '浩然学子',\\n          description: '浩然天下的一名学子，修习儒家经典，追求浩然正气。',\\n          features: [\\n            '精通四书五经',\\n            '修习浩然气',\\n            '品性端正',\\n            '起始为观海境，获得一册浩然心法',\\n            '起始资金50雪花钱'  // 作为学子，有一定积蓄\\n          ],\\n          background: '浩然天下有众多书院，而大伏书院是天下闻名的儒家七十二书院之一。你有幸在此求学，每日研习经典，修习浩然正气。你始终坚信\\\"天行健，君子以自强不息\\\"的道理。',\\n          bonus: {\\n            heart: 3,\\n            wisdom: 2,\\n            fame: 2,\\n            power: 1,\\n            martialArt: 2\\n          }\\n        },\\n\\n        wanderingSwordsman: {\\n          id: 'wanderingSwordsman',\\n          name: '中土武夫',\\n          description: '身处中土神洲，此地有九大王朝，而你身处大端王朝。你无缘仙法，只能成为一名纯粹武夫，但你天资很高，年纪轻轻已经达到了英魂境。如今军队征兵，又有镖局招人，你告别父亲，打算外出闯荡，那么，你想好去往何方了吗？',\\n          features: [\\n            '武道天赋高',\\n            '体魄强健',\\n            '起始为英魂镜',\\n            '起始获得一套武道拳法《撼山谱》',\\n            '起始资金20雪花钱'  // 普通武夫，积蓄有限\\n          ],\\n          background: '你出身于中土神洲大端王朝，从小便跟着父亲学习武艺，目前已经是英魂境，靠着一身武艺，在江湖上混口饭吃。',\\n          bonus: {\\n            bone: 3,\\n            power: 2,\\n            heart: 2,\\n            fame: 1\\n          }\\n        },\\n\\n\\n        taoistDisciple: {\\n          id: 'taoistDisciple',\\n          name: '陈平安是也',\\n          description: '你,{{user}}，就是陈平安，飞升境剑修。你是文圣一脉的关门弟子，剑气长城的末代隐官，旧持剑者（剑灵）认可的主人，浩然天下顶级势力-落魄山的山主，十四境纯粹剑仙宁姚的夫君，十四境阿良的兄弟，道教三掌教陆沉的朋友，十四境剑修左右和已故的十四境大修士崔瀺的师弟，已经飞升天庭的火神阮秀的爱慕之人，桐叶洲的大泉王朝的女帝姚近之的思慕之人，宝瓶洲第一美女玉璞境的清凉宗宗主贺小凉心心念念之人，女夫子李宝瓶的小师叔，大骊现任国师。',\\n          features: [\\n            '初始境界为飞升境',\\n            '爱慕者众多，浩然天下的知名人物',\\n            '在剑修中地位特殊，受人敬仰。',\\n            '有钱，初始资金为100金精铜钱',\\n            '妻子为宁姚，红颜为阮秀，姚近之。'\\n          ],\\n          background: '曾经{{user}}是陈平安的化名之一，如今你已经不需要掩饰自己的身份。你在落魄山闲来无事，悠闲轻松。今天，你是选择和宁姚一起修行，还是打算做点别的？',\\n          bonus: {\\n            alchemy: 30,\\n            wisdom: 20,\\n            heart: 20,\\n            fame: 50,\\n            lifespan: 1000\\n          }\\n        },\\n\\n\\n        wallDefender: {\\n          id: 'wallDefender',\\n          name: '玉璞供奉',\\n          description: '你是一名玉璞境的落魄山供奉，负责保护落魄山的安全。虽然这里大能众多，不太需要你的保护......这天，你面对以下任务，需要做出选择：1.前往大泉王朝，调查大妖遗物；前往清凉宗，协商合作事宜；前往巨鹿书院，代替山主问候他的师侄李宝瓶。你还可以邀请一位落魄山的供奉和你共同前往。你的选择是？',\\n          features: [\\n            '精通多门功法',\\n            '天资卓越，但是在落魄山中，你只能算是一个小有天资的小修士。',\\n            '初始境界为玉璞小成',\\n            '初始资金为10谷雨钱',\\n            '你的主人为陈平安'\\n          ],\\n          background: '你是落魄山的一名供奉，负责保护落魄山的安全，执行山主的命令。',\\n          bonus: {\\n            bone: 8,\\n            heart: 8,\\n            power: 8,\\n            fame: 10\\n          }\\n        },\\n\\n\\n        ghostCultivator: {\\n          id: 'ghostCultivator',\\n          name: '鬼道传人',\\n          description: '类似钟魁一般的鬼修，可游走阴阳两界。',\\n          features: [\\n            '可自由出入阴界',\\n            '对鬼道功法亲和度高',\\n            '起始获得一门鬼道秘术',\\n            '但阳世活动受限',\\n            '正道修士会有所顾忌',\\n            '起始资金30雪花钱'  // 鬼修，财富有限\\n          ],\\n          background: '一场机缘让你获得了鬼道传承，从此可以游走于阴阳两界。虽然正道修士对你有所顾忌，但这种特殊的修行方式或许能让你找到一条独特的道路。',\\n          bonus: {\\n            wisdom: 2,\\n            luck: 1,\\n            charm: -1,\\n            fame: -2\\n          }\\n        },\\n\\n        mirrorCrafter: {\\n          id: 'mirrorCrafter',\\n          name: '镜工传承',\\n          description: '来自大龙湫或小龙湫的镜工传人，精通制作法宝宝镜。',\\n          features: [\\n            '精通镜器制作',\\n            '起始掌握基础镜工技艺',\\n            '有稳定的收入来源',\\n            '在仙家势力中声望较高',\\n            '但修炼速度较慢',\\n            '起始资金200雪花钱'  // 手艺人，有一定积蓄\\n          ],\\n          background: '你出身镜工世家，从小学习制作法宝宝镜。虽然修炼速度不如其他人，但精湛的镜工技艺让你在修真界拥有一席之地。',\\n          bonus: {\\n            wisdom: 1,\\n            charm: 2,\\n            power: -1,\\n            fame: 2\\n          }\\n        },\\n\\n        imperialGuard: {\\n          id: 'imperialGuard',\\n          name: '女帝国师',\\n          description: '大泉王朝女帝姚近之的国师，深受信任。',\\n          features: [\\n            '起始为玉璞境修为',\\n            '拥有女帝赐予的令牌，可自由出入皇宫',\\n            '一人之下万人之上',\\n            '大泉王朝的底蕴和杀手锏',\\n            '知晓女帝对陈平安的思慕之情',\\n            '起始资金50小暑钱'  // 朝廷高官，资金充裕\\n          ],\\n          background: '你是大泉王朝女帝姚近之的国师，深受信任。你知道女帝对陈平安的思慕之情，但从未对外透露。在这个桐叶洲仅存的大王朝中，你既要保护女帝安全，又要帮她处理各种政务和修真界的纷争。',\\n          bonus: {\\n            bone: 2,\\n            power: 2,\\n            charm: 2,\\n            wisdom: 1,\\n            fame: 3\\n          }\\n        },\\n\\n        qingliangDisciple: {\\n          id: 'qingliangDisciple',\\n          name: '清凉传人',\\n          description: '宝瓶洲大美人，玉璞境修士，清凉宗宗主贺小凉的亲传弟子，天资聪颖。',\\n          features: [\\n            '起始为金丹境',\\n            '掌握清凉宗独门功法',\\n            '与陆沉一脉有渊源',\\n            '宗主对你寄予厚望',\\n            '但需要面对宗门发展的重任',\\n            '起始资金20小暑钱'  // 大宗门弟子，有一定资源\\n          ],\\n          background: '你是清凉宗宗主贺小凉的亲传弟子。宗主虽然心系陈平安，但对宗门发展也极为重视。作为天资最高的弟子，你既要努力修行，又要帮助宗主处理宗门事务。',\\n          bonus: {\\n            wisdom: 3,\\n            heart: 2,\\n            charm: 1,\\n            power: 1,\\n            fame: 1\\n          }\\n        },\\n        fashionIndustry: {\\n          id: 'fashionIndustry',\\n          name: '彩雀府法衣坊',\\n          description: '传承彩雀府\\\"五彩天衣诀\\\",专注于融合法阵的神秘法袍定制。',\\n          features: [\\n            '获得彩雀府失传的\\\"五彩天衣诀\\\"和一批天蚕丝',\\n            '掌握将法阵融入衣物的独门织造技艺',\\n            '与各大宗门建立法袍定制合作',\\n            '获得一间位于仙市中心的法衣铺',\\n            '继承一位彩雀府老织造的人脉关系',\\n            '起始资金100小暑钱'  // 经商者，资金充足\\n          ],\\n          background: '彩雀府以制作法袍闻名天下,其\\\"五彩天衣诀\\\"能将法阵巧妙织入衣物之中。你是最后一位彩雀府织造大师的关门弟子,继承了这份即将失传的手艺。每一件法袍都需要根据修士的根骨、功法量身定制,既要保证法阵的效用,又要兼顾美观与舒适。这份工作不仅需要精湛的织造技艺,还需要对法阵、灵气运行有深刻的理解。',\\n          bonus: {\\n            craft: 4,      // 精湛的织造技艺\\n            wisdom: 2,     // 对法阵的理解\\n            fame: 3,       // 彩雀府的名声\\n            luck: 1        // 寻材择料的运气\\n          }\\n        },\\n\\n        alchemyIndustry: {\\n          id: 'alchemyIndustry',\\n          name: '青虎宫丹坊',\\n          description: '传承青虎宫\\\"九转金丹诀\\\",专注于灵丹妙药的炼制。',\\n          features: [\\n            '获得青虎宫秘传的\\\"九转金丹诀\\\"',\\n            '继承一尊蕴含火灵的上古丹炉',\\n            '与各大灵药园建立独家供应关系',\\n            '掌握一套完整的丹药品鉴技术',\\n            '获得一间布设有聚灵阵的丹房',\\n            '起始资金80小暑钱'  // 炼丹师，资金不菲\\n          ],\\n          background: '青虎宫以炼丹闻名,其\\\"九转金丹诀\\\"包含了数百种灵丹的炼制之法。作为青虎宫最后一位丹师的关门弟子,你不仅继承了这份传承,还得到了一尊蕴含火灵的上古丹炉。开设丹坊后,你要面对的不仅是各种疑难杂症,还有各方势力的明争暗斗。丹道一途,不仅要在火候上精益求精,更要在权衡之道上拿捏分寸。',\\n          bonus: {\\n            alchemy: 4,    // 精湛的炼丹技艺\\n            wisdom: 3,     // 对药理的理解\\n            fame: 2,       // 青虎宫的名声\\n            luck: 2        // 炼丹时的运气\\n          }\\n        },\\n\\n        ferryBusiness: {\\n          id: 'ferryBusiness',\\n          name: '渡仙航运',\\n          description: '经营跨洲渡船航线,为修士提供安全舒适的跨洲旅程。',\\n          features: [\\n            '获得一艘刻有防护法阵的高级渡船',\\n            '起始为龙门境的水法修士',\\n            '掌握各大洲之间的秘密航线',\\n            '与水神系统建立良好关系',\\n            '获得一支经验丰富的水手团队',\\n            '拥有应对水中妖兽的特殊装备',\\n            '起始资金30小暑钱'  // 渡船经营者，有一定资本\\n          ],\\n          background: '九大洲之间的往来,渡船是最重要的交通工具。你从一位退休的老船主手中接过了这份事业,不仅继承了成熟的航线,还学会了与各路水神打交道的诀窍。在这片水域中,不仅要应对风浪和妖兽,还要平衡各方水神的关系,甚至有时还要帮助一些特殊的\\\"客人\\\"完成秘密的跨洲之旅。',\\n          bonus: {\\n            charm: 3,      // 与人交际的魅力\\n            wisdom: 3,     // 处理危机的智慧\\n            luck: 2,       // 趋吉避凶的运气\\n            fame: 2        // 良好的商业信誉\\n          }\\n        },\\n\\n        hotpotBusiness: {\\n          id: 'hotpotBusiness',\\n          name: '渝州丘记火锅',\\n          description: '传承丘氏秘制火锅,融合灵气与美味的特色餐馆。',\\n          features: [\\n            '获得丘氏独门的\\\"聚灵火锅\\\"配方',\\n            '掌握食材灵气提纯技术',\\n            '获得一批蕴含灵气的特制调料',\\n            '拥有一间位置绝佳的店铺',\\n            '与各大灵兽园建立供货关系',\\n            '起始资金40小暑钱'  // 餐饮经营者，资金不少\\n          ],\\n          background: '渝州丘氏火锅以其独特的\\\"聚灵\\\"手法闻名,能让食客在享受美味的同时获得一丝灵气滋养。你有幸得到丘氏真传,掌握了这门独特的烹饪技艺。开设火锅店后,你不仅要确保食材的新鲜与品质,还要把控火候与灵气的完美融合。一锅红汤的背后,是无数次的实验与改良。',\\n          bonus: {\\n            craft: 3,      // 精湛的烹饪技艺\\n            charm: 3,      // 待客的魅力\\n            wisdom: 2,     // 经营的智慧\\n            fame: 2        // 美食带来的名声\\n          }\\n        },\\n\\n        boneFieldExploration: {\\n          id: 'boneFieldExploration',\\n          name: '骸骨滩探险',\\n          description: '探索骸骨滩的神秘之地,寻找珍稀资源和机缘。',\\n          features: [\\n            '获得一套独特的阴灵探险装备',\\n            '掌握与城隍、阴差互动的技巧',\\n            '与各大阴灵势力建立联系',\\n            '获得一批珍稀的阴灵资源',\\n            '获得一份神秘的阴灵任务',\\n            '起始资金10小暑钱'  // 探险者，资金有限\\n          ],\\n          background: '骸骨滩是一片神秘的地方,充满了阴灵的气息。你有幸得到一套独特的阴灵探险装备,并学会了与城隍、阴差互动的技巧。在这片神秘之地,你不仅要寻找珍稀资源,还要与各大阴灵势力打交道,甚至有时还要帮助他们解决一些特殊的任务。',\\n          bonus: {\\n            wisdom: 3,     // 处理危机的智慧\\n            charm: 2,      // 与人交际的魅力\\n            luck: 2,       // 趋吉避凶的运气\\n            fame: 1        // 探险带来的名声\\n          }\\n        },\\n\\n        taiPingRestorer: {\\n          id: 'taiPingRestorer',\\n          name: '太平重建者',\\n          description: '你是那位号称浩然第一美人，才从五彩天下归来的玉璞境剑仙——黄庭的好友，你决定协助黄庭重建太平山，肩负复兴重任。',\\n          features: [\\n            '起始为元婴境',\\n            '人脉广泛',\\n            '参与重建太平山的核心计划',\\n            '但面临巨大压力和挑战',\\n            '需要平衡各方势力关系',\\n            '起始资金5谷雨钱'  // 重建者，有一定资源\\n          ],\\n          background: '太平山曾是桐叶洲的\\\"脊梁\\\"，如今却几乎尽毁。你协助从五彩天下归来的黄庭一起重建宗门。虽然困难重重，但你坚信在黄庭的带领下，太平山终将重现昔日荣光。',\\n          bonus: {\\n            heart: 2,\\n            power: 2,\\n            wisdom: 2,\\n            bone: 1,\\n            fame: -1\\n          }\\n        },\\n        // ... 其他开局选项 ...\\n      }\\n    };\\n\\n    // 游戏状态管理\\n    const gameState = {\\n      currentStep: 1,\\n      selectedEra: null,\\n      selectedDifficulty: null,\\n      availablePoints: 0,\\n      attributes: {\\n        // 可分配属性\\n        bone: 0,\\n        wisdom: 0,\\n        luck: 0,\\n        power: 0,\\n        heart: 0,\\n        charm: 0,\\n\\n        // 衍生属性\\n        martialArt: 0,\\n        fame: 0,\\n        lifespan: 0,\\n        forging: 0,\\n        alchemy: 0,\\n        palmArt: 0,\\n        fingerArt: 0,\\n        fistArt: 0,\\n        swordArt: 0,\\n        spearArt: 0,\\n        bladeArt: 0\\n      },\\n      selectedOrigin: null,\\n      selectedExperiences: [],\\n      selectedWorld: null,\\n      selectedGender: null,\\n      selectedRace: null,\\n      selectedStart: null,\\n      yaoType: null,\\n\\n      calculateUsedPoints() {\\n        const attrPoints = ['bone', 'wisdom', 'luck', 'power', 'heart', 'charm']\\n          .reduce((sum, attr) => sum + this.attributes[attr], 0);\\n\\n        const originCost = this.selectedOrigin ? CONFIG.ORIGINS[this.selectedOrigin].cost : 0;\\n\\n        const expPoints = this.selectedExperiences\\n          .reduce((sum, expId) => sum + CONFIG.EXPERIENCES[expId].cost, 0);\\n\\n        return attrPoints + originCost + expPoints;\\n      },\\n\\n      calculateFinalAttributeValue(attr) {\\n        let value = this.attributes[attr] || 0;\\n\\n        // 计算出身加成\\n        if (this.selectedOrigin) {\\n          const origin = CONFIG.ORIGINS[this.selectedOrigin];\\n          if (origin.bonus && origin.bonus[attr]) {\\n            value += origin.bonus[attr];\\n          }\\n        }\\n\\n        // 计算经历加成\\n        this.selectedExperiences.forEach(expId => {\\n          const exp = CONFIG.EXPERIENCES[expId];\\n          if (exp.bonus && exp.bonus[attr]) {\\n            value += exp.bonus[attr];\\n          }\\n          // 添加自定义经历的属性计算\\n          if (expId === 'customExperience' && this.customExpAttributes && this.customExpAttributes[attr]) {\\n            value += this.customExpAttributes[attr];\\n          }\\n        });\\n\\n        // 计算种族加成\\n        if (this.selectedRace) {\\n          if (this.selectedRace === 'customRace' && this.customRaceAttributes) {\\n            // 处理自定义种族的属性加成\\n            if (this.customRaceAttributes[attr]) {\\n              value += this.customRaceAttributes[attr];\\n            }\\n          } else {\\n            const race = CONFIG.RACES[this.selectedRace];\\n            if (race.bonus && race.bonus[attr]) {\\n              value += race.bonus[attr];\\n            }\\n          }\\n        }\\n\\n        // 计算开局加成\\n        if (this.selectedStart) {\\n          const start = CONFIG.STARTS[this.selectedStart];\\n          if (start.bonus && start.bonus[attr]) {\\n            value += start.bonus[attr];\\n          }\\n          // 添加自定义开局的属性计算\\n          if (this.selectedStart === 'customStart' && this.customStartAttributes && this.customStartAttributes[attr]) {\\n            value += this.customStartAttributes[attr];\\n          }\\n        }\\n\\n        return value;\\n      }\\n    };\\n    // UI管理器\\n    const UI = {\\n      elements: {\\n        content: document.querySelector('.creation-content'),\\n        prevBtn: document.querySelector('.prev-btn'),\\n        nextBtn: document.querySelector('.next-btn'),\\n        steps: document.querySelectorAll('.step-item')\\n      },\\n\\n      initialize() {\\n        this.showCurrentStep();\\n        this.bindNavigationEvents();\\n        console.log('UI initialized');\\n      },\\n\\n      // 在showCurrentStep方法中，将滚动代码移到最前面\\n      showCurrentStep() {\\n        // 1. 首先执行滚动\\n        window.scrollTo({\\n          top: 0,\\n          behavior: 'smooth'\\n        });\\n\\n        // 2. 更新步骤指示器\\n        this.elements.steps.forEach((step, index) => {\\n          step.classList.toggle('active', index + 1 === gameState.currentStep);\\n        });\\n\\n        // 3. 根据当前步骤显示相应内容\\n        switch (gameState.currentStep) {\\n          case 1:\\n            this.showEraAndDifficultySelection();\\n            break;\\n          case 2:\\n            this.showAttributeAndExperienceSelection();\\n            break;\\n          case 3:\\n            this.showGenderAndRaceSelection();\\n            break;\\n          case 4:\\n            this.showWorldSelection();\\n            break;\\n          case 5:\\n            this.showStartSelection();\\n            break;\\n        }\\n\\n        // 4. 更新导航按钮\\n        this.updateNavigationButtons();\\n      },\\n\\n      showEraAndDifficultySelection() {\\n        const html = `\\n            <div class=\\\"section-title\\\">选择时代</div>\\n            <div class=\\\"era-selection\\\">\\n                ${Object.entries(CONFIG.ERAS).map(([id, era]) => `\\n                    <div class=\\\"era-card ${gameState.selectedEra === id ? 'selected' : ''}\\\" \\n                         data-era-id=\\\"${id}\\\">\\n                        <div class=\\\"era-header\\\">\\n                            <span class=\\\"era-name\\\">${era.name}</span>\\n                            <span class=\\\"era-tag\\\">史诗时代</span>\\n                        </div>\\n                        <div class=\\\"era-content\\\">\\n                            <p class=\\\"era-description\\\">${era.description}</p>\\n                            <div class=\\\"era-features\\\">\\n                                ${era.features.map(feature => `\\n                                    <div class=\\\"era-feature\\\">• ${feature}</div>\\n                                `).join('')}\\n                            </div>\\n                            <div class=\\\"era-background\\\">${era.background}</div>\\n                            ${id === 'customEra' && gameState.selectedEra === 'customEra' ? `\\n                                <div class=\\\"custom-input\\\">\\n                                    <div class=\\\"custom-era-field\\\">\\n                                        <label for=\\\"customEraName\\\">时代名称:</label>\\n                                        <input type=\\\"text\\\" id=\\\"customEraName\\\" class=\\\"custom-input-field\\\" value=\\\"${gameState.customEraName || ''}\\\" placeholder=\\\"请输入时代名称\\\">\\n                                    </div>\\n                                    <div class=\\\"custom-era-field\\\">\\n                                        <label for=\\\"customEraDescription\\\">时代描述:</label>\\n                                        <textarea id=\\\"customEraDescription\\\" class=\\\"custom-input-field\\\" placeholder=\\\"请输入时代描述\\\">${gameState.customEraDescription || ''}</textarea>\\n                                    </div>\\n                                    <div class=\\\"custom-era-field\\\">\\n                                        <label for=\\\"customEraFeatures\\\">时代特点 (用逗号分隔):</label>\\n                                        <input type=\\\"text\\\" id=\\\"customEraFeatures\\\" class=\\\"custom-input-field\\\" value=\\\"${gameState.customEraFeatures || ''}\\\" placeholder=\\\"请输入时代特点\\\">\\n                                    </div>\\n                                    <div class=\\\"custom-era-field\\\">\\n                                        <label for=\\\"customEraBackground\\\">时代背景:</label>\\n                                        <textarea id=\\\"customEraBackground\\\" class=\\\"custom-input-field\\\" placeholder=\\\"请输入时代背景\\\">${gameState.customEraBackground || ''}</textarea>\\n                                    </div>\\n                                </div>\\n                            ` : ''}\\n                        </div>\\n                    </div>\\n                `).join('')}\\n            </div>\\n            \\n            <div class=\\\"section-title\\\">选择难度</div>\\n            <div class=\\\"difficulty-selection\\\">\\n                ${Object.entries(CONFIG.DIFFICULTIES).map(([id, diff]) => `\\n                    <div class=\\\"difficulty-card ${gameState.selectedDifficulty === id ? 'selected' : ''}\\\"\\n                         data-difficulty-id=\\\"${id}\\\">\\n                        <div class=\\\"difficulty-header\\\">\\n                            <span class=\\\"difficulty-name\\\">${diff.name}</span>\\n                            <span class=\\\"points-value\\\">${diff.points}点</span>\\n                        </div>\\n                        <div class=\\\"difficulty-content\\\">\\n                            <p class=\\\"difficulty-description\\\">${diff.description}</p>\\n                            <div class=\\\"difficulty-features\\\">\\n                                ${diff.features.map(feature => `\\n                                    <div class=\\\"difficulty-feature\\\">• ${feature}</div>\\n                                `).join('')}\\n                            </div>\\n                        </div>\\n                    </div>\\n                `).join('')}\\n            </div>\\n        `;\\n\\n        this.elements.content.innerHTML = html;\\n        this.bindEraAndDifficultyEvents();\\n      },\\n\\n      showAttributeAndExperienceSelection() {\\n        const html = `\\n            <div class=\\\"section-title\\\">分配属性点数 (剩余点数: ${gameState.availablePoints - gameState.calculateUsedPoints()})</div>\\n            <div class=\\\"attributes-grid\\\">\\n                ${['bone', 'wisdom', 'luck', 'power', 'heart', 'charm'].map(id => `\\n                    <div class=\\\"attribute-card\\\">\\n                        <div class=\\\"attribute-header\\\">\\n                            <span class=\\\"attribute-name\\\">${CONFIG.ATTRIBUTES[id].name}</span>\\n                            <div class=\\\"attribute-value\\\">\\n                                <button class=\\\"decrease-btn\\\" data-attribute=\\\"${id}\\\">-</button>\\n                                <span class=\\\"value\\\">${gameState.calculateFinalAttributeValue(id)}</span>\\n                                <button class=\\\"increase-btn\\\" data-attribute=\\\"${id}\\\">+</button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"attribute-description\\\">${CONFIG.ATTRIBUTES[id].description}</div>\\n                    </div>\\n                `).join('')}\\n            </div>\\n    \\n            <div class=\\\"section-title\\\">选择出身</div>\\n            <div class=\\\"origins-grid\\\">\\n                ${Object.entries(CONFIG.ORIGINS).map(([id, origin]) => `\\n                    <div class=\\\"origin-card ${gameState.selectedOrigin === id ? 'selected' : ''}\\\"\\n                         data-origin-id=\\\"${id}\\\">\\n                        <div class=\\\"origin-header\\\">\\n                            <span class=\\\"origin-name\\\">${origin.name}</span>\\n                            <span class=\\\"origin-cost\\\">${origin.cost > 0 ? `消耗 ${origin.cost} 点` : '免费'}</span>\\n                        </div>\\n                        <div class=\\\"origin-content\\\">\\n                            <p class=\\\"origin-description\\\">${origin.description}</p>\\n                            <div class=\\\"origin-bonus\\\">\\n                                ${Object.entries(origin.bonus).map(([attr, value]) => `\\n                                    <div class=\\\"bonus-item ${value > 0 ? 'positive' : 'negative'}\\\">\\n                                        ${CONFIG.ATTRIBUTES[attr].name} ${value > 0 ? '+' : ''}${value}\\n                                    </div>\\n                                `).join('')}\\n                            </div>\\n                            <div class=\\\"origin-features\\\">\\n                                ${origin.features.map(feature => `\\n                                    <div class=\\\"origin-feature\\\">• ${feature}</div>\\n                                `).join('')}\\n                            </div>\\n                        </div>\\n                    </div>\\n                `).join('')}\\n            </div>\\n    \\n            <div class=\\\"section-title\\\">选择经历</div>\\n            <div class=\\\"experiences-grid\\\">\\n                ${Object.entries(CONFIG.EXPERIENCES).map(([id, exp]) => `\\n                    <div class=\\\"experience-card ${gameState.selectedExperiences.includes(id) ? 'selected' : ''}\\\"\\n                         data-experience-id=\\\"${id}\\\">\\n                        <div class=\\\"experience-header\\\">\\n                            <span class=\\\"experience-name\\\">${exp.name}</span>\\n                            <span class=\\\"experience-cost ${exp.cost < 0 ? 'positive' : ''}\\\">${exp.cost > 0 ? `消耗 ${exp.cost} 点` : `获得 ${Math.abs(exp.cost)} 点`}</span>\\n                        </div>\\n                        <div class=\\\"experience-content\\\">\\n                            <p class=\\\"experience-description\\\">${exp.description}</p>\\n                            <div class=\\\"experience-bonus\\\">\\n                                ${Object.entries(exp.bonus).map(([attr, value]) => `\\n                                    <div class=\\\"bonus-item ${value > 0 ? 'positive' : 'negative'}\\\">\\n                                        ${CONFIG.ATTRIBUTES[attr].name} ${value > 0 ? '+' : ''}${value}\\n                                    </div>\\n                                `).join('')}\\n                            </div>\\n                            <div class=\\\"experience-features\\\">\\n                                ${exp.features.map(feature => `\\n                                    <div class=\\\"experience-feature\\\">• ${feature}</div>\\n                                `).join('')}\\n                            </div>\\n                            ${id === 'customExperience' && gameState.selectedExperiences.includes('customExperience') ? `\\n                                <div class=\\\"custom-input\\\">\\n                                    <label for=\\\"customExperienceName\\\">经历名称:</label>\\n                                    <input type=\\\"text\\\" id=\\\"customExperienceName\\\" class=\\\"custom-input-field\\\" value=\\\"${gameState.customExperienceName || ''}\\\" placeholder=\\\"请输入经历名称\\\">\\n                                    <label for=\\\"customExperienceDescription\\\">经历描述:</label>\\n                                    <textarea id=\\\"customExperienceDescription\\\" class=\\\"custom-input-field\\\" placeholder=\\\"请输入经历描述\\\">${gameState.customExperienceDescription || ''}</textarea>\\n                                    <label for=\\\"customExperienceFeatures\\\">经历特征 (用逗号分隔):</label>\\n                                    <input type=\\\"text\\\" id=\\\"customExperienceFeatures\\\" class=\\\"custom-input-field\\\" value=\\\"${gameState.customExperienceFeatures || ''}\\\" placeholder=\\\"请输入经历特征\\\">\\n                                    <div class=\\\"attribute-adjustments\\\">\\n                                        <h4>属性调整</h4>\\n                                        <div class=\\\"attribute-grid\\\">\\n                                            <div class=\\\"attribute-input\\\">\\n                                                <label for=\\\"customExp_heart\\\">心性:</label>\\n                                                <input type=\\\"number\\\" id=\\\"customExp_heart\\\" class=\\\"attribute-value-input\\\" value=\\\"${gameState.customExpAttributes?.heart || 0}\\\" min=\\\"-10\\\" max=\\\"10\\\">\\n                                            </div>\\n                                            <div class=\\\"attribute-input\\\">\\n                                                <label for=\\\"customExp_bone\\\">根骨:</label>\\n                                                <input type=\\\"number\\\" id=\\\"customExp_bone\\\" class=\\\"attribute-value-input\\\" value=\\\"${gameState.customExpAttributes?.bone || 0}\\\" min=\\\"-10\\\" max=\\\"10\\\">\\n                                            </div>\\n                                            <div class=\\\"attribute-input\\\">\\n                                                <label for=\\\"customExp_wisdom\\\">悟性:</label>\\n                                                <input type=\\\"number\\\" id=\\\"customExp_wisdom\\\" class=\\\"attribute-value-input\\\" value=\\\"${gameState.customExpAttributes?.wisdom || 0}\\\" min=\\\"-10\\\" max=\\\"10\\\">\\n                                            </div>\\n                                            <div class=\\\"attribute-input\\\">\\n                                                <label for=\\\"customExp_luck\\\">气运:</label>\\n                                                <input type=\\\"number\\\" id=\\\"customExp_luck\\\" class=\\\"attribute-value-input\\\" value=\\\"${gameState.customExpAttributes?.luck || 0}\\\" min=\\\"-10\\\" max=\\\"10\\\">\\n                                            </div>\\n                                            <div class=\\\"attribute-input\\\">\\n                                                <label for=\\\"customExp_power\\\">法力:</label>\\n                                                <input type=\\\"number\\\" id=\\\"customExp_power\\\" class=\\\"attribute-value-input\\\" value=\\\"${gameState.customExpAttributes?.power || 0}\\\" min=\\\"-10\\\" max=\\\"10\\\">\\n                                            </div>\\n                                            <div class=\\\"attribute-input\\\">\\n                                                <label for=\\\"customExp_charm\\\">魅力:</label>\\n                                                <input type=\\\"number\\\" id=\\\"customExp_charm\\\" class=\\\"attribute-value-input\\\" value=\\\"${gameState.customExpAttributes?.charm || 0}\\\" min=\\\"-10\\\" max=\\\"10\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            ` : ''}\\n                        </div>\\n                    </div>\\n                `).join('')}\\n            </div>\\n    \\n            <div class=\\\"section-title\\\">属性总览</div>\\n            <div class=\\\"attributes-summary\\\">\\n                <div class=\\\"summary-grid\\\">\\n                    ${Object.entries(CONFIG.ATTRIBUTES).map(([id, attr]) => `\\n                        <div class=\\\"summary-item\\\">\\n                            <span class=\\\"summary-name\\\">${attr.name}</span>\\n                            <span class=\\\"summary-value ${gameState.calculateFinalAttributeValue(id) > 0 ? 'positive' : gameState.calculateFinalAttributeValue(id) < 0 ? 'negative' : ''}\\\">${gameState.calculateFinalAttributeValue(id)}</span>\\n                        </div>\\n                    `).join('')}\\n                </div>\\n            </div>\\n        `;\\n\\n        this.elements.content.innerHTML = html;\\n        this.bindAttributeEvents();\\n        this.bindOriginEvents();\\n        this.bindExperienceEvents();\\n\\n        // 添加自定义经历输入监听\\n        const customExperienceNameInput = this.elements.content.querySelector('#customExperienceName');\\n        if (customExperienceNameInput) {\\n          customExperienceNameInput.addEventListener('click', (e) => e.stopPropagation());\\n          customExperienceNameInput.addEventListener('input', (e) => {\\n            gameState.customExperienceName = e.target.value.trim();\\n          });\\n        }\\n        const customExperienceDescriptionInput = this.elements.content.querySelector('#customExperienceDescription');\\n        if (customExperienceDescriptionInput) {\\n          customExperienceDescriptionInput.addEventListener('click', (e) => e.stopPropagation());\\n          customExperienceDescriptionInput.addEventListener('input', (e) => {\\n            gameState.customExperienceDescription = e.target.value.trim();\\n          });\\n        }\\n        const customExperienceFeaturesInput = this.elements.content.querySelector('#customExperienceFeatures');\\n        if (customExperienceFeaturesInput) {\\n          customExperienceFeaturesInput.addEventListener('click', (e) => e.stopPropagation());\\n          customExperienceFeaturesInput.addEventListener('input', (e) => {\\n            gameState.customExperienceFeatures = e.target.value.trim();\\n          });\\n        }\\n        const customExperienceAttributesInput = this.elements.content.querySelector('#customExperienceAttributes');\\n        if (customExperienceAttributesInput) {\\n          customExperienceAttributesInput.addEventListener('click', (e) => e.stopPropagation());\\n          customExperienceAttributesInput.addEventListener('input', (e) => {\\n            gameState.customExperienceAttributes = e.target.value.trim();\\n          });\\n        }\\n      },\\n\\n      showGenderAndRaceSelection() {\\n        const html = `\\n            <div class=\\\"section-title\\\">选择性别</div>\\n            <div class=\\\"gender-selection\\\">\\n                ${Object.entries(CONFIG.GENDERS).map(([id, gender]) => `\\n                    <div class=\\\"gender-card ${gameState.selectedGender === id ? 'selected' : ''}\\\" \\n                         data-gender-id=\\\"${id}\\\">\\n                        <div class=\\\"gender-header\\\">\\n                            <span class=\\\"gender-name\\\">${gender.name}</span>\\n                        </div>\\n                        <div class=\\\"gender-content\\\">\\n                            <p class=\\\"gender-description\\\">${gender.description}</p>\\n                            <div class=\\\"gender-features\\\">\\n                                ${gender.features.map(feature => `\\n                                    <div class=\\\"gender-feature\\\">• ${feature}</div>\\n                                `).join('')}\\n                            </div>\\n                        </div>\\n                    </div>\\n                `).join('')}\\n            </div>\\n\\n            <div class=\\\"section-title\\\">选择种族</div>\\n            <div class=\\\"race-selection\\\">\\n                ${Object.entries(CONFIG.RACES).map(([id, race]) => `\\n                    <div class=\\\"race-card ${gameState.selectedRace === id ? 'selected' : ''}\\\" \\n                         data-race-id=\\\"${id}\\\">\\n                        <div class=\\\"race-header\\\">\\n                            <span class=\\\"race-name\\\">${race.name}</span>\\n                        </div>\\n                        <div class=\\\"race-content\\\">\\n                            <p class=\\\"race-description\\\">${race.description}</p>\\n                            ${id === 'yaoguai' && gameState.selectedRace === 'yaoguai' ? `\\n                                <div class=\\\"yao-type-input\\\">\\n                                    <label for=\\\"yaoType\\\">请输入具体妖怪类型:</label>\\n                                    <input type=\\\"text\\\" \\n                                           id=\\\"yaoType\\\" \\n                                           class=\\\"yao-type-field\\\" \\n                                           value=\\\"${gameState.yaoType || ''}\\\" \\n                                           placeholder=\\\"例如：狐妖、蛇妖等\\\"\\n                                           onclick=\\\"event.stopPropagation();\\\"\\n                                           onkeydown=\\\"event.stopPropagation();\\\">\\n                                </div>\\n                            ` : ''}\\n                            ${id === 'customRace' && gameState.selectedRace === 'customRace' ? `\\n                                <div class=\\\"custom-input\\\">\\n                                    <div class=\\\"custom-race-field\\\">\\n                                        <label for=\\\"customRaceName\\\">种族名称:</label>\\n                                        <input type=\\\"text\\\" id=\\\"customRaceName\\\" class=\\\"custom-input-field\\\" value=\\\"${gameState.customRaceName || ''}\\\" placeholder=\\\"请输入种族名称\\\">\\n                                    </div>\\n                                    <div class=\\\"custom-race-field\\\">\\n                                        <label for=\\\"customRaceDescription\\\">种族描述:</label>\\n                                        <textarea id=\\\"customRaceDescription\\\" class=\\\"custom-input-field\\\" placeholder=\\\"请输入种族描述\\\">${gameState.customRaceDescription || ''}</textarea>\\n                                    </div>\\n                                    <div class=\\\"custom-race-field\\\">\\n                                        <label for=\\\"customRaceFeatures\\\">种族特征 (用逗号分隔):</label>\\n                                        <input type=\\\"text\\\" id=\\\"customRaceFeatures\\\" class=\\\"custom-input-field\\\" value=\\\"${gameState.customRaceFeatures || ''}\\\" placeholder=\\\"请输入种族特征\\\">\\n                                    </div>\\n                                    <div class=\\\"attribute-adjustments\\\">\\n                                        <h4>属性调整</h4>\\n                                        <div class=\\\"attribute-grid\\\">\\n                                            <div class=\\\"attribute-input\\\">\\n                                                <label for=\\\"customRace_heart\\\">心性:</label>\\n                                                <input type=\\\"number\\\" id=\\\"customRace_heart\\\" class=\\\"attribute-value-input\\\" value=\\\"${gameState.customRaceAttributes?.heart || 0}\\\" min=\\\"-10\\\" max=\\\"10\\\">\\n                                            </div>\\n                                            <div class=\\\"attribute-input\\\">\\n                                                <label for=\\\"customRace_bone\\\">根骨:</label>\\n                                                <input type=\\\"number\\\" id=\\\"customRace_bone\\\" class=\\\"attribute-value-input\\\" value=\\\"${gameState.customRaceAttributes?.bone || 0}\\\" min=\\\"-10\\\" max=\\\"10\\\">\\n                                            </div>\\n                                            <div class=\\\"attribute-input\\\">\\n                                                <label for=\\\"customRace_wisdom\\\">悟性:</label>\\n                                                <input type=\\\"number\\\" id=\\\"customRace_wisdom\\\" class=\\\"attribute-value-input\\\" value=\\\"${gameState.customRaceAttributes?.wisdom || 0}\\\" min=\\\"-10\\\" max=\\\"10\\\">\\n                                            </div>\\n                                            <div class=\\\"attribute-input\\\">\\n                                                <label for=\\\"customRace_luck\\\">气运:</label>\\n                                                <input type=\\\"number\\\" id=\\\"customRace_luck\\\" class=\\\"attribute-value-input\\\" value=\\\"${gameState.customRaceAttributes?.luck || 0}\\\" min=\\\"-10\\\" max=\\\"10\\\">\\n                                            </div>\\n                                            <div class=\\\"attribute-input\\\">\\n                                                <label for=\\\"customRace_power\\\">法力:</label>\\n                                                <input type=\\\"number\\\" id=\\\"customRace_power\\\" class=\\\"attribute-value-input\\\" value=\\\"${gameState.customRaceAttributes?.power || 0}\\\" min=\\\"-10\\\" max=\\\"10\\\">\\n                                            </div>\\n                                            <div class=\\\"attribute-input\\\">\\n                                                <label for=\\\"customRace_charm\\\">魅力:</label>\\n                                                <input type=\\\"number\\\" id=\\\"customRace_charm\\\" class=\\\"attribute-value-input\\\" value=\\\"${gameState.customRaceAttributes?.charm || 0}\\\" min=\\\"-10\\\" max=\\\"10\\\">\\n                                            </div>\\n                                            <div class=\\\"attribute-input\\\">\\n                                                <label for=\\\"customRace_lifespan\\\">寿元:</label>\\n                                                <input type=\\\"number\\\" id=\\\"customRace_lifespan\\\" class=\\\"attribute-value-input\\\" value=\\\"${gameState.customRaceAttributes?.lifespan || 0}\\\" min=\\\"-1000\\\" max=\\\"1000\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            ` : ''}\\n                            <div class=\\\"race-bonus\\\">\\n                                ${Object.entries(race.bonus || {}).map(([attr, value]) => `\\n                                    <div class=\\\"bonus-item ${value > 0 ? 'positive' : 'negative'}\\\">\\n                                        ${CONFIG.ATTRIBUTES[attr].name} ${value > 0 ? '+' : ''}${value}\\n                                    </div>\\n                                `).join('')}\\n                            </div>\\n                            <div class=\\\"race-features\\\">\\n                                ${race.features.map(feature => `\\n                                    <div class=\\\"race-feature\\\">• ${feature}</div>\\n                                `).join('')}\\n                            </div>\\n                        </div>\\n                    </div>\\n                `).join('')}\\n            </div>\\n        `;\\n\\n        this.elements.content.innerHTML = html;\\n        this.bindGenderAndRaceEvents();\\n      },\\n\\n      showWorldSelection() {\\n        const html = `\\n            <div class=\\\"section-title\\\">选择大世界</div>\\n            <div class=\\\"worlds-grid\\\">\\n                ${Object.entries(CONFIG.WORLDS).map(([id, world]) => `\\n                    <div class=\\\"world-card ${gameState.selectedWorld === id ? 'selected' : ''}\\\"\\n                         data-world-id=\\\"${id}\\\">\\n                        <div class=\\\"world-header\\\">\\n                            <span class=\\\"world-name\\\">${world.name}</span>\\n                            <span class=\\\"world-rank ${world.rank}\\\">${world.rank}级</span>\\n                        </div>\\n                        <div class=\\\"world-content\\\">\\n                            <div class=\\\"world-info\\\">\\n                                <span class=\\\"world-info-label\\\">传承体系:</span>\\n                                <span>${world.tradition}</span>\\n                            </div>\\n                            <div class=\\\"world-info\\\">\\n                                <span class=\\\"world-info-label\\\">特殊传承:</span>\\n                                <span>${world.inheritance}</span>\\n                            </div>\\n                            <div class=\\\"world-info\\\">\\n                                <span class=\\\"world-info-label\\\">最强者:</span>\\n                                <span>${world.maxCultivator}</span>\\n                            </div>\\n                            <div class=\\\"world-features\\\">\\n                                ${world.features.map(feature => `\\n                                    <div class=\\\"world-feature\\\">• ${feature}</div>\\n                                `).join('')}\\n                            </div>\\n                            <div class=\\\"world-description\\\">${world.description}</div>\\n                            <div class=\\\"world-cultivation-path\\\">\\n                                <div class=\\\"path-title\\\">修炼之路</div>\\n                                <div class=\\\"path-content\\\">${world.cultivationPath}</div>\\n                            </div>\\n                            <div class=\\\"world-background\\\">${world.background}</div>\\n                            ${id === 'customWorld' && gameState.selectedWorld === 'customWorld' ? `\\n                                <div class=\\\"custom-input\\\">\\n                                    <div class=\\\"custom-world-field\\\">\\n                                        <label for=\\\"customWorldName\\\">世界名称:</label>\\n                                        <input type=\\\"text\\\" id=\\\"customWorldName\\\" class=\\\"custom-input-field\\\" value=\\\"${gameState.customWorldName || ''}\\\" placeholder=\\\"请输入世界名称\\\">\\n                                    </div>\\n                                    <div class=\\\"custom-world-field\\\">\\n                                        <label for=\\\"customWorldRank\\\">世界等级:</label>\\n                                        <input type=\\\"text\\\" id=\\\"customWorldRank\\\" class=\\\"custom-input-field\\\" value=\\\"${gameState.customWorldRank || ''}\\\" placeholder=\\\"请输入世界等级(SS/S/A/B/C/D)\\\">\\n                                    </div>\\n                                    <div class=\\\"custom-world-field\\\">\\n                                        <label for=\\\"customWorldTradition\\\">传承体系:</label>\\n                                        <input type=\\\"text\\\" id=\\\"customWorldTradition\\\" class=\\\"custom-input-field\\\" value=\\\"${gameState.customWorldTradition || ''}\\\" placeholder=\\\"请输入传承体系\\\">\\n                                    </div>\\n                                    <div class=\\\"custom-world-field\\\">\\n                                        <label for=\\\"customWorldInheritance\\\">特殊传承:</label>\\n                                        <input type=\\\"text\\\" id=\\\"customWorldInheritance\\\" class=\\\"custom-input-field\\\" value=\\\"${gameState.customWorldInheritance || ''}\\\" placeholder=\\\"请输入特殊传承\\\">\\n                                    </div>\\n                                    <div class=\\\"custom-world-field\\\">\\n                                        <label for=\\\"customWorldMaxCultivator\\\">最强者:</label>\\n                                        <input type=\\\"text\\\" id=\\\"customWorldMaxCultivator\\\" class=\\\"custom-input-field\\\" value=\\\"${gameState.customWorldMaxCultivator || ''}\\\" placeholder=\\\"请输入最强者信息\\\">\\n                                    </div>\\n                                    <div class=\\\"custom-world-field\\\">\\n                                        <label for=\\\"customWorldDescription\\\">世界描述:</label>\\n                                        <textarea id=\\\"customWorldDescription\\\" class=\\\"custom-input-field\\\" placeholder=\\\"请输入世界描述\\\">${gameState.customWorldDescription || ''}</textarea>\\n                                    </div>\\n                                    <div class=\\\"custom-world-field\\\">\\n                                        <label for=\\\"customWorldFeatures\\\">世界特点 (用逗号分隔):</label>\\n                                        <input type=\\\"text\\\" id=\\\"customWorldFeatures\\\" class=\\\"custom-input-field\\\" value=\\\"${gameState.customWorldFeatures || ''}\\\" placeholder=\\\"请输入世界特点\\\">\\n                                    </div>\\n                                    <div class=\\\"custom-world-field\\\">\\n                                        <label for=\\\"customWorldBackground\\\">世界背景:</label>\\n                                        <textarea id=\\\"customWorldBackground\\\" class=\\\"custom-input-field\\\" placeholder=\\\"请输入世界背景\\\">${gameState.customWorldBackground || ''}</textarea>\\n                                    </div>\\n                                    <div class=\\\"custom-world-field\\\">\\n                                        <label for=\\\"customWorldCultivationPath\\\">修行建议:</label>\\n                                        <textarea id=\\\"customWorldCultivationPath\\\" class=\\\"custom-input-field\\\" placeholder=\\\"请输入修行建议\\\">${gameState.customWorldCultivationPath || ''}</textarea>\\n                                    </div>\\n                                </div>\\n                            ` : ''}\\n                        </div>\\n                    </div>\\n                `).join('')}\\n            </div>\\n        `;\\n\\n        this.elements.content.innerHTML = html;\\n        this.bindWorldEvents();\\n\\n        // 添加自定义世界输入监听\\n        const customWorldInput = this.elements.content.querySelector('#customWorldInput');\\n        if (customWorldInput) {\\n          customWorldInput.addEventListener('input', (e) => {\\n            gameState.customWorldContent = e.target.value.trim();\\n          });\\n        }\\n      },\\n\\n      showStartSelection() {\\n        const html = `\\n            <div class=\\\"section-title\\\">选择开局</div>\\n            <div class=\\\"starts-grid\\\">\\n              ${Object.entries(CONFIG.STARTS || {}).map(([id, start]) => {\\n          if (!start) {\\n            console.error(`Invalid start configuration for id: ${id}`);\\n            return '';\\n          }\\n\\n          return `\\n                  <div class=\\\"start-card ${gameState.selectedStart === id ? 'selected' : ''}\\\"\\n                       data-start-id=\\\"${id}\\\">\\n                    <div class=\\\"start-header\\\">\\n                      <span class=\\\"start-name\\\">${start.name || '未命名开局'}</span>\\n                    </div>\\n                    <div class=\\\"start-content\\\">\\n                      <p class=\\\"start-description\\\">${start.description || '暂无描述'}</p>\\n                      <div class=\\\"start-bonus\\\">\\n                        ${Object.entries(start.bonus || {}).map(([attr, value]) => `\\n                          <div class=\\\"bonus-item ${value > 0 ? 'positive' : 'negative'}\\\">\\n                            ${CONFIG.ATTRIBUTES[attr]?.name || attr} ${value > 0 ? '+' : ''}${value}\\n                          </div>\\n                        `).join('')}\\n                      </div>\\n                      <div class=\\\"start-features\\\">\\n                        ${(start.features || []).map(feature => `\\n                          <div class=\\\"start-feature\\\">• ${feature}</div>\\n                        `).join('')}\\n                      </div>\\n                      <div class=\\\"start-background\\\">${start.background || '暂无背景'}</div>\\n                      ${id === 'customStart' && gameState.selectedStart === 'customStart' ? `\\n                        <div class=\\\"custom-input\\\">\\n                          <!-- ... custom start input fields ... -->\\n                        </div>\\n                      ` : ''}\\n                    </div>\\n                  </div>\\n                `;\\n        }).join('')}\\n            </div>\\n          `;\\n\\n        this.elements.content.innerHTML = html;\\n        this.bindStartEvents();\\n      },\\n\\n      bindEraAndDifficultyEvents() {\\n        this.elements.content.querySelectorAll('.era-card').forEach(card => {\\n          card.addEventListener('click', (e) => {\\n            if (e.target.closest('.custom-input')) return;\\n            const eraId = card.dataset.eraId;\\n            gameState.selectedEra = eraId;\\n            this.showCurrentStep();\\n          });\\n        });\\n\\n        // 为自定义时代的输入框添加事件监听\\n        const customInputs = {\\n          'customEraName': 'customEraName',\\n          'customEraDescription': 'customEraDescription',\\n          'customEraFeatures': 'customEraFeatures',\\n          'customEraBackground': 'customEraBackground'\\n        };\\n\\n        Object.entries(customInputs).forEach(([id, stateKey]) => {\\n          const input = document.getElementById(id);\\n          if (input) {\\n            input.addEventListener('click', (e) => {\\n              e.stopPropagation();\\n            });\\n            input.addEventListener('input', (e) => {\\n              gameState[stateKey] = e.target.value.trim();\\n            });\\n          }\\n        });\\n\\n        this.elements.content.querySelectorAll('.difficulty-card').forEach(card => {\\n          card.addEventListener('click', () => {\\n            const difficultyId = card.dataset.difficultyId;\\n            gameState.selectedDifficulty = difficultyId;\\n            gameState.availablePoints = CONFIG.DIFFICULTIES[difficultyId].points;\\n            this.showCurrentStep();\\n          });\\n        });\\n      },\\n\\n      bindAttributeEvents() {\\n        this.elements.content.querySelectorAll('.decrease-btn').forEach(btn => {\\n          btn.addEventListener('click', () => {\\n            const attrId = btn.dataset.attribute;\\n            if (gameState.attributes[attrId] > 0) {\\n              gameState.attributes[attrId]--;\\n              this.showAttributeAndExperienceSelection();\\n            }\\n          });\\n        });\\n\\n        this.elements.content.querySelectorAll('.increase-btn').forEach(btn => {\\n          btn.addEventListener('click', () => {\\n            const attrId = btn.dataset.attribute;\\n            const usedPoints = gameState.calculateUsedPoints();\\n            if (gameState.attributes[attrId] < CONFIG.MAX_ATTR_VALUE &&\\n              usedPoints < gameState.availablePoints) {\\n              gameState.attributes[attrId]++;\\n              this.showAttributeAndExperienceSelection();\\n            }\\n          });\\n        });\\n      },\\n\\n      bindOriginEvents() {\\n        this.elements.content.querySelectorAll('.origin-card').forEach(card => {\\n          card.addEventListener('click', () => {\\n            const originId = card.dataset.originId;\\n            const origin = CONFIG.ORIGINS[originId];\\n\\n            const currentUsedPoints = gameState.calculateUsedPoints();\\n            const pointsAfterSelection = currentUsedPoints -\\n              (gameState.selectedOrigin ? CONFIG.ORIGINS[gameState.selectedOrigin].cost : 0) +\\n              origin.cost;\\n\\n            if (pointsAfterSelection <= gameState.availablePoints) {\\n              gameState.selectedOrigin = originId;\\n            } else {\\n              alert('剩余点数不足以选择该出身！');\\n            }\\n\\n            this.showAttributeAndExperienceSelection();\\n            this.updateNavigationButtons();\\n          });\\n        });\\n      },\\n\\n      bindExperienceEvents() {\\n        this.elements.content.querySelectorAll('.experience-card').forEach(card => {\\n          card.addEventListener('click', (e) => {\\n            if (e.target.closest('.custom-input') || e.target.closest('.attribute-adjustments')) {\\n              return;\\n            }\\n            const expId = card.dataset.experienceId;\\n            const experience = CONFIG.EXPERIENCES[expId];\\n\\n            if (gameState.selectedExperiences.includes(expId)) {\\n              gameState.selectedExperiences = gameState.selectedExperiences.filter(id => id !== expId);\\n            } else {\\n              const usedPoints = gameState.calculateUsedPoints();\\n              const totalPointsAfterSelection = usedPoints + experience.cost;\\n\\n              if (totalPointsAfterSelection <= gameState.availablePoints) {\\n                gameState.selectedExperiences.push(expId);\\n              } else {\\n                alert('剩余点数不足以选择该经历！');\\n              }\\n            }\\n\\n            this.showAttributeAndExperienceSelection();\\n            this.updateNavigationButtons();\\n          });\\n\\n          // 当鼠标进入输入框区域时禁用卡片悬停效果\\n          const customInput = card.querySelector('.custom-input');\\n          if (customInput) {\\n            customInput.addEventListener('mouseenter', () => {\\n              card.classList.add('no-hover');\\n            });\\n            customInput.addEventListener('mouseleave', () => {\\n              card.classList.remove('no-hover');\\n            });\\n          }\\n        });\\n\\n        // 为自定义经历的属性调整添加事件监听\\n        ['heart', 'bone', 'wisdom', 'luck', 'power', 'charm'].forEach(attr => {\\n          const input = document.getElementById(`customExp_${attr}`);\\n          if (input) {\\n            input.addEventListener('click', (e) => {\\n              e.stopPropagation();\\n            });\\n            input.addEventListener('input', (e) => {\\n              e.stopPropagation();\\n              if (!gameState.customExpAttributes) {\\n                gameState.customExpAttributes = {};\\n              }\\n              gameState.customExpAttributes[attr] = parseInt(e.target.value) || 0;\\n\\n              // 更新属性总览，但不重新渲染整个页面\\n              this.updateAttributeSummaryInPlace();\\n            });\\n          }\\n        });\\n      },\\n\\n      bindWorldEvents() {\\n        this.elements.content.querySelectorAll('.world-card').forEach(card => {\\n          card.addEventListener('click', (e) => {\\n            if (e.target.closest('.custom-input')) return;\\n            const worldId = card.dataset.worldId;\\n            console.log('World selected:', worldId);\\n            gameState.selectedWorld = worldId;\\n            this.showWorldSelection();\\n            this.updateNavigationButtons();\\n          });\\n        });\\n\\n        // 为自定义世界的输入框添加事件监听\\n        const customInputs = {\\n          'customWorldName': 'customWorldName',\\n          'customWorldRank': 'customWorldRank',\\n          'customWorldTradition': 'customWorldTradition',\\n          'customWorldInheritance': 'customWorldInheritance',\\n          'customWorldMaxCultivator': 'customWorldMaxCultivator',\\n          'customWorldDescription': 'customWorldDescription',\\n          'customWorldFeatures': 'customWorldFeatures',\\n          'customWorldBackground': 'customWorldBackground',\\n          'customWorldCultivationPath': 'customWorldCultivationPath'\\n        };\\n\\n        Object.entries(customInputs).forEach(([id, stateKey]) => {\\n          const input = document.getElementById(id);\\n          if (input) {\\n            input.addEventListener('click', (e) => {\\n              e.stopPropagation();\\n              e.preventDefault();\\n            });\\n            input.addEventListener('input', (e) => {\\n              e.stopPropagation();\\n              gameState[stateKey] = e.target.value.trim();\\n            });\\n          }\\n        });\\n      },\\n\\n      bindGenderAndRaceEvents() {\\n        this.elements.content.querySelectorAll('.gender-card').forEach(card => {\\n          card.addEventListener('click', () => {\\n            const genderId = card.dataset.genderId;\\n            gameState.selectedGender = genderId;\\n            this.showGenderAndRaceSelection();\\n            this.updateNavigationButtons();\\n          });\\n        });\\n\\n        this.elements.content.querySelectorAll('.race-card').forEach(card => {\\n          card.addEventListener('click', (e) => {\\n            // 如果点击的是输入框，则不触发种族选择\\n            if (e.target.closest('.custom-input')) {\\n              return;\\n            }\\n\\n            const raceId = card.dataset.raceId;\\n            // 保存当前的自定义种族信息\\n            if (gameState.selectedRace === 'customRace') {\\n              gameState.customRaceInfo = {\\n                name: document.getElementById('customRaceName')?.value || '',\\n                description: document.getElementById('customRaceDescription')?.value || '',\\n                features: document.getElementById('customRaceFeatures')?.value || '',\\n                attributes: { ...gameState.customRaceAttributes }\\n              };\\n            }\\n\\n            gameState.selectedRace = raceId;\\n\\n            // 如果之前选择的不是妖怪，切换到妖怪时重置yaoType\\n            if (raceId === 'yaoguai' && gameState.selectedRace !== 'yaoguai') {\\n              gameState.yaoType = null;\\n            }\\n\\n            this.showGenderAndRaceSelection();\\n\\n            // 恢复自定义种族信息\\n            if (raceId === 'customRace' && gameState.customRaceInfo) {\\n              document.getElementById('customRaceName').value = gameState.customRaceInfo.name;\\n              document.getElementById('customRaceDescription').value = gameState.customRaceInfo.description;\\n              document.getElementById('customRaceFeatures').value = gameState.customRaceInfo.features;\\n              gameState.customRaceAttributes = { ...gameState.customRaceInfo.attributes };\\n\\n              // 更新属性输入框的值\\n              Object.entries(gameState.customRaceAttributes || {}).forEach(([attr, value]) => {\\n                const input = document.getElementById(`customRace_${attr}`);\\n                if (input) {\\n                  input.value = value;\\n                }\\n              });\\n            }\\n\\n            this.updateNavigationButtons();\\n          });\\n        });\\n\\n        // 添加自定义种族输入框的事件监听\\n        ['customRaceName', 'customRaceDescription', 'customRaceFeatures'].forEach(id => {\\n          const input = document.getElementById(id);\\n          if (input) {\\n            input.addEventListener('click', (e) => e.stopPropagation());\\n            input.addEventListener('input', (e) => {\\n              e.stopPropagation();\\n              const field = id.replace('customRace', '').toLowerCase();\\n              if (!gameState.customRaceInfo) {\\n                gameState.customRaceInfo = {};\\n              }\\n              gameState.customRaceInfo[field] = e.target.value.trim();\\n            });\\n          }\\n        });\\n\\n        // 添加自定义种族属性输入框的事件监听\\n        ['heart', 'bone', 'wisdom', 'luck', 'power', 'charm', 'lifespan'].forEach(attr => {\\n          const input = document.getElementById(`customRace_${attr}`);\\n          if (input) {\\n            input.addEventListener('click', (e) => e.stopPropagation());\\n            input.addEventListener('input', (e) => {\\n              e.stopPropagation();\\n              if (!gameState.customRaceAttributes) {\\n                gameState.customRaceAttributes = {};\\n              }\\n              gameState.customRaceAttributes[attr] = parseInt(e.target.value) || 0;\\n              if (!gameState.customRaceInfo) {\\n                gameState.customRaceInfo = {};\\n              }\\n              if (!gameState.customRaceInfo.attributes) {\\n                gameState.customRaceInfo.attributes = {};\\n              }\\n              gameState.customRaceInfo.attributes[attr] = parseInt(e.target.value) || 0;\\n            });\\n          }\\n        });\\n\\n        // 添加妖怪类型输入框的事件监听\\n        const yaoTypeInput = document.getElementById('yaoType');\\n        if (yaoTypeInput) {\\n          yaoTypeInput.addEventListener('input', (e) => {\\n            e.stopPropagation();\\n            gameState.yaoType = e.target.value.trim();\\n          });\\n        }\\n      },\\n\\n      bindStartEvents() {\\n        this.elements.content.querySelectorAll('.start-card').forEach(card => {\\n          card.addEventListener('click', (e) => {\\n            if (e.target.closest('.custom-input') || e.target.closest('.attribute-adjustments')) {\\n              return;\\n            }\\n            const startId = card.dataset.startId;\\n            gameState.selectedStart = startId;\\n\\n            if (startId === 'customStart' && !gameState.customStartAttributes) {\\n              gameState.customStartAttributes = {\\n                heart: 0,\\n                bone: 0,\\n                wisdom: 0,\\n                luck: 0,\\n                power: 0,\\n                charm: 0\\n              };\\n            }\\n\\n            this.showStartSelection();\\n            this.updateNavigationButtons();\\n          });\\n\\n          // 当鼠标进入输入框区域时禁用卡片悬停效果\\n          const customInput = card.querySelector('.custom-input');\\n          if (customInput) {\\n            customInput.addEventListener('mouseenter', () => {\\n              card.classList.add('no-hover');\\n            });\\n            customInput.addEventListener('mouseleave', () => {\\n              card.classList.remove('no-hover');\\n            });\\n          }\\n        });\\n\\n        // 为自定义开局的属性调整添加事件监听\\n        ['heart', 'bone', 'wisdom', 'luck', 'power', 'charm'].forEach(attr => {\\n          const input = document.getElementById(`customStart_${attr}`);\\n          if (input) {\\n            input.addEventListener('click', (e) => {\\n              e.stopPropagation();\\n            });\\n            input.addEventListener('input', (e) => {\\n              e.stopPropagation();\\n              if (!gameState.customStartAttributes) {\\n                gameState.customStartAttributes = {\\n                  heart: 0,\\n                  bone: 0,\\n                  wisdom: 0,\\n                  luck: 0,\\n                  power: 0,\\n                  charm: 0\\n                };\\n              }\\n              gameState.customStartAttributes[attr] = parseInt(e.target.value) || 0;\\n\\n              // 更新属性总览，但不重新渲染整个页面\\n              this.updateAttributeSummaryInPlace();\\n            });\\n          }\\n        });\\n      },\\n\\n      updateNavigationButtons() {\\n        this.elements.prevBtn.disabled = gameState.currentStep === 1;\\n        this.elements.nextBtn.disabled = !this.validateCurrentStep();\\n        this.elements.nextBtn.textContent = gameState.currentStep === 5 ? '完成创建' : '下一步';\\n      },\\n\\n      validateCurrentStep() {\\n        switch (gameState.currentStep) {\\n          case 1:\\n            return gameState.selectedEra && gameState.selectedDifficulty;\\n          case 2:\\n            const usedPoints = gameState.calculateUsedPoints();\\n            return usedPoints > 0 &&\\n              usedPoints <= gameState.availablePoints &&\\n              gameState.selectedOrigin !== null;\\n          case 3:\\n            if (gameState.selectedGender === null || gameState.selectedRace === null) {\\n              return false;\\n            }\\n            // 如果选择了妖族，必须输入具体类型\\n            if (gameState.selectedRace === 'yaoguai' && (!gameState.yaoType || gameState.yaoType.trim() === '')) {\\n              return false;\\n            }\\n            return true;\\n          case 4:\\n            console.log('Validating world selection:', {\\n              selectedWorld: gameState.selectedWorld,\\n              isValid: gameState.selectedWorld !== null\\n            });\\n            if (gameState.selectedWorld === null) {\\n              console.log('World selection is null');\\n              return false;\\n            }\\n            // 确保选择的世界存在于配置中\\n            if (!CONFIG.WORLDS[gameState.selectedWorld]) {\\n              console.log('Selected world not found in CONFIG.WORLDS');\\n              return false;\\n            }\\n            return true;\\n          case 5:\\n            return gameState.selectedStart !== null;\\n          default:\\n            return false;\\n        }\\n      },\\n\\n      bindNavigationEvents() {\\n        this.elements.prevBtn.addEventListener('click', () => {\\n          if (gameState.currentStep > 1) {\\n            gameState.currentStep--;\\n            // 使用Promise确保DOM更新后再滚动\\n            Promise.resolve().then(() => {\\n              this.showCurrentStep();\\n              window.scrollTo({\\n                top: 0,\\n                behavior: 'smooth'\\n              });\\n            });\\n          }\\n        });\\n\\n        this.elements.nextBtn.addEventListener('click', () => {\\n          if (this.validateCurrentStep()) {\\n            if (gameState.currentStep < 5) {\\n              gameState.currentStep++;\\n              // 使用Promise确保DOM更新后再滚动\\n              Promise.resolve().then(() => {\\n                this.showCurrentStep();\\n                window.scrollTo({\\n                  top: 0,\\n                  behavior: 'smooth'\\n                });\\n              });\\n            } else {\\n              this.finishCreation();\\n            }\\n          }\\n        });\\n      },\\n\\n      finishCreation() {\\n        const result = {\\n          era: gameState.selectedEra,\\n          difficulty: gameState.selectedDifficulty,\\n          origin: gameState.selectedOrigin,\\n          gender: gameState.selectedGender,\\n          race: gameState.selectedRace,\\n          start: gameState.selectedStart,\\n          attributes: {\\n            base: {\\n              bone: gameState.attributes.bone,\\n              wisdom: gameState.attributes.wisdom,\\n              luck: gameState.attributes.luck,\\n              power: gameState.attributes.power,\\n              heart: gameState.attributes.heart,\\n              charm: gameState.attributes.charm\\n            },\\n            final: Object.keys(CONFIG.ATTRIBUTES).reduce((acc, attr) => {\\n              acc[attr] = gameState.calculateFinalAttributeValue(attr);\\n              return acc;\\n            }, {})\\n          },\\n          experiences: gameState.selectedExperiences,\\n          world: gameState.selectedWorld,\\n          // 添加自定义内容\\n          customContent: {\\n            experience: gameState.selectedExperiences.includes('customExperience') ? {\\n              name: gameState.customExperienceName || '自定义经历',\\n              description: gameState.customExperienceDescription || '',\\n              features: gameState.customExperienceFeatures ? gameState.customExperienceFeatures.split(',').map(f => f.trim()) : []\\n            } : null,\\n            world: gameState.selectedWorld === 'customWorld' ? {\\n              name: gameState.customWorldName || '自定义世界',\\n              rank: gameState.customWorldRank || '',\\n              tradition: gameState.customWorldTradition || '',\\n              inheritance: gameState.customWorldInheritance || '',\\n              maxCultivator: gameState.customWorldMaxCultivator || '',\\n              description: gameState.customWorldDescription || '',\\n              features: gameState.customWorldFeatures ? gameState.customWorldFeatures.split(',').map(f => f.trim()) : [],\\n              background: gameState.customWorldBackground || '',\\n              cultivationPath: gameState.customWorldCultivationPath || ''\\n            } : null,\\n            start: gameState.selectedStart === 'customStart' ? {\\n              name: gameState.customStartName || '自定义开局',\\n              description: gameState.customStartDescription || '',\\n              features: gameState.customStartFeatures ? gameState.customStartFeatures.split(',').map(f => f.trim()) : [],\\n              background: gameState.customStartBackground || '',\\n              bonus: gameState.customStartAttributes || {}\\n            } : null\\n          }\\n        };\\n\\n        console.log('Character creation completed:', result);\\n\\n        const fameValue = result.attributes.final.fame;\\n        const fameDisplay = fameValue >= 0 ?\\n          `正道声望: ${fameValue}` :\\n          `魔道声望: ${Math.abs(fameValue)}`;\\n\\n        // 获取正确的经历、世界和开局信息\\n        const getExperienceInfo = (expId) => {\\n          if (expId === 'customExperience' && result.customContent.experience) {\\n            return {\\n              name: gameState.customExperienceName || '自定义经历',\\n              description: gameState.customExperienceDescription || '',\\n              features: gameState.customExperienceFeatures ? gameState.customExperienceFeatures.split(',').map(f => f.trim()) : []\\n            };\\n          }\\n          return CONFIG.EXPERIENCES[expId];\\n        };\\n\\n        const getWorldInfo = () => {\\n          if (result.world === 'customWorld') {\\n            return {\\n              name: gameState.customWorldName || '自定义世界',\\n              rank: gameState.customWorldRank || '',\\n              tradition: gameState.customWorldTradition || '',\\n              inheritance: gameState.customWorldInheritance || '',\\n              maxCultivator: gameState.customWorldMaxCultivator || '',\\n              description: gameState.customWorldDescription || '',\\n              features: gameState.customWorldFeatures ? gameState.customWorldFeatures.split(',').map(f => f.trim()) : [],\\n              background: gameState.customWorldBackground || '',\\n              cultivationPath: gameState.customWorldCultivationPath || ''\\n            };\\n          }\\n          return CONFIG.WORLDS[result.world];\\n        };\\n\\n        const getStartInfo = () => {\\n          if (gameState.selectedStart === 'customStart') {\\n            return {\\n              name: gameState.customStartName || '自定义开局',\\n              description: gameState.customStartDescription || '',\\n              features: gameState.customStartFeatures ? gameState.customStartFeatures.split(',').map(f => f.trim()) : [],\\n              background: gameState.customStartBackground || '',\\n              bonus: gameState.customStartAttributes || {}\\n            };\\n          }\\n          return {\\n            ...CONFIG.STARTS[result.start],\\n            // 确保所有必要的字段都存在\\n            name: CONFIG.STARTS[result.start].name,\\n            description: CONFIG.STARTS[result.start].description,\\n            features: CONFIG.STARTS[result.start].features || [],\\n            background: CONFIG.STARTS[result.start].background || '',\\n            bonus: CONFIG.STARTS[result.start].bonus || {}\\n          };\\n        };\\n\\n        const worldInfo = getWorldInfo();\\n        const startInfo = getStartInfo();\\n\\n        const summaryHtml = `\\n            <div class=\\\"creation-summary\\\">\\n                <h2>角色创建完成</h2>\\n                <div class=\\\"summary-section\\\">\\n                    <h3>基本信息</h3>\\n                    <p>时代：${CONFIG.ERAS[result.era].name}</p>\\n                    <p>难度：${CONFIG.DIFFICULTIES[result.difficulty].name}</p>\\n                    <p>性别：${CONFIG.GENDERS[result.gender].name}</p>\\n                    <p>种族：${CONFIG.RACES[result.race].name}</p>\\n                    <p>出身：${CONFIG.ORIGINS[result.origin].name}</p>\\n                    <p>世界：${worldInfo.name}</p>\\n                    <p>开局：${startInfo.name}</p>\\n                    <p>开局描述：${startInfo.description}</p>\\n                    <p>开局背景：${startInfo.background}</p>\\n                    <p>开局特点：${startInfo.features}</p>\\n                    <ul>\\n                        ${startInfo.features.map(feature => `<li>${feature}</li>`).join('')}\\n                    </ul>\\n                </div>\\n                <div class=\\\"summary-section\\\">\\n                    <h3>核心属性</h3>\\n                    ${['heart', 'bone', 'wisdom', 'luck', 'power', 'charm'].map(attr => `\\n                        <p>${CONFIG.ATTRIBUTES[attr].name}: ${result.attributes.final[attr]}</p>\\n                    `).join('')}\\n                    <p class=\\\"fame-value ${fameValue >= 0 ? 'positive' : 'negative'}\\\">\\n                        ${fameDisplay}\\n                    </p>\\n                </div>\\n                <div class=\\\"summary-section\\\">\\n                    <h3>技艺属性</h3>\\n                    ${['martialArt', 'forging', 'alchemy'].map(attr => `\\n                        <p>${CONFIG.ATTRIBUTES[attr].name}: ${result.attributes.final[attr]}</p>\\n                    `).join('')}\\n                </div>\\n                <div class=\\\"summary-section\\\">\\n                    <h3>武学资质</h3>\\n                    ${['palmArt', 'fingerArt', 'fistArt', 'swordArt', 'spearArt', 'bladeArt'].map(attr => `\\n                        <p>${CONFIG.ATTRIBUTES[attr].name}: ${result.attributes.final[attr]}</p>\\n                    `).join('')}\\n                </div>\\n                <div class=\\\"summary-section\\\">\\n                    <h3>其他属性</h3>\\n                    <p>${CONFIG.ATTRIBUTES.lifespan.name}: ${result.attributes.final.lifespan}</p>\\n                </div>\\n                <div class=\\\"summary-section\\\">\\n                    <h3>选择的经历</h3>\\n                    ${result.experiences.map(exp => {\\n          const experience = getExperienceInfo(exp);\\n          return `\\n                            <div class=\\\"experience-summary\\\">\\n                                <p class=\\\"experience-name\\\">${experience.name}</p>\\n                                <p class=\\\"experience-desc\\\">${experience.description}</p>\\n                                ${experience.features && experience.features.length > 0 ? `\\n                                    <div class=\\\"experience-features\\\">\\n                                        ${experience.features.map(feature => `\\n                                            <p class=\\\"experience-feature\\\">• ${feature}</p>\\n                                        `).join('')}\\n                                    </div>\\n                                ` : ''}\\n                            </div>\\n                        `;\\n        }).join('')}\\n                </div>\\n                <div class=\\\"summary-section\\\">\\n                    <h3>世界信息</h3>\\n                    <p class=\\\"world-name\\\">${worldInfo.name} ${worldInfo.rank ? `(${worldInfo.rank}级)` : ''}</p>\\n                    <p class=\\\"world-tradition\\\">传承体系: ${worldInfo.tradition}</p>\\n                    <p class=\\\"world-inheritance\\\">特殊传承: ${worldInfo.inheritance}</p>\\n                    <p class=\\\"world-cultivator\\\">最强者: ${worldInfo.maxCultivator}</p>\\n                    <p class=\\\"world-description\\\">简介: ${worldInfo.description}</p>\\n                    ${worldInfo.features && worldInfo.features.length > 0 ? `\\n                        <div class=\\\"world-features\\\">\\n                            <p>世界特点:</p>\\n                            ${worldInfo.features.map(feature => `\\n                                <p>• ${feature}</p>\\n                            `).join('')}\\n                        </div>\\n                    ` : ''}\\n                    <p class=\\\"world-background\\\">背景: ${worldInfo.background}</p>\\n                    <p class=\\\"world-cultivation\\\">修行建议: ${worldInfo.cultivationPath}</p>\\n                </div>\\n                <div class=\\\"summary-section\\\">\\n                    <h3>开局信息</h3>\\n                    <p class=\\\"start-name\\\">开局: ${startInfo.name}</p>\\n                    <p class=\\\"start-background\\\">背景: ${startInfo.background}</p>\\n                    <p class=\\\"start-description\\\">描述: ${startInfo.description}</p>\\n                    ${startInfo.features && startInfo.features.length > 0 ? `\\n                        <div class=\\\"start-features\\\">\\n                            <p>特点:</p>\\n                            ${startInfo.features.map(feature => `\\n                                <p>• ${feature}</p>\\n                            `).join('')}\\n                        </div>\\n                    ` : ''}\\n                </div>\\n                <div class=\\\"nav-buttons\\\" style=\\\"margin-top: 20px; text-align: center;\\\">\\n                    <button class=\\\"nav-btn start-game-btn\\\" style=\\\"background: linear-gradient(135deg, #4CAF50, #45a049);\\\">开始游戏</button>\\n                </div>\\n            </div>\\n        `;\\n\\n        this.elements.content.innerHTML = summaryHtml;\\n\\n        const startGameBtn = this.elements.content.querySelector('.start-game-btn');\\n        if (startGameBtn) {\\n          startGameBtn.addEventListener('click', () => {\\n            this.startGame(result);\\n          });\\n        }\\n      },\\n\\n      startGame(characterData) {\\n        const difficulty = CONFIG.DIFFICULTIES[characterData.difficulty];\\n        const era = CONFIG.ERAS[characterData.era];\\n        const world = characterData.world === 'customWorld' ? {\\n          name: gameState.customWorldName || '自定义世界',\\n          rank: gameState.customWorldRank || '',\\n          tradition: gameState.customWorldTradition || '',\\n          inheritance: gameState.customWorldInheritance || '',\\n          maxCultivator: gameState.customWorldMaxCultivator || '',\\n          description: gameState.customWorldDescription || '',\\n          features: gameState.customWorldFeatures ? gameState.customWorldFeatures.split(',').map(f => f.trim()) : [],\\n          background: gameState.customWorldBackground || '',\\n          cultivationPath: gameState.customWorldCultivationPath || ''\\n        } : CONFIG.WORLDS[characterData.world];\\n        const origin = CONFIG.ORIGINS[characterData.origin];\\n        const start = characterData.start === 'customStart' ? {\\n          name: gameState.customStartName || '自定义开局',\\n          description: gameState.customStartDescription || '',\\n          features: gameState.customStartFeatures ? gameState.customStartFeatures.split(',').map(f => f.trim()) : [],\\n          background: gameState.customStartBackground || '',\\n          bonus: gameState.customStartAttributes || {}\\n        } : CONFIG.STARTS[characterData.start];\\n\\n        // 设置所有变量的命令序列\\n        let commands = [];\\n\\n        // 设置核心属性\\n        const coreAttributes = ['heart', 'bone', 'wisdom', 'luck', 'power', 'charm'];\\n        coreAttributes.forEach(attr => {\\n          commands.push(`/setvar key=${attr} ${characterData.attributes.final[attr]}`);\\n        });\\n\\n        // 设置技艺属性\\n        const craftAttributes = ['martialArt', 'forging', 'alchemy'];\\n        craftAttributes.forEach(attr => {\\n          commands.push(`/setvar key=${attr} ${characterData.attributes.final[attr]}`);\\n        });\\n\\n        // 设置武学资质\\n        const martialAttributes = ['palmArt', 'fingerArt', 'fistArt', 'swordArt', 'spearArt', 'bladeArt'];\\n        martialAttributes.forEach(attr => {\\n          commands.push(`/setvar key=${attr} ${characterData.attributes.final[attr]}`);\\n        });\\n\\n\\n        commands.push(`/setvar key=lifespan ${characterData.attributes.final.lifespan}`);\\n        commands.push(`/setvar key=fame ${characterData.attributes.final.fame}`);\\n\\n        // 设置时代\\n        commands.push(`/setvar key=era ${era.name}`);\\n\\n        // 设置出身\\n        commands.push(`/setvar key=origin ${origin.name}`);\\n\\n        // 设置经历\\n        characterData.experiences.forEach((exp, index) => {\\n          const experience = exp === 'customExperience' ? {\\n            name: gameState.customExperienceName || '自定义经历',\\n            description: gameState.customExperienceDescription || '',\\n            features: gameState.customExperienceFeatures ? gameState.customExperienceFeatures.split(',').map(f => f.trim()) : []\\n          } : CONFIG.EXPERIENCES[exp];\\n          commands.push(`/setvar key=experience${index + 1} ${experience.name}`);\\n        });\\n        commands.push(`/setvar key=experienceCount ${characterData.experiences.length}`);\\n\\n        // 设置选择的世界\\n        commands.push(`/setvar key=world ${world.name}`);\\n        commands.push(`/setvar key=worldRank ${world.rank}`);\\n\\n        // 添加性别和种族相关的命令\\n        commands.push(`/setvar key=gender ${CONFIG.GENDERS[characterData.gender].name}`);\\n        commands.push(`/setvar key=race ${CONFIG.RACES[characterData.race].name}`);\\n\\n        // 添加开局相关的命令\\n        commands.push(`/setvar key=start ${start.name}`);\\n\\n        // 添加种族相关命令\\n        commands.push(`/setvar key=race ${CONFIG.RACES[characterData.race].name}`);\\n        if (characterData.race === 'yaoguai') {\\n          commands.push(`/setvar key=yaoType ${gameState.yaoType}`);\\n        }\\n\\n        // 准备输出消息\\n        let outputMessage = `{{user}}选择了${difficulty.name}（${difficulty.description}）难度`;\\n\\n        // 处理时代信息\\n        if (characterData.era === 'customEra') {\\n          const customEraName = gameState.customEraName || '自定义时代';\\n          outputMessage += `，将在${customEraName}开始修仙之旅。\\\\n\\\\n`;\\n          outputMessage += `所处时代：${customEraName}\\\\n`;\\n          outputMessage += `时代描述：${gameState.customEraDescription || ''}\\\\n`;\\n          outputMessage += '时代特点：\\\\n';\\n          if (gameState.customEraFeatures) {\\n            gameState.customEraFeatures.split(',').forEach(feature => {\\n              outputMessage += `- ${feature.trim()}\\\\n`;\\n            });\\n          }\\n          outputMessage += `时代背景：${gameState.customEraBackground || ''}\\\\n\\\\n`;\\n        } else {\\n          outputMessage += `，将在${era.name}的${world.name}开始修仙之旅。\\\\n\\\\n`;\\n          outputMessage += `所处时代：${era.name}\\\\n`;\\n          outputMessage += `时代描述：${era.description}\\\\n`;\\n          outputMessage += '时代特点：\\\\n';\\n          era.features.forEach(feature => {\\n            outputMessage += `- ${feature}\\\\n`;\\n          });\\n          outputMessage += `时代背景：${era.background}\\\\n\\\\n`;\\n        }\\n\\n        outputMessage += `性别：${CONFIG.GENDERS[characterData.gender].name}\\\\n`;\\n        outputMessage += `玩家角色描述：{{persona}}\\\\n`;\\n        outputMessage += `玩家姓名：{{user}}\\\\n`;\\n\\n        // 处理种族信息（只输出一次）\\n        if (characterData.race === 'customRace' && gameState.customRaceInfo) {\\n          outputMessage += `种族：${gameState.customRaceInfo.name || '自定义种族'}\\\\n`;\\n          outputMessage += `种族描述：${gameState.customRaceInfo.description || ''}\\\\n`;\\n          outputMessage += '种族特点：\\\\n';\\n          if (gameState.customRaceInfo.features) {\\n            gameState.customRaceInfo.features.split(',').forEach(feature => {\\n              outputMessage += `- ${feature.trim()}\\\\n`;\\n            });\\n          }\\n        } else {\\n          outputMessage += `种族：${CONFIG.RACES[characterData.race].name}${characterData.race === 'yaoguai' ? `(${gameState.yaoType})` : ''}\\\\n`;\\n          outputMessage += `种族描述：${CONFIG.RACES[characterData.race].description}\\\\n`;\\n          outputMessage += '种族特点：\\\\n';\\n          CONFIG.RACES[characterData.race].features.forEach(feature => {\\n            outputMessage += `- ${feature}\\\\n`;\\n          });\\n        }\\n        outputMessage += '\\\\n';\\n        outputMessage += `{{user}}的出身：\\\\n- ${origin.name}（${origin.features.join('，')}）\\\\n`;\\n        outputMessage += `${origin.description}\\\\n\\\\n`;\\n        outputMessage += '{{user}}的各项属性如下：\\\\n';\\n        Object.entries(characterData.attributes.final).forEach(([key, value]) => {\\n          outputMessage += `${CONFIG.ATTRIBUTES[key].name}：${value}\\\\n`;\\n        });\\n        outputMessage += '\\\\n{{user}}的经历：\\\\n';\\n        characterData.experiences.forEach(exp => {\\n          const experience = exp === 'customExperience' ? {\\n            name: gameState.customExperienceName || '自定义经历',\\n            description: gameState.customExperienceDescription || '',\\n            features: gameState.customExperienceFeatures ? gameState.customExperienceFeatures.split(',').map(f => f.trim()) : []\\n          } : CONFIG.EXPERIENCES[exp];\\n          outputMessage += `- ${experience.name}\\\\n`;\\n          outputMessage += `${experience.description}\\\\n`;\\n          if (experience.features && experience.features.length > 0) {\\n            experience.features.forEach(feature => {\\n              outputMessage += `  • ${feature}\\\\n`;\\n            });\\n          }\\n        });\\n        outputMessage += `\\\\n选择世界：${world.name}（${world.rank}级）\\\\n`;\\n        outputMessage += `传承体系：${world.tradition}\\\\n`;\\n        outputMessage += `特殊传承：${world.inheritance}\\\\n`;\\n        outputMessage += `最强者：${world.maxCultivator}\\\\n`;\\n        outputMessage += `大世界简介：${world.description}\\\\n`;\\n        outputMessage += '该大世界世界观：\\\\n';\\n        world.features.forEach(feature => {\\n          outputMessage += `- ${feature}\\\\n`;\\n        });\\n        outputMessage += `世界背景：${world.background}\\\\n`;\\n        outputMessage += `修行推荐：${world.cultivationPath}\\\\n`;\\n        outputMessage += `开局：${start.name}\\\\n`;\\n        outputMessage += `开局背景：${start.background}\\\\n`;\\n        outputMessage += `开局描述：${start.description}\\\\n`;\\n        outputMessage += '开局特点：\\\\n';\\n        start.features.forEach(feature => {\\n          outputMessage += `- ${feature}\\\\n`;\\n        });\\n\\n\\n        // 准备条目内容\\n        let entryContent = {\\n          \\\"基本信息\\\": {\\n            \\\"性别\\\": CONFIG.GENDERS[characterData.gender].name,\\n            \\\"种族\\\": CONFIG.RACES[characterData.race].name,\\n            \\\"时代\\\": era.name,\\n            \\\"难度\\\": difficulty.name,\\n            \\\"出身\\\": origin.name,\\n            \\\"开局\\\": start.name,\\n            \\\"开局背景\\\": start.background,\\n            \\\"开局特点\\\": start.features\\n          },\\n          \\\"核心属性\\\": characterData.attributes.base,\\n          \\\"最终属性\\\": characterData.attributes.final,\\n          \\\"经历\\\": characterData.experiences.map(exp => {\\n            const experience = exp === 'customExperience' ? {\\n              name: gameState.customExperienceName || '自定义经历',\\n              description: gameState.customExperienceDescription || '',\\n              features: gameState.customExperienceFeatures ? gameState.customExperienceFeatures.split(',').map(f => f.trim()) : []\\n            } : CONFIG.EXPERIENCES[exp];\\n            return {\\n              \\\"名称\\\": experience.name,\\n              \\\"描述\\\": experience.description,\\n              \\\"特点\\\": experience.features\\n            };\\n          }),\\n          \\\"所选世界\\\": {\\n            \\\"名称\\\": world.name,\\n            \\\"等级\\\": world.rank,\\n            \\\"传承\\\": world.tradition,\\n            \\\"特殊传承\\\": world.inheritance,\\n            \\\"最强者\\\": world.maxCultivator,\\n            \\\"简介\\\": world.description,\\n            \\\"特点\\\": world.features,\\n            \\\"背景\\\": world.background,\\n            \\\"修行建议\\\": world.cultivationPath\\n          }\\n        };\\n\\n        // 将所有命令连接起来\\n        commands.push(`/setentryfield file=1xianxia uid=10 field=content ${JSON.stringify(entryContent)}`);\\n\\n        // 设置constant为始终启用\\n        commands.push(`/setentryfield file=1xianxia uid=10 field=constant 1`);\\n\\n        // 设置position为聊天记录中\\n        commands.push(`/setentryfield file=1xianxia uid=10 field=position 4`);\\n\\n        // 设置role为System\\n        commands.push(`/setentryfield file=1xianxia uid=10 field=role 0`);\\n        commands.push(`/setvar key=userage 16`);\\n        commands.push(`/addvar key=lifespan 60`);\\n\\n        // 添加清空特定条目的命令\\n        commands.push('/setentryfield file=1xianxia uid=16 field=content \\\"\\\"');\\n        commands.push('/setentryfield file=1xianxia uid=17 field=content \\\"\\\"');\\n        commands.push('/setentryfield file=1xianxia uid=18 field=content \\\"\\\"');\\n\\n        // 发送消息和触发器保持不变\\n        commands.push(`/send ${outputMessage}`);\\n        commands.push('/trigger');\\n\\n        // 执行所有命令\\n        triggerSlash(commands.join('|'));\\n      },\\n\\n      async executeCommand(command) {\\n        try {\\n          console.log('Executing command:', command);\\n\\n          const response = await fetch('/api/command', {\\n            method: 'POST',\\n            headers: {\\n              'Content-Type': 'application/json',\\n              'Accept': 'application/json'\\n            },\\n            body: JSON.stringify({\\n              command,\\n              timestamp: Date.now() // 添加时间戳避免缓存\\n            })\\n          });\\n\\n          if (!response.ok) {\\n            const errorText = await response.text();\\n            throw new Error(`HTTP ${response.status}: ${errorText}`);\\n          }\\n\\n          const result = await response.text();\\n          console.log('Command result:', result);\\n          return result;\\n        } catch (error) {\\n          console.error(`Error executing command ${command}:`, error);\\n          throw new Error(`命令执行失败: ${error.message}`);\\n        }\\n      },\\n\\n      // 添加新方法用于原地更新属性总览\\n      updateAttributeSummaryInPlace() {\\n        const summaryElement = document.getElementById('attributeSummary');\\n        if (!summaryElement) return;\\n\\n        let summaryHTML = '<div class=\\\"attribute-summary\\\">';\\n\\n        // 添加自定义种族信息显示\\n        if (gameState.selectedRace === 'customRace' && gameState.customRaceInfo) {\\n          summaryHTML += `\\n                <div class=\\\"custom-info-section\\\">\\n                    <h3>自定义种族信息</h3>\\n                    <p><strong>种族名称：</strong>${gameState.customRaceInfo.name || '未命名'}</p>\\n                    <p><strong>种族描述：</strong>${gameState.customRaceInfo.description || '无描述'}</p>`;\\n\\n          if (gameState.customRaceInfo.features) {\\n            summaryHTML += '<p><strong>种族特点：</strong></p><ul>';\\n            gameState.customRaceInfo.features.split(',').forEach(feature => {\\n              if (feature.trim()) {\\n                summaryHTML += `<li>${feature.trim()}</li>`;\\n              }\\n            });\\n            summaryHTML += '</ul>';\\n          }\\n\\n          if (gameState.customRaceInfo.attributes) {\\n            summaryHTML += '<p><strong>种族属性加成：</strong></p><ul>';\\n            Object.entries(gameState.customRaceInfo.attributes).forEach(([attr, value]) => {\\n              if (value !== 0) {\\n                summaryHTML += `<li>${CONFIG.ATTRIBUTES[attr].name}: ${value > 0 ? '+' : ''}${value}</li>`;\\n              }\\n            });\\n            summaryHTML += '</ul>';\\n          }\\n          summaryHTML += '</div>';\\n        }\\n\\n        // 添加自定义时代信息显示\\n        if (gameState.selectedEra === 'customEra') {\\n          summaryHTML += `\\n                <div class=\\\"custom-info-section\\\">\\n                    <h3>自定义时代信息</h3>\\n                    <p><strong>时代名称：</strong>${gameState.customEraName || '未命名'}</p>\\n                    <p><strong>时代描述：</strong>${gameState.customEraDescription || '无描述'}</p>`;\\n\\n          if (gameState.customEraFeatures) {\\n            summaryHTML += '<p><strong>时代特点：</strong></p><ul>';\\n            gameState.customEraFeatures.split(',').forEach(feature => {\\n              if (feature.trim()) {\\n                summaryHTML += `<li>${feature.trim()}</li>`;\\n              }\\n            });\\n            summaryHTML += '</ul>';\\n          }\\n\\n          summaryHTML += `<p><strong>时代背景：</strong>${gameState.customEraBackground || '无背景'}</p>\\n                </div>`;\\n        }\\n\\n        // 显示最终属性值\\n        const finalAttributes = this.calculateAttributes();\\n        summaryHTML += `\\n            <div class=\\\"attributes-section\\\">\\n                <h3>当前属性</h3>\\n                <div class=\\\"attributes-grid\\\">`;\\n\\n        Object.entries(finalAttributes).forEach(([key, value]) => {\\n          const attributeInfo = CONFIG.ATTRIBUTES[key];\\n          if (attributeInfo) {\\n            summaryHTML += `\\n                    <div class=\\\"attribute-item\\\">\\n                        <span class=\\\"attribute-name\\\" title=\\\"${attributeInfo.description}\\\">${attributeInfo.name}</span>\\n                        <span class=\\\"attribute-value ${value > 0 ? 'positive' : value < 0 ? 'negative' : ''}\\\">${value}</span>\\n                    </div>`;\\n          }\\n        });\\n\\n        summaryHTML += '</div></div></div>';\\n        summaryElement.innerHTML = summaryHTML;\\n      },\\n\\n      showFinalSummary() {\\n        const selectedStart = CONFIG.STARTS[gameState.selectedStart];\\n        const selectedRace = CONFIG.RACES[gameState.selectedRace];\\n        const selectedEra = CONFIG.ERAS[gameState.selectedEra];\\n        const html = `\\n            <div class=\\\"final-summary\\\">\\n                <div class=\\\"section-title\\\">最终属性总览</div>\\n                <div class=\\\"summary-grid\\\">\\n                    ${Object.entries(CONFIG.ATTRIBUTES).map(([id, attr]) => {\\n          const value = gameState.calculateFinalAttributeValue(id);\\n          return `\\n                            <div class=\\\"summary-item\\\">\\n                                <span class=\\\"summary-name\\\">${attr.name}</span>\\n                                <span class=\\\"summary-value ${value > 0 ? 'positive' : value < 0 ? 'negative' : ''}\\\">${value}</span>\\n                            </div>\\n                        `;\\n        }).join('')}\\n                </div>\\n\\n                <div class=\\\"section-title\\\">时代详情</div>\\n                <div class=\\\"era-details detail-section\\\">\\n                    <div class=\\\"detail-header\\\">\\n                        <h3 class=\\\"detail-name\\\">${selectedEra.name}</h3>\\n                    </div>\\n                    <div class=\\\"detail-content\\\">\\n                        <div class=\\\"detail-description\\\">\\n                            <h4>时代描述</h4>\\n                            <p>${selectedEra.description}</p>\\n                        </div>\\n                        <div class=\\\"detail-features\\\">\\n                            <h4>时代特征</h4>\\n                            <ul>\\n                                ${selectedEra.features.map(feature => `\\n                                    <li>${feature}</li>\\n                                `).join('')}\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"detail-background\\\">\\n                            <h4>时代背景</h4>\\n                            <p>${selectedEra.background}</p>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"section-title\\\">种族详情</div>\\n                <div class=\\\"race-details detail-section\\\">\\n                    <div class=\\\"detail-header\\\">\\n                        <h3 class=\\\"detail-name\\\">${selectedRace.name}${gameState.yaoType ? ` - ${gameState.yaoType}` : ''}</h3>\\n                    </div>\\n                    <div class=\\\"detail-content\\\">\\n                        <div class=\\\"detail-description\\\">\\n                            <h4>种族描述</h4>\\n                            <p>${selectedRace.description}</p>\\n                        </div>\\n                        <div class=\\\"detail-features\\\">\\n                            <h4>种族特征</h4>\\n                            <ul>\\n                                ${selectedRace.features.map(feature => `\\n                                    <li>${feature}</li>\\n                                `).join('')}\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"race-bonus\\\">\\n                            <h4>种族属性加成</h4>\\n                            <div class=\\\"bonus-grid\\\">\\n                                ${Object.entries(selectedRace.bonus || {}).map(([attr, value]) => `\\n                                    <div class=\\\"bonus-item ${value > 0 ? 'positive' : 'negative'}\\\">\\n                                        ${CONFIG.ATTRIBUTES[attr].name} ${value > 0 ? '+' : ''}${value}\\n                                    </div>\\n                                `).join('')}\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"section-title\\\">开局详情</div>\\n                <div class=\\\"start-details detail-section\\\">\\n                    <div class=\\\"detail-header\\\">\\n                        <h3 class=\\\"detail-name\\\">${selectedStart.name}</h3>\\n                    </div>\\n                    <div class=\\\"detail-content\\\">\\n                        <div class=\\\"detail-description\\\">\\n                            <h4>开局描述</h4>\\n                            <p>${selectedStart.description}</p>\\n                        </div>\\n                        <div class=\\\"detail-features\\\">\\n                            <h4>开局特征</h4>\\n                            <ul>\\n                                ${selectedStart.features.map(feature => `\\n                                    <li>${feature}</li>\\n                                `).join('')}\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"detail-background\\\">\\n                            <h4>开局背景</h4>\\n                            <p>${selectedStart.background || '暂无背景描述'}</p>\\n                        </div>\\n                        <div class=\\\"start-bonus\\\">\\n                            <h4>开局属性加成</h4>\\n                            <div class=\\\"bonus-grid\\\">\\n                                ${Object.entries(selectedStart.bonus || {}).map(([attr, value]) => `\\n                                    <div class=\\\"bonus-item ${value > 0 ? 'positive' : 'negative'}\\\">\\n                                        ${CONFIG.ATTRIBUTES[attr].name} ${value > 0 ? '+' : ''}${value}\\n                                    </div>\\n                                `).join('')}\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        `;\\n\\n        this.elements.content.innerHTML = html;\\n\\n        // 添加新样式\\n        const styles = `\\n            .detail-section {\\n                background: rgba(255, 255, 255, 0.9);\\n                border-radius: 10px;\\n                padding: 20px;\\n                margin-top: 20px;\\n                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\n            }\\n\\n            .detail-header {\\n                border-bottom: 2px solid var(--primary-color);\\n                margin-bottom: 15px;\\n                padding-bottom: 10px;\\n            }\\n\\n            .detail-name {\\n                color: var(--primary-color);\\n                font-size: 1.5em;\\n                margin: 0;\\n            }\\n\\n            .detail-content {\\n                display: grid;\\n                gap: 20px;\\n            }\\n\\n            .detail-content h4 {\\n                color: var(--text-secondary);\\n                margin: 0 0 10px 0;\\n                font-size: 1.2em;\\n            }\\n\\n            .detail-features ul {\\n                list-style: none;\\n                padding: 0;\\n                margin: 0;\\n            }\\n\\n            .detail-features li {\\n                padding: 5px 0;\\n                position: relative;\\n                padding-left: 20px;\\n            }\\n\\n            .detail-features li:before {\\n                content: \\\"•\\\";\\n                color: var(--primary-color);\\n                position: absolute;\\n                left: 0;\\n            }\\n\\n            .section-title {\\n                font-size: 1.8em;\\n                color: var(--text-primary);\\n                text-align: center;\\n                margin: 30px 0 20px;\\n                padding-bottom: 10px;\\n                border-bottom: 2px solid var(--primary-color);\\n            }\\n        `;\\n\\n        const styleElement = document.createElement('style');\\n        styleElement.textContent = styles;\\n        document.head.appendChild(styleElement);\\n      },\\n\\n      // 添加相应的样式\\n      addStyles() {\\n        const styles = `\\n            .start-details {\\n                background: rgba(255, 255, 255, 0.9);\\n                border-radius: 10px;\\n                padding: 20px;\\n                margin-top: 20px;\\n                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\n            }\\n\\n            .start-header {\\n                border-bottom: 2px solid var(--primary-color);\\n                margin-bottom: 15px;\\n                padding-bottom: 10px;\\n            }\\n\\n            .start-name {\\n                color: var(--primary-color);\\n                font-size: 1.5em;\\n                margin: 0;\\n            }\\n\\n            .start-content {\\n                display: grid;\\n                gap: 20px;\\n            }\\n\\n            .start-content h4 {\\n                color: var(--text-secondary);\\n                margin: 0 0 10px 0;\\n                font-size: 1.2em;\\n            }\\n\\n            .start-features ul {\\n                list-style: none;\\n                padding: 0;\\n                margin: 0;\\n            }\\n\\n            .start-features li {\\n                padding: 5px 0;\\n                position: relative;\\n                padding-left: 20px;\\n            }\\n\\n            .start-features li:before {\\n                content: \\\"•\\\";\\n                color: var(--primary-color);\\n                position: absolute;\\n                left: 0;\\n            }\\n\\n            .bonus-grid {\\n                display: grid;\\n                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\\n                gap: 10px;\\n            }\\n\\n            .bonus-item {\\n                padding: 5px 10px;\\n                border-radius: 5px;\\n                text-align: center;\\n            }\\n\\n            .bonus-item.positive {\\n                background: rgba(76, 175, 80, 0.1);\\n                color: var(--success-color);\\n            }\\n\\n            .bonus-item.negative {\\n                background: rgba(244, 67, 54, 0.1);\\n                color: var(--error-color);\\n            }\\n        `;\\n\\n        const styleElement = document.createElement('style');\\n        styleElement.textContent = styles;\\n        document.head.appendChild(styleElement);\\n      }\\n    };\\n\\n\\n    // 初始化应用\\n    document.addEventListener('DOMContentLoaded', () => {\\n      UI.initialize();\\n    });\\n  </script>\\n</body>\\n\\n</html>\\n```\",\"trimStrings\":[],\"placement\":[2],\"substituteRegex\":0,\"minDepth\":null,\"maxDepth\":null,\"markdownOnly\":true,\"promptOnly\":false},{\"id\":\"5a75432f-a72b-468a-8445-4a3968f15df8\",\"scriptName\":\"poaries水印\",\"disabled\":false,\"runOnEdit\":true,\"findRegex\":\"【poaries】\",\"replaceString\":\"```\\n<!DOCTYPE html>\\n<html>\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <title>流体动效 - POARIES</title>\\n    <link href=\\\"https://fonts.googleapis.com/css2?family=Syncopate:wght@700&family=Montserrat:wght@300;400;700&display=swap\\\" rel=\\\"stylesheet\\\">\\n    <style>\\n    @import url('https://static.zeoseven.com/zsft/364/main/result.css');\\n        * {\\n            margin: 0;\\n            padding: 0;\\n            box-sizing: border-box;\\n        }\\n\\n        body {\\n            margin: 0;\\n            height: 700px;\\n            background: #000;\\n            font-family: 'Montserrat',\\\"寒蝉无机体 Wide\\\";\\n            color: #fff;\\n            overflow: hidden;\\n            background-image: url('https://files.catbox.moe/1a5orm.gif');\\n            background-size: cover;\\n            background-position: center;\\n            background-repeat: no-repeat;\\n        }\\n\\n        .fluid-container {\\n            height: 100vh;\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: center;\\n            align-items: center;\\n            background: linear-gradient(\\n                135deg,\\n                rgba(0, 0, 0, 0.8) 0%,\\n                rgba(0, 0, 0, 0.6) 100%\\n            );\\n            position: relative;\\n        }\\n\\n        .title-container {\\n            position: relative;\\n            z-index: 2;\\n        }\\n\\n        .main-title {\\n            font-family: 'Syncopate', sans-serif;\\n            font-size: 6rem;\\n            font-weight: 700;\\n            color: transparent;\\n            -webkit-text-stroke: 1px rgba(255, 255, 255, 0.8);\\n            letter-spacing: 0.2em;\\n            position: relative;\\n            transition: all 0.3s ease;\\n        }\\n\\n        .main-title:hover {\\n            color: rgba(255, 255, 255, 0.9);\\n            -webkit-text-stroke: 0;\\n            text-shadow: 0 0 20px rgba(255, 255, 255, 0.5);\\n        }\\n\\n        .subtitle {\\n            font-family: \\\"寒蝉无机体 Wide\\\", sans-serif;\\n            font-weight: normal;\\n            font-size: 1.2rem;\\n            letter-spacing: 1em;\\n            text-transform: uppercase;\\n            margin-top: 2rem;\\n            opacity: 0;\\n            animation: fadeIn 2s ease forwards;\\n            animation-delay: 1s;\\n        }\\n\\n        .fluid-circle {\\n            position: absolute;\\n            border-radius: 50%;\\n            background: rgba(255, 255, 255, 0.05);\\n            filter: blur(60px);\\n            animation: fluidMove 20s infinite alternate;\\n            mix-blend-mode: overlay;\\n        }\\n\\n        .circle1 {\\n            width: 400px;\\n            height: 400px;\\n            top: 20%;\\n            left: 30%;\\n            animation-delay: 0s;\\n            background: rgba(100, 200, 255, 0.1);\\n        }\\n\\n        .circle2 {\\n            width: 600px;\\n            height: 600px;\\n            bottom: 10%;\\n            right: 20%;\\n            animation-delay: -5s;\\n            background: rgba(255, 100, 255, 0.1);\\n        }\\n\\n        .circle3 {\\n            width: 300px;\\n            height: 300px;\\n            top: 40%;\\n            right: 30%;\\n            animation-delay: -10s;\\n            background: rgba(255, 200, 100, 0.1);\\n        }\\n\\n        .navigation {\\n            position: fixed;\\n            display: flex;\\n            gap: 2rem;\\n            padding: 2rem;\\n            z-index: 3;\\n        }\\n\\n        .nav-bottom {\\n            bottom: 0;\\n            left: 0;\\n        }\\n\\n        .nav-link {\\n            color: rgba(255, 255, 255, 0.6);\\n            text-decoration: none;\\n            font-size: 0.9rem;\\n            letter-spacing: 0.2em;\\n            text-transform: uppercase;\\n            transition: all 0.3s ease;\\n            position: relative;\\n        }\\n\\n        .nav-link::after {\\n            content: '';\\n            position: absolute;\\n            bottom: -5px;\\n            left: 0;\\n            width: 0;\\n            height: 1px;\\n            background: #fff;\\n            transition: width 0.3s ease;\\n        }\\n\\n        .nav-link:hover {\\n            color: #fff;\\n        }\\n\\n        .nav-link:hover::after {\\n            width: 100%;\\n        }\\n\\n        .copyright {\\n            position: fixed;\\n            bottom: 2rem;\\n            right: 2rem;\\n            font-size: 0.8rem;\\n            color: rgba(255, 255, 255, 0.4);\\n            letter-spacing: 0.1em;\\n            z-index: 3;\\n        }\\n\\n        .copyright a {\\n            color: rgba(255, 255, 255, 0.6);\\n            text-decoration: none;\\n            transition: all 0.3s ease;\\n        }\\n\\n        .copyright a:hover {\\n            color: #fff;\\n        }\\n\\n        @keyframes fluidMove {\\n            0% {\\n                transform: translate(0, 0) scale(1);\\n            }\\n            100% {\\n                transform: translate(100px, 50px) scale(1.2);\\n            }\\n        }\\n\\n        @keyframes fadeIn {\\n            from { opacity: 0; transform: translateY(20px); }\\n            to { opacity: 1; transform: translateY(0); }\\n        }\\n        .start-button {\\n        font-family: \\\"寒蝉无机体 Wide\\\", sans-serif;\\n        font-weight: normal;\\n        font-size: 0.9rem;\\n        color: rgba(255, 255, 255, 0.8);\\n        letter-spacing: 0.2em;\\n        margin-top: 1rem;\\n        padding: 10px 20px;\\n        background: rgba(255, 255, 255, 0.1);\\n        border: 1px solid rgba(255, 255, 255, 0.3);\\n        border-radius: 5px;\\n        cursor: pointer;\\n        transition: all 0.3s ease;\\n    }\\n\\n    .start-button:hover {\\n        background: rgba(255, 255, 255, 0.2);\\n        transform: translateY(-2px);\\n    }\\n\\n/* 基础响应式设置 */\\n@media screen and (max-width: 1200px) {\\n    .main-title {\\n        font-size: 5rem;\\n    }\\n    \\n    .fluid-circle {\\n        transform-origin: center;\\n        scale: 0.8;\\n    }\\n}\\n\\n\\n/* 手机设备 - 屏幕宽度小于 768px */\\n@media screen and (max-width: 768px) {\\n    .fluid-container {\\n        padding: 20px;\\n    }\\n    \\n    .main-title {\\n        font-size: 2.5rem;\\n        letter-spacing: 0.1em;\\n        -webkit-text-stroke: 0.5px rgba(255, 255, 255, 0.8);\\n    }\\n    \\n    .subtitle {\\n        font-size: 0.9rem;\\n        letter-spacing: 0.5em;\\n        margin-top: 1rem;\\n    }\\n    \\n    .fluid-circle {\\n        filter: blur(30px);\\n        transform-origin: center;\\n        scale: 0.5;\\n    }\\n    \\n    .circle1 {\\n        width: 200px;\\n        height: 200px;\\n        top: 15%;\\n        left: 20%;\\n    }\\n    \\n    .circle2 {\\n        width: 300px;\\n        height: 300px;\\n        bottom: 5%;\\n        right: 10%;\\n    }\\n    \\n    .circle3 {\\n        width: 150px;\\n        height: 150px;\\n        top: 35%;\\n        right: 20%;\\n    }\\n    \\n    .navigation {\\n        padding: 1rem;\\n        justify-content: center;\\n        width: 100%;\\n    }\\n    \\n    .nav-link {\\n        font-size: 0.8rem;\\n        letter-spacing: 0.1em;\\n        padding: 8px 16px;\\n    }\\n    \\n    .copyright {\\n        position: relative;\\n        bottom: auto;\\n        right: auto;\\n        text-align: center;\\n        padding: 1rem;\\n        width: 100%;\\n        font-size: 0.7rem;\\n    }\\n    \\n    .start-button {\\n        font-size: 0.8rem;\\n        padding: 12px 24px;\\n        width: 80%;\\n        max-width: 300px;\\n        margin: 1rem auto;\\n    }\\n}\\n/* 在现有的 style 标签内更新或添加以下媒体查询代码 */\\n\\n/* 基础响应式设置 */\\n@media screen and (max-width: 1400px) {\\n    .main-title {\\n        font-size: 5rem;\\n    }\\n    \\n    .subtitle {\\n        font-size: 1.1rem;\\n        letter-spacing: 0.8em;\\n    }\\n    \\n    .fluid-circle {\\n        transform-origin: center;\\n        scale: 0.9;\\n    }\\n}\\n\\n/* 平板设备 - 屏幕宽度小于 1024px */\\n@media screen and (max-width: 1024px) {\\n    .main-title {\\n        font-size: 4rem;\\n        letter-spacing: 0.15em;\\n    }\\n    \\n    .subtitle {\\n        font-size: 1rem;\\n        letter-spacing: 0.6em;\\n        margin-top: 1.5rem;\\n    }\\n    \\n    .fluid-circle {\\n        filter: blur(50px);\\n        scale: 0.7;\\n    }\\n    \\n    .circle1 {\\n        width: 350px;\\n        height: 350px;\\n    }\\n    \\n    .circle2 {\\n        width: 500px;\\n        height: 500px;\\n    }\\n    \\n    .circle3 {\\n        width: 250px;\\n        height: 250px;\\n    }\\n    \\n    .start-button {\\n        font-size: 0.85rem;\\n        padding: 12px 30px;\\n    }\\n}\\n\\n/* 手机设备 - 屏幕宽度小于 768px */\\n@media screen and (max-width: 768px) {\\n    .fluid-container {\\n        padding: 20px;\\n        justify-content: center;\\n    }\\n    \\n    .title-container {\\n        text-align: center;\\n        width: 100%;\\n        padding: 0 20px;\\n    }\\n    \\n    .main-title {\\n        font-size: 3rem;\\n        letter-spacing: 0.1em;\\n        -webkit-text-stroke: 0.5px rgba(255, 255, 255, 0.8);\\n    }\\n    \\n    .subtitle {\\n        font-size: 0.9rem;\\n        letter-spacing: 0.5em;\\n        margin-top: 1rem;\\n        margin-bottom: 1.5rem;\\n    }\\n    \\n    .fluid-circle {\\n        filter: blur(40px);\\n        scale: 0.6;\\n        opacity: 0.8;\\n    }\\n    \\n    .circle1 {\\n        width: 250px;\\n        height: 250px;\\n        top: 15%;\\n        left: 20%;\\n    }\\n    \\n    .circle2 {\\n        width: 400px;\\n        height: 400px;\\n        bottom: 5%;\\n        right: 10%;\\n    }\\n    \\n    .circle3 {\\n        width: 200px;\\n        height: 200px;\\n        top: 35%;\\n        right: 20%;\\n    }\\n    \\n    .navigation {\\n        position: relative;\\n        padding: 1rem;\\n        justify-content: center;\\n        width: 100%;\\n        margin-top: 2rem;\\n    }\\n    \\n    .nav-link {\\n        font-size: 0.8rem;\\n        letter-spacing: 0.1em;\\n        padding: 10px 20px;\\n        background: rgba(255, 255, 255, 0.1);\\n        border-radius: 4px;\\n    }\\n    \\n    .nav-link::after {\\n        display: none;\\n    }\\n    \\n    .copyright {\\n        position: relative;\\n        text-align: center;\\n        padding: 1rem;\\n        width: 100%;\\n        font-size: 0.7rem;\\n        margin-top: 1rem;\\n    }\\n    \\n    .start-button {\\n        font-size: 0.8rem;\\n        padding: 12px 24px;\\n        width: 80%;\\n        max-width: 300px;\\n        margin: 1rem auto;\\n        display: block;\\n        background: rgba(255, 255, 255, 0.15);\\n    }\\n    \\n    .start-button:hover {\\n        background: rgba(255, 255, 255, 0.25);\\n    }\\n}\\n\\n/* 小型手机设备 - 屏幕宽度小于 480px */\\n@media screen and (max-width: 480px) {\\n    .main-title {\\n        font-size: 2.2rem;\\n        letter-spacing: 0.05em;\\n    }\\n    \\n    .subtitle {\\n        font-size: 0.8rem;\\n        letter-spacing: 0.3em;\\n        margin-bottom: 1rem;\\n    }\\n    \\n    .fluid-circle {\\n        filter: blur(30px);\\n        scale: 0.5;\\n    }\\n    \\n    .circle1 {\\n        width: 200px;\\n        height: 200px;\\n    }\\n    \\n    .circle2 {\\n        width: 300px;\\n        height: 300px;\\n    }\\n    \\n    .circle3 {\\n        width: 150px;\\n        height: 150px;\\n    }\\n    \\n    .start-button {\\n        width: 90%;\\n        font-size: 0.75rem;\\n        padding: 10px 20px;\\n    }\\n    \\n    .copyright img {\\n        height: 16px!important;\\n    }\\n}\\n\\n/* 处理横屏模式 */\\n@media screen and (max-height: 600px) and (orientation: landscape) {\\n    .fluid-container {\\n        padding: 1rem;\\n    }\\n    \\n    .main-title {\\n        font-size: 2.5rem;\\n    }\\n    \\n    .subtitle {\\n        margin: 0.5rem 0;\\n        font-size: 0.8rem;\\n    }\\n    \\n    .start-button {\\n        margin: 0.5rem auto;\\n        padding: 8px 20px;\\n    }\\n    \\n    .fluid-circle {\\n        scale: 0.4;\\n    }\\n    \\n    .navigation,\\n    .copyright {\\n        padding: 0.5rem;\\n    }\\n}\\n\\n/* 优化触摸设备交互 */\\n@media (hover: none) and (pointer: coarse) {\\n    .start-button,\\n    .nav-link {\\n        -webkit-tap-highlight-color: transparent;\\n        transition: transform 0.2s ease;\\n    }\\n    \\n    .start-button:active,\\n    .nav-link:active {\\n        transform: scale(0.98);\\n    }\\n    \\n    .main-title {\\n        -webkit-tap-highlight-color: transparent;\\n    }\\n}\\n\\n    </style>\\n</head>\\n<body>\\n    <div class=\\\"fluid-container\\\">\\n        <div class=\\\"fluid-circle circle1\\\"></div>\\n        <div class=\\\"fluid-circle circle2\\\"></div>\\n        <div class=\\\"fluid-circle circle3\\\"></div>\\n\\n        <div class=\\\"title-container\\\">\\n    <div class=\\\"subtitle\\\">卡片作者</div>\\n    <h1 class=\\\"main-title\\\">POARIES</h1>\\n    <button class=\\\"start-button\\\" onclick=\\\"startGame()\\\">开始游戏</button>\\n</div>\\n\\n\\n        <nav class=\\\"navigation nav-bottom\\\">\\n            <a href=\\\"https://discord.gg/nJecqe5HUx\\\" class=\\\"nav-link\\\" target=\\\"_blank\\\">DISCORD</a>\\n        </nav>\\n\\n        <div class=\\\"copyright\\\">\\n            <p xmlns:cc=\\\"http://creativecommons.org/ns#\\\" >This work by <span property=\\\"cc:attributionName\\\">POARIES</span> is licensed under <a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/?ref=chooser-v1\\\" target=\\\"_blank\\\" rel=\\\"license noopener noreferrer\\\" style=\\\"display:inline-block;\\\">CC BY-NC-SA 4.0<img style=\\\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\\\" src=\\\"https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1\\\" alt=\\\"\\\"><img style=\\\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\\\" src=\\\"https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1\\\" alt=\\\"\\\"><img style=\\\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\\\" src=\\\"https://mirrors.creativecommons.org/presskit/icons/nc.svg?ref=chooser-v1\\\" alt=\\\"\\\"><img style=\\\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\\\" src=\\\"https://mirrors.creativecommons.org/presskit/icons/sa.svg?ref=chooser-v1\\\" alt=\\\"\\\"></a></p>\\n        </div>\\n    </div>\\n<script>\\n     function startGame() {\\n        setChatMessage(\\\"【kjjl】\\\", getCurrentMessageId());\\n    }\\n\\n</script>\\n</body>\\n</html>\\n```\",\"trimStrings\":[],\"placement\":[2],\"substituteRegex\":0,\"minDepth\":null,\"maxDepth\":null,\"markdownOnly\":true,\"promptOnly\":false}],\"sd_character_prompt\":{\"positive\":\"NSFW, masterpiece, Long shot / Wide shot,Medium shot,Close-up\",\"negative\":\"Extreme close-up\"}},\"group_only_greetings\":[],\"character_book\":{\"entries\":[{\"id\":0,\"keys\":[\"口交、肛、深喉、乳交、足交、窒息、恐慌、害羞、惧怕、恐惧、服侍、性行为、激烈、邪恶、调戏、恶趣味\",\"低笑\",\"恶劣\",\"征服\",\"迷茫\",\"哭\",\"性行为\",\"插入\",\"精液\",\"口交\",\"肛\",\"舔\",\"吸\",\"干\",\"胸部\",\"中出\",\"射\",\"性爱\",\"穴\",\"吻\",\"亲\",\"抱\",\"低笑\",\"恶劣\",\"征服\",\"迷茫\",\"哭\",\"脱\",\"精液\",\"欲望\",\"诱惑\",\"欲望\",\"诱惑\",\"抱\",\"吻\",\"舔\",\"姿势\",\"体位\"],\"secondary_keys\":[],\"comment\":\"体位\",\"content\":\"<体位>\\n**你使用体位时不明说体位名称，直接描述动作与姿势**\\n传教士式 (仰卧抬腿式, 交叉传教士式, 睡莲式, 锁腿式)\\n女牛仔式 (反向女牛仔式, 俯身女上位, 蹲式女上位)\\n骑马式 (女上位，女方主导节奏的通称)\\n坐莲式 (女上位，双方面对面坐姿)\\nX式 (女上位，双方腿部伸展交叉)\\n侧坐式 (女上)\\n跪姿后入式 (狗仔式, 猫式 [后入], 祷告式后入)\\n俯卧后入式 (蛙式后入)\\n站姿后入式\\n侧卧后入式\\n汤匙式 (反向汤匙式)\\n侧卧面对面式 (剪刀式, 侧卧交缠式, 侧卧莲花式)\\n面对面坐姿 (同向坐姿 [背对], 地板坐姿, 跨坐拥抱式)\\n站姿 (拥抱前入式, 拥抱后入式, 依靠式 [靠墙])\\n桥式\\n淋浴式\\n特殊体位\\n火车便当 (反向)\\n进阶传教士式 (钉十字架式, 高脚杯式, V式)\\n家具/场地辅助式 (桌面后入式, 台面式, 椅子欢愉, 阶梯式)\\n摇椅式 (坐姿变化)\\n站姿技巧式 (芭蕾舞者式, 单脚站立式, 钉墙式)\\n边缘式 (瀑布式 [床沿/桌沿])\\n独轮车式\\n吊床式\\n站立69式\\n高技巧式 (螺旋桨式, 倒挂金钩, 飞天式)\\n双人瑜珈变化式\\n</体位>\",\"constant\":true,\"selective\":true,\"insertion_order\":100,\"enabled\":true,\"position\":\"after_char\",\"use_regex\":true,\"extensions\":{\"position\":4,\"exclude_recursion\":true,\"display_index\":0,\"probability\":100,\"useProbability\":true,\"depth\":4,\"selectiveLogic\":0,\"group\":\"\",\"group_override\":false,\"group_weight\":100,\"prevent_recursion\":true,\"delay_until_recursion\":false,\"scan_depth\":null,\"match_whole_words\":null,\"use_group_scoring\":false,\"case_sensitive\":null,\"automation_id\":\"\",\"role\":0,\"vectorized\":false,\"sticky\":0,\"cooldown\":0,\"delay\":0}},{\"id\":1,\"keys\":[\"口交、肛、深喉、乳交、足交、窒息、恐慌、害羞、惧怕、恐惧、服侍、性行为、激烈、邪恶、调戏、恶趣味\",\"低笑\",\"恶劣\",\"征服\",\"迷茫\",\"哭\",\"性行为\",\"插入\",\"精液\",\"口交\",\"肛\",\"舔\",\"吸\",\"干\",\"胸部\",\"中出\",\"射\",\"性爱\",\"穴\",\"吻\",\"亲\",\"抱\",\"低笑\",\"恶劣\",\"征服\",\"迷茫\",\"哭\",\"脱\",\"精液\",\"欲望\",\"诱惑\",\"抱\",\"吻\",\"舔\",\"性交\"],\"secondary_keys\":[],\"comment\":\"性交方式\",\"content\":\"<性交方式>\\n<性交方式_小>\\n(小) 可以同时进行的辅助或感官类活动\\n手指对阴蒂及外阴抚摸与按压(对女爱抚)\\n刻意延迟或控制性高潮的强度与时机 (高潮控制/延迟)\\n全身肌肤相互紧贴与摩擦\\n透过舞蹈或挑逗性动作进行诱惑 (情欲舞蹈/挑逗动作)\\n嘴唇与嘴唇亲吻与吸吮(亲吻)\\n舌头于口腔内交缠与探索(舌吻)\\n口腔对乳头吸吮与舔舐(吸奶)\\n手对乳房及乳头抚摸与揉捏(玩奶)\\n口腔对颈部及耳垂等敏感带亲吻与吸吮\\n手部抚摸或按摩全身性感带\\n臀部揉捏与拍打\\n注视与欣赏身体\\n感受声音与喘息\\n感受体味与气息\\n品尝肌肤与体液\\n对特定敏感区域施以搔痒挑逗 (情趣搔痒)\\n性爱后裸体相拥以增进肌肤亲密感 (裸裎)\\n对肌肤或特定部位施以轻柔啃咬 (轻咬)\\n向耳廓吹气或耳边细语挑逗 (吹耳)\\n轻柔地拉扯或抚弄发丝 (玩发)\\n情趣用品辅助按摩或刺激 (情趣玩具辅助)\\n角色扮演增进情趣 (情境扮演)\\n性感言语或指令挑逗 (言语挑逗)\\n观察自慰 (观赏自慰)\\n对足部或脚趾进行亲吻、吸吮或舔舐 (足部亲舔)\\n使用情色言语描述幻想或赞美对方身体 (情色话语/Dirty Talk)\\n</性交方式_小>\\n<性交方式_大>\\n(大) 作为主要焦点的“X交”类活动\\n阴茎对阴蒂刺激(素股)\\n口腔对肛门舔舐(舔肛)\\n阴茎与阴道结合(性交)\\n阴茎与肛门结合(肛交)\\n口腔对阴茎吸吮与舔舐(对男口交)\\n口腔对外阴及阴蒂吸吮与舔舐(对女口交)\\n手指对阴茎抚摸与搓揉(对男手交)\\n手指插入阴道探索与刺激(对女指交)\\n外阴与外阴相互摩擦(女女磨豆腐)\\n阴茎与身体其他部位摩擦 (如大腿、腹部)\\n阴茎于乳房间摩擦 (乳交)\\n运用足部对生殖器或身体进行刺激 (足交)\\n阴茎对外阴摩擦 (素股) \\n身体部位对生殖器的摩擦 (如大腿、腋下等) (体交)\\n一方以臀部或生殖器坐于另一方脸部进行口部刺激 (颜面骑乘/坐脸)\\n运用假体阳具或其它棒状物对阴道进行插入 (假体插入式性爱)\\n</性交方式_大>\\n</性交方式>\\n\",\"constant\":true,\"selective\":true,\"insertion_order\":100,\"enabled\":true,\"position\":\"after_char\",\"use_regex\":true,\"extensions\":{\"position\":4,\"exclude_recursion\":true,\"display_index\":1,\"probability\":100,\"useProbability\":true,\"depth\":4,\"selectiveLogic\":0,\"group\":\"\",\"group_override\":false,\"group_weight\":100,\"prevent_recursion\":true,\"delay_until_recursion\":false,\"scan_depth\":null,\"match_whole_words\":null,\"use_group_scoring\":false,\"case_sensitive\":null,\"automation_id\":\"\",\"role\":0,\"vectorized\":false,\"sticky\":0,\"cooldown\":0,\"delay\":0}},{\"id\":4,\"keys\":[\"现代轻小说\",\"青春恋爱\"],\"secondary_keys\":[],\"comment\":\"现代青春恋爱<地点表>\",\"content\":\"<现代轻小说地点表>\\n主角的公寓/独居套房\\n便利商店 (打工/购物/深夜聚集地)\\n家庭餐厅 (聚餐/讨论/约会)\\n咖啡厅 (放松/读书/偶遇)\\n书店 (寻找书籍/打发时间/触发事件)\\n游戏中心/大型电玩场\\n卡拉OK\\n电影院\\n公园 (散步/谈心/秘密基地)\\n河堤/河岸边 (散心/独处/看夕阳)\\n商业街/商店街 (购物/逛街/祭典)\\n百货公司/购物中心\\n电车站/公车站 (通勤/偶遇/分别)\\n主题乐园/游乐园\\n水族馆\\n动物园\\n爱情旅馆\\n图书馆 (市立/大学)\\n医院 (探病/受伤/神秘事件)\\n神社/寺庙 (参拜/祭典/异空间入口)\\nLive House/小型展演空间\\n漫画店/动漫周边店\\n天桥/陆桥\\n展望台/高塔 (看夜景)\\n海边/沙滩 (暑假/试胆大会)\\n山区/森林 (露营/远足/迷路)\\n温泉旅馆/温泉街\\n打工场所 (例: 面包店、花店)\\n学校屋顶\\n保健室\\n教室\\n学校体育用品仓库\\n广场 (车站前/市中心)\\n祭典的摊位区/会场\\n</现代轻小说地点表>\",\"constant\":false,\"selective\":true,\"insertion_order\":100,\"enabled\":true,\"position\":\"after_char\",\"use_regex\":true,\"extensions\":{\"position\":4,\"exclude_recursion\":false,\"display_index\":4,\"probability\":100,\"useProbability\":true,\"depth\":4,\"selectiveLogic\":0,\"group\":\"\",\"group_override\":false,\"group_weight\":100,\"prevent_recursion\":true,\"delay_until_recursion\":false,\"scan_depth\":null,\"match_whole_words\":null,\"use_group_scoring\":false,\"case_sensitive\":null,\"automation_id\":\"\",\"role\":0,\"vectorized\":false,\"sticky\":0,\"cooldown\":0,\"delay\":0}}],\"name\":\"角色推进世界书DLC\"}},\"create_date\":\"2025-5-7 @18h 09m 20s 705ms\",\"chat\":\"1111 - 2025-05-27@19h21m40s\"}"}